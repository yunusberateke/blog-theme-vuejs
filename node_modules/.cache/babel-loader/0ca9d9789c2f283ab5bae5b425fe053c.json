{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/observer.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/observer.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKCi8qKgogKiBAbGljZW5zZSBDb3B5cmlnaHQgKGMpIDIwMDMtMjAyMSwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICogRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cHM6Ly9ja2VkaXRvci5jb20vbGVnYWwvY2tlZGl0b3Itb3NzLWxpY2Vuc2UKICovCgovKioKICogQG1vZHVsZSBlbmdpbmUvdmlldy9vYnNlcnZlci9vYnNlcnZlcgogKi8KaW1wb3J0IERvbUVtaXR0ZXJNaXhpbiBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXV0aWxzL3NyYy9kb20vZW1pdHRlcm1peGluJzsKaW1wb3J0IG1peCBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXV0aWxzL3NyYy9taXgnOwovKioKICogQWJzdHJhY3QgYmFzZSBvYnNlcnZlciBjbGFzcy4gT2JzZXJ2ZXJzIGFyZSBjbGFzc2VzIHdoaWNoIGxpc3RlbiB0byBET00gZXZlbnRzLCBkbyB0aGUgcHJlbGltaW5hcnkKICogcHJvY2Vzc2luZyBhbmQgZmlyZSBldmVudHMgb24gdGhlIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvZG9jdW1lbnR+RG9jdW1lbnR9IG9iamVjdHMuCiAqIE9ic2VydmVycyBjYW4gYWxzbyBhZGQgZmVhdHVyZXMgdG8gdGhlIHZpZXcsIGZvciBpbnN0YW5jZSBieSB1cGRhdGluZyBpdHMgc3RhdHVzIG9yIG1hcmtpbmcgZWxlbWVudHMKICogd2hpY2ggbmVlZCBhIHJlZnJlc2ggb24gRE9NIGV2ZW50cy4KICoKICogQGFic3RyYWN0CiAqLwoKdmFyIE9ic2VydmVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAvKioKICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIHRoZSBvYnNlcnZlci4KICAgKgogICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L3ZpZXd+Vmlld30gdmlldwogICAqLwogIGZ1bmN0aW9uIE9ic2VydmVyKHZpZXcpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBPYnNlcnZlcik7CgogICAgLyoqCiAgICAgKiBBbiBpbnN0YW5jZSBvZiB0aGUgdmlldyBjb250cm9sbGVyLgogICAgICoKICAgICAqIEByZWFkb25seQogICAgICogQG1lbWJlciB7bW9kdWxlOmVuZ2luZS92aWV3L3ZpZXd+Vmlld30KICAgICAqLwogICAgdGhpcy52aWV3ID0gdmlldzsKICAgIC8qKgogICAgICogQSByZWZlcmVuY2UgdG8gdGhlIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvZG9jdW1lbnR+RG9jdW1lbnR9IG9iamVjdC4KICAgICAqCiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEBtZW1iZXIge21vZHVsZTplbmdpbmUvdmlldy9kb2N1bWVudH5Eb2N1bWVudH0KICAgICAqLwoKICAgIHRoaXMuZG9jdW1lbnQgPSB2aWV3LmRvY3VtZW50OwogICAgLyoqCiAgICAgKiBUaGUgc3RhdGUgb2YgdGhlIG9ic2VydmVyLiBJZiBpdCBpcyBkaXNhYmxlZCwgbm8gZXZlbnRzIHdpbGwgYmUgZmlyZWQuCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAbWVtYmVyIHtCb29sZWFufQogICAgICovCgogICAgdGhpcy5pc0VuYWJsZWQgPSBmYWxzZTsKICB9CiAgLyoqCiAgICogRW5hYmxlcyB0aGUgb2JzZXJ2ZXIuIFRoaXMgbWV0aG9kIGlzIGNhbGxlZCB3aGVuIHRoZSBvYnNlcnZlciBpcyByZWdpc3RlcmVkIHRvIHRoZQogICAqIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvdmlld35WaWV3fSBhbmQgYWZ0ZXIge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy92aWV3flZpZXcjZm9yY2VSZW5kZXIgcmVuZGVyaW5nfQogICAqIChhbGwgb2JzZXJ2ZXJzIGFyZSB7QGxpbmsgI2Rpc2FibGUgZGlzYWJsZWR9IGJlZm9yZSByZW5kZXJpbmcpLgogICAqCiAgICogQSB0eXBpY2FsIHVzZSBjYXNlIGZvciBkaXNhYmxpbmcgb2JzZXJ2ZXJzIGlzIHRoYXQgbXV0YXRpb24gb2JzZXJ2ZXJzIG5lZWQgdG8gYmUgZGlzYWJsZWQgZm9yIHRoZSByZW5kZXJpbmcuCiAgICogSG93ZXZlciwgYSBjaGlsZCBjbGFzcyBtYXkgbm90IG5lZWQgdG8gYmUgZGlzYWJsZWQsIHNvIGl0IGNhbiBpbXBsZW1lbnQgYW4gZW1wdHkgbWV0aG9kLgogICAqCiAgICogQHNlZSBtb2R1bGU6ZW5naW5lL3ZpZXcvb2JzZXJ2ZXIvb2JzZXJ2ZXJ+T2JzZXJ2ZXIjZGlzYWJsZQogICAqLwoKCiAgX2NyZWF0ZUNsYXNzKE9ic2VydmVyLCBbewogICAga2V5OiAiZW5hYmxlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBlbmFibGUoKSB7CiAgICAgIHRoaXMuaXNFbmFibGVkID0gdHJ1ZTsKICAgIH0KICAgIC8qKgogICAgICogRGlzYWJsZXMgdGhlIG9ic2VydmVyLiBUaGlzIG1ldGhvZCBpcyBjYWxsZWQgYmVmb3JlCiAgICAgKiB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L3ZpZXd+VmlldyNmb3JjZVJlbmRlciByZW5kZXJpbmd9IHRvIHByZXZlbnQgZmlyaW5nIGV2ZW50cyBkdXJpbmcgcmVuZGVyaW5nLgogICAgICoKICAgICAqIEBzZWUgbW9kdWxlOmVuZ2luZS92aWV3L29ic2VydmVyL29ic2VydmVyfk9ic2VydmVyI2VuYWJsZQogICAgICovCgogIH0sIHsKICAgIGtleTogImRpc2FibGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2FibGUoKSB7CiAgICAgIHRoaXMuaXNFbmFibGVkID0gZmFsc2U7CiAgICB9CiAgICAvKioKICAgICAqIERpc2FibGVzIGFuZCBkZXN0cm95cyB0aGUgb2JzZXJ2ZXIsIGFtb25nIG90aGVycyByZW1vdmVzIGV2ZW50IGxpc3RlbmVycyBjcmVhdGVkIGJ5IHRoZSBvYnNlcnZlci4KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJkZXN0cm95IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkZXN0cm95KCkgewogICAgICB0aGlzLmRpc2FibGUoKTsKICAgICAgdGhpcy5zdG9wTGlzdGVuaW5nKCk7CiAgICB9CiAgICAvKioKICAgICAqIENoZWNrcyB3aGV0aGVyIGEgZ2l2ZW4gRE9NIGV2ZW50IHNob3VsZCBiZSBpZ25vcmVkIChzaG91bGQgbm90IGJlIHR1cm5lZCBpbnRvIGEgc3ludGhldGljIHZpZXcgZG9jdW1lbnQgZXZlbnQpLgogICAgICoKICAgICAqIEN1cnJlbnRseSwgYW4gZXZlbnQgd2lsbCBiZSBpZ25vcmVkIG9ubHkgaWYgaXRzIHRhcmdldCBvciBhbnkgb2YgaXRzIGFuY2VzdG9ycyBoYXMgdGhlIGBkYXRhLWNrZS1pZ25vcmUtZXZlbnRzYCBhdHRyaWJ1dGUuCiAgICAgKiBUaGlzIGF0dHJpYnV0ZSBjYW4gYmUgdXNlZCBpbnNpZGUgdGhlIHN0cnVjdHVyZXMgZ2VuZXJhdGVkIGJ5CiAgICAgKiB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L2Rvd25jYXN0d3JpdGVyfkRvd25jYXN0V3JpdGVyI2NyZWF0ZVVJRWxlbWVudCBgRG93bmNhc3RXcml0ZXIjY3JlYXRlVUlFbGVtZW50KClgfSB0byBpZ25vcmUgZXZlbnRzCiAgICAgKiBmaXJlZCB3aXRoaW4gYSBVSSB0aGF0IHNob3VsZCBiZSBleGNsdWRlZCBmcm9tIENLRWRpdG9yIDUncyByZWFsbXMuCiAgICAgKgogICAgICogQHBhcmFtIHtOb2RlfSBkb21UYXJnZXQgVGhlIERPTSBldmVudCB0YXJnZXQgdG8gY2hlY2sgKHVzdWFsbHkgYW4gZWxlbWVudCwgc29tZXRpbWVzIGEgdGV4dCBub2RlIGFuZAogICAgICogcG90ZW50aWFsbHkgc29tZXRpbWVzIGEgZG9jdW1lbnQsIHRvbykuCiAgICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gV2hldGhlciB0aGlzIGV2ZW50IHNob3VsZCBiZSBpZ25vcmVkIGJ5IHRoZSBvYnNlcnZlci4KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJjaGVja1Nob3VsZElnbm9yZUV2ZW50RnJvbVRhcmdldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY2hlY2tTaG91bGRJZ25vcmVFdmVudEZyb21UYXJnZXQoZG9tVGFyZ2V0KSB7CiAgICAgIGlmIChkb21UYXJnZXQgJiYgZG9tVGFyZ2V0Lm5vZGVUeXBlID09PSAzKSB7CiAgICAgICAgZG9tVGFyZ2V0ID0gZG9tVGFyZ2V0LnBhcmVudE5vZGU7CiAgICAgIH0KCiAgICAgIGlmICghZG9tVGFyZ2V0IHx8IGRvbVRhcmdldC5ub2RlVHlwZSAhPT0gMSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIGRvbVRhcmdldC5tYXRjaGVzKCdbZGF0YS1ja2UtaWdub3JlLWV2ZW50c10sIFtkYXRhLWNrZS1pZ25vcmUtZXZlbnRzXSAqJyk7CiAgICB9CiAgICAvKioKICAgICAqIFN0YXJ0cyBvYnNlcnZpbmcgdGhlIGdpdmVuIHJvb3QgZWxlbWVudC4KICAgICAqCiAgICAgKiBAbWV0aG9kICNvYnNlcnZlCiAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBkb21FbGVtZW50CiAgICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBUaGUgbmFtZSBvZiB0aGUgcm9vdCBlbGVtZW50LgogICAgICovCgogIH1dKTsKCiAgcmV0dXJuIE9ic2VydmVyOwp9KCk7CgpleHBvcnQgeyBPYnNlcnZlciBhcyBkZWZhdWx0IH07Cm1peChPYnNlcnZlciwgRG9tRW1pdHRlck1peGluKTs="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/observer.js"],"names":["DomEmitterMixin","mix","Observer","view","document","isEnabled","disable","stopListening","domTarget","nodeType","parentNode","matches"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,eAAP,MAA4B,gDAA5B;AACA,OAAOC,GAAP,MAAgB,mCAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,Q;AACpB;AACD;AACA;AACA;AACA;AACC,oBAAaC,IAAb,EAAoB;AAAA;;AACnB;AACF;AACA;AACA;AACA;AACA;AACE,SAAKA,IAAL,GAAYA,IAAZ;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKC,QAAL,GAAgBD,IAAI,CAACC,QAArB;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKC,SAAL,GAAiB,KAAjB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACC,kBAAS;AACR,WAAKA,SAAL,GAAiB,IAAjB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;;WACC,mBAAU;AACT,WAAKA,SAAL,GAAiB,KAAjB;AACA;AAED;AACD;AACA;;;;WACC,mBAAU;AACT,WAAKC,OAAL;AACA,WAAKC,aAAL;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,0CAAkCC,SAAlC,EAA8C;AAC7C,UAAKA,SAAS,IAAIA,SAAS,CAACC,QAAV,KAAuB,CAAzC,EAA6C;AAC5CD,QAAAA,SAAS,GAAGA,SAAS,CAACE,UAAtB;AACA;;AAED,UAAK,CAACF,SAAD,IAAcA,SAAS,CAACC,QAAV,KAAuB,CAA1C,EAA8C;AAC7C,eAAO,KAAP;AACA;;AAED,aAAOD,SAAS,CAACG,OAAV,CAAmB,sDAAnB,CAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;SA9FqBT,Q;AAiGrBD,GAAG,CAAEC,QAAF,EAAYF,eAAZ,CAAH","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/observer\n */\n\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Abstract base observer class. Observers are classes which listen to DOM events, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects.\n * Observers can also add features to the view, for instance by updating its status or marking elements\n * which need a refresh on DOM events.\n *\n * @abstract\n */\nexport default class Observer {\n\t/**\n\t * Creates an instance of the observer.\n\t *\n\t * @param {module:engine/view/view~View} view\n\t */\n\tconstructor( view ) {\n\t\t/**\n\t\t * An instance of the view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View}\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * A reference to the {@link module:engine/view/document~Document} object.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = view.document;\n\n\t\t/**\n\t\t * The state of the observer. If it is disabled, no events will be fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n\t * Enables the observer. This method is called when the observer is registered to the\n\t * {@link module:engine/view/view~View} and after {@link module:engine/view/view~View#forceRender rendering}\n\t * (all observers are {@link #disable disabled} before rendering).\n\t *\n\t * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n\t * However, a child class may not need to be disabled, so it can implement an empty method.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#disable\n\t */\n\tenable() {\n\t\tthis.isEnabled = true;\n\t}\n\n\t/**\n\t * Disables the observer. This method is called before\n\t * {@link module:engine/view/view~View#forceRender rendering} to prevent firing events during rendering.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#enable\n\t */\n\tdisable() {\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n\t * Disables and destroys the observer, among others removes event listeners created by the observer.\n\t */\n\tdestroy() {\n\t\tthis.disable();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks whether a given DOM event should be ignored (should not be turned into a synthetic view document event).\n\t *\n\t * Currently, an event will be ignored only if its target or any of its ancestors has the `data-cke-ignore-events` attribute.\n\t * This attribute can be used inside the structures generated by\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `DowncastWriter#createUIElement()`} to ignore events\n\t * fired within a UI that should be excluded from CKEditor 5's realms.\n\t *\n\t * @param {Node} domTarget The DOM event target to check (usually an element, sometimes a text node and\n\t * potentially sometimes a document, too).\n\t * @returns {Boolean} Whether this event should be ignored by the observer.\n\t */\n\tcheckShouldIgnoreEventFromTarget( domTarget ) {\n\t\tif ( domTarget && domTarget.nodeType === 3 ) {\n\t\t\tdomTarget = domTarget.parentNode;\n\t\t}\n\n\t\tif ( !domTarget || domTarget.nodeType !== 1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn domTarget.matches( '[data-cke-ignore-events], [data-cke-ignore-events] *' );\n\t}\n\n\t/**\n\t * Starts observing the given root element.\n\t *\n\t * @method #observe\n\t * @param {HTMLElement} domElement\n\t * @param {String} name The name of the root element.\n\t */\n}\n\nmix( Observer, DomEmitterMixin );\n"]}]}