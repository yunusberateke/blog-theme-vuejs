{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/twostepcaretmovement.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/twostepcaretmovement.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKCi8qKgogKiBAbGljZW5zZSBDb3B5cmlnaHQgKGMpIDIwMDMtMjAyMSwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICogRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cHM6Ly9ja2VkaXRvci5jb20vbGVnYWwvY2tlZGl0b3Itb3NzLWxpY2Vuc2UKICovCgovKioKICogQG1vZHVsZSB0eXBpbmcvdHdvc3RlcGNhcmV0bW92ZW1lbnQKICovCmltcG9ydCBQbHVnaW4gZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS1jb3JlL3NyYy9wbHVnaW4nOwppbXBvcnQgeyBrZXlDb2RlcyB9IGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2tleWJvYXJkJzsKLyoqCiAqIFRoaXMgcGx1Z2luIGVuYWJsZXMgdGhlIHR3by1zdGVwIGNhcmV0IChwaGFudG9tKSBtb3ZlbWVudCBiZWhhdmlvciBmb3IKICoge0BsaW5rIG1vZHVsZTp0eXBpbmcvdHdvc3RlcGNhcmV0bW92ZW1lbnR+VHdvU3RlcENhcmV0TW92ZW1lbnQjcmVnaXN0ZXJBdHRyaWJ1dGUgcmVnaXN0ZXJlZCBhdHRyaWJ1dGVzfQogKiBvbiBhcnJvdyByaWdodCAoPGtiZD7ihpI8L2tiZD4pIGFuZCBsZWZ0ICg8a2JkPuKGkDwva2JkPikga2V5IHByZXNzLgogKgogKiBUaGFua3MgdG8gdGhpcyAocGhhbnRvbSkgY2FyZXQgbW92ZW1lbnQgdGhlIHVzZXIgaXMgYWJsZSB0byB0eXBlIGJlZm9yZS9hZnRlciBhcyB3ZWxsIGFzIGF0IHRoZQogKiBiZWdpbm5pbmcvZW5kIG9mIGFuIGF0dHJpYnV0ZS4KICoKICogKipOb3RlOioqIFRoaXMgcGx1Z2luIHN1cHBvcnQgcmlnaHTigJN0b+KAk2xlZnQgKEFyYWJpYywgSGVicmV3LCBldGMuKSBjb250ZW50IGJ5IG1pcnJvcmluZyBpdHMgYmVoYXZpb3IKICogYnV0IGZvciB0aGUgc2FrZSBvZiBzaW1wbGljaXR5IGV4YW1wbGVzIHNob3djYXNlIG9ubHkgbGVmdOKAk3Rv4oCTcmlnaHQgdXNl4oCTY2FzZXMuCiAqCiAqICMgRm9yd2FyZCBtb3ZlbWVudAogKgogKiAjIyAiRW50ZXJpbmciIGFuIGF0dHJpYnV0ZToKICoKICogV2hlbiB0aGlzIHBsdWdpbiBpcyBlbmFibGVkIGFuZCByZWdpc3RlcmVkIGZvciB0aGUgYGFgIGF0dHJpYnV0ZSBhbmQgdGhlIHNlbGVjdGlvbiBpcyByaWdodCBiZWZvcmUgaXQKICogKGF0IHRoZSBhdHRyaWJ1dGUgYm91bmRhcnkpLCBwcmVzc2luZyB0aGUgcmlnaHQgYXJyb3cga2V5IHdpbGwgbm90IG1vdmUgdGhlIHNlbGVjdGlvbiBidXQgdXBkYXRlIGl0cwogKiBhdHRyaWJ1dGVzIGFjY29yZGluZ2x5OgogKgogKiAqIFdoZW4gZW5hYmxlZDoKICoKICogICAJCWZvb3t9PCR0ZXh0IGE9InRydWUiPmJhcjwvJHRleHQ+CiAqCiAqICAgIDxrYmQ+4oaSPC9rYmQ+CiAqCiAqICAgCQlmb288JHRleHQgYT0idHJ1ZSI+e31iYXI8LyR0ZXh0PgogKgogKiAqIFdoZW4gZGlzYWJsZWQ6CiAqCiAqICAgCQlmb297fTwkdGV4dCBhPSJ0cnVlIj5iYXI8LyR0ZXh0PgogKgogKiAgIDxrYmQ+4oaSPC9rYmQ+CiAqCiAqICAgCQlmb288JHRleHQgYT0idHJ1ZSI+Ynt9YXI8LyR0ZXh0PgogKgogKgogKiAjIyAiTGVhdmluZyIgYW4gYXR0cmlidXRlOgogKgogKiAqIFdoZW4gZW5hYmxlZDoKICoKICogICAJCTwkdGV4dCBhPSJ0cnVlIj5iYXJ7fTwvJHRleHQ+YmF6CiAqCiAqICAgIDxrYmQ+4oaSPC9rYmQ+CiAqCiAqICAgCQk8JHRleHQgYT0idHJ1ZSI+YmFyPC8kdGV4dD57fWJhegogKgogKiAqIFdoZW4gZGlzYWJsZWQ6CiAqCiAqICAgCQk8JHRleHQgYT0idHJ1ZSI+YmFye308LyR0ZXh0PmJhegogKgogKiAgIDxrYmQ+4oaSPC9rYmQ+CiAqCiAqICAgCQk8JHRleHQgYT0idHJ1ZSI+YmFyPC8kdGV4dD5ie31hegogKgogKiAjIEJhY2t3YXJkIG1vdmVtZW50CiAqCiAqICogV2hlbiBlbmFibGVkOgogKgogKiAgIAkJPCR0ZXh0IGE9InRydWUiPmJhcjwvJHRleHQ+e31iYXoKICoKICogICAgPGtiZD7ihpA8L2tiZD4KICoKICogICAJCTwkdGV4dCBhPSJ0cnVlIj5iYXJ7fTwvJHRleHQ+YmF6CiAqCiAqICogV2hlbiBkaXNhYmxlZDoKICoKICogICAJCTwkdGV4dCBhPSJ0cnVlIj5iYXI8LyR0ZXh0Pnt9YmF6CiAqCiAqICAgPGtiZD7ihpA8L2tiZD4KICoKICogICAJCTwkdGV4dCBhPSJ0cnVlIj5iYXt9cjwvJHRleHQ+Ynt9YXoKICoKICogIyBNdWx0aXBsZSBhdHRyaWJ1dGVzCiAqCiAqICogV2hlbiBlbmFibGVkIGFuZCBtYW55IGF0dHJpYnV0ZXMgc3RhcnRzIG9yIGVuZHMgYXQgdGhlIHNhbWUgcG9zaXRpb246CiAqCiAqICAgCQk8JHRleHQgYT0idHJ1ZSIgYj0idHJ1ZSI+YmFyPC8kdGV4dD57fWJhegogKgogKiAgICA8a2JkPuKGkDwva2JkPgogKgogKiAgIAkJPCR0ZXh0IGE9InRydWUiIGI9InRydWUiPmJhcnt9PC8kdGV4dD5iYXoKICoKICogKiBXaGVuIGVuYWJsZWQgYW5kIG9uZSBwcm9jZWRlcyBhbm90aGVyOgogKgogKiAgIAkJPCR0ZXh0IGE9InRydWUiPmJhcjwvJHRleHQ+PCR0ZXh0IGI9InRydWUiPnt9YmFyPC8kdGV4dD4KICoKICogICAgPGtiZD7ihpA8L2tiZD4KICoKICogICAJCTwkdGV4dCBhPSJ0cnVlIj5iYXJ7fTwvJHRleHQ+PCR0ZXh0IGI9InRydWUiPmJhcjwvJHRleHQ+CiAqCiAqLwoKdmFyIFR3b1N0ZXBDYXJldE1vdmVtZW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUGx1Z2luKSB7CiAgX2luaGVyaXRzKFR3b1N0ZXBDYXJldE1vdmVtZW50LCBfUGx1Z2luKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihUd29TdGVwQ2FyZXRNb3ZlbWVudCk7CgogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgZnVuY3Rpb24gVHdvU3RlcENhcmV0TW92ZW1lbnQoZWRpdG9yKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFR3b1N0ZXBDYXJldE1vdmVtZW50KTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGVkaXRvcik7CiAgICAvKioKICAgICAqIEEgc2V0IG9mIGF0dHJpYnV0ZXMgdG8gaGFuZGxlLgogICAgICoKICAgICAqIEBwcm90ZWN0ZWQKICAgICAqIEBwcm9wZXJ0eSB7bW9kdWxlOnR5cGluZy90d29zdGVwY2FyZXRtb3ZlbWVudH5Ud29TdGVwQ2FyZXRNb3ZlbWVudH0KICAgICAqLwoKICAgIF90aGlzLmF0dHJpYnV0ZXMgPSBuZXcgU2V0KCk7CiAgICAvKioKICAgICAqIFRoZSBjdXJyZW50IFVJRCBvZiB0aGUgb3ZlcnJpZGRlbiBncmF2aXR5LCBhcyByZXR1cm5lZCBieQogICAgICoge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvd3JpdGVyfldyaXRlciNvdmVycmlkZVNlbGVjdGlvbkdyYXZpdHl9LgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKiBAbWVtYmVyIHtTdHJpbmd9CiAgICAgKi8KCiAgICBfdGhpcy5fb3ZlcnJpZGVVaWQgPSBudWxsOwogICAgcmV0dXJuIF90aGlzOwogIH0KICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwoKCiAgX2NyZWF0ZUNsYXNzKFR3b1N0ZXBDYXJldE1vdmVtZW50LCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICAgIHZhciBtb2RlbCA9IGVkaXRvci5tb2RlbDsKICAgICAgdmFyIHZpZXcgPSBlZGl0b3IuZWRpdGluZy52aWV3OwogICAgICB2YXIgbG9jYWxlID0gZWRpdG9yLmxvY2FsZTsKICAgICAgdmFyIG1vZGVsU2VsZWN0aW9uID0gbW9kZWwuZG9jdW1lbnQuc2VsZWN0aW9uOyAvLyBMaXN0ZW4gdG8ga2V5Ym9hcmQgZXZlbnRzIGFuZCBoYW5kbGUgdGhlIGNhcmV0IG1vdmVtZW50IGFjY29yZGluZyB0byB0aGUgMi1zdGVwIGNhcmV0IGxvZ2ljLgoKICAgICAgdGhpcy5saXN0ZW5Ubyh2aWV3LmRvY3VtZW50LCAnYXJyb3dLZXknLCBmdW5jdGlvbiAoZXZ0LCBkYXRhKSB7CiAgICAgICAgLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiB3b3JrcyBvbmx5IGZvciBjb2xsYXBzZWQgc2VsZWN0aW9uLgogICAgICAgIGlmICghbW9kZWxTZWxlY3Rpb24uaXNDb2xsYXBzZWQpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9IC8vIFdoZW4gdXNlciB0cmllcyB0byBleHBhbmQgdGhlIHNlbGVjdGlvbiBvciBqdW1wIG92ZXIgdGhlIHdob2xlIHdvcmQgb3IgdG8gdGhlIGJlZ2lubmluZy9lbmQgdGhlbgogICAgICAgIC8vIHR3by1zdGVwcyBtb3ZlbWVudCBpcyBub3QgbmVjZXNzYXJ5LgoKCiAgICAgICAgaWYgKGRhdGEuc2hpZnRLZXkgfHwgZGF0YS5hbHRLZXkgfHwgZGF0YS5jdHJsS2V5KSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB2YXIgYXJyb3dSaWdodFByZXNzZWQgPSBkYXRhLmtleUNvZGUgPT0ga2V5Q29kZXMuYXJyb3dyaWdodDsKICAgICAgICB2YXIgYXJyb3dMZWZ0UHJlc3NlZCA9IGRhdGEua2V5Q29kZSA9PSBrZXlDb2Rlcy5hcnJvd2xlZnQ7IC8vIFdoZW4gbmVpdGhlciBsZWZ0IG9yIHJpZ2h0IGFycm93IGhhcyBiZWVuIHByZXNzZWQgdGhlbiBkbyBub3RpbmcuCgogICAgICAgIGlmICghYXJyb3dSaWdodFByZXNzZWQgJiYgIWFycm93TGVmdFByZXNzZWQpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHZhciBjb250ZW50RGlyZWN0aW9uID0gbG9jYWxlLmNvbnRlbnRMYW5ndWFnZURpcmVjdGlvbjsKICAgICAgICB2YXIgaXNNb3ZlbWVudEhhbmRsZWQgPSBmYWxzZTsKCiAgICAgICAgaWYgKGNvbnRlbnREaXJlY3Rpb24gPT09ICdsdHInICYmIGFycm93UmlnaHRQcmVzc2VkIHx8IGNvbnRlbnREaXJlY3Rpb24gPT09ICdydGwnICYmIGFycm93TGVmdFByZXNzZWQpIHsKICAgICAgICAgIGlzTW92ZW1lbnRIYW5kbGVkID0gX3RoaXMyLl9oYW5kbGVGb3J3YXJkTW92ZW1lbnQoZGF0YSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlzTW92ZW1lbnRIYW5kbGVkID0gX3RoaXMyLl9oYW5kbGVCYWNrd2FyZE1vdmVtZW50KGRhdGEpOwogICAgICAgIH0gLy8gU3RvcCB0aGUga2V5ZG93biBldmVudCBpZiB0aGUgdHdvLXN0ZXAgY2FyZXQgbW92ZW1lbnQgaGFuZGxlZCBpdC4gQXZvaWQgY29sbGlzaW9ucwogICAgICAgIC8vIHdpdGggb3RoZXIgZmVhdHVyZXMgd2hpY2ggbWF5IGFsc28gdGFrZSBvdmVyIHRoZSBjYXJldCBtb3ZlbWVudCAoZS5nLiBXaWRnZXQpLgoKCiAgICAgICAgaWYgKGlzTW92ZW1lbnRIYW5kbGVkID09PSB0cnVlKSB7CiAgICAgICAgICBldnQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIGNvbnRleHQ6ICckdGV4dCcsCiAgICAgICAgcHJpb3JpdHk6ICdoaWdoZXN0JwogICAgICB9KTsKICAgICAgLyoqCiAgICAgICAqIEEgZmxhZyBpbmRpY2F0aW5nIHRoYXQgdGhlIGF1dG9tYXRpYyBncmF2aXR5IHJlc3RvcmF0aW9uIHNob3VsZCBub3QgaGFwcGVuIHVwb24gdGhlIG5leHQKICAgICAgICogZ3Jhdml0eSByZXN0b3JhdGlvbi4KICAgICAgICoge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvc2VsZWN0aW9uflNlbGVjdGlvbiNldmVudDpjaGFuZ2U6cmFuZ2V9IGV2ZW50LgogICAgICAgKgogICAgICAgKiBAcHJpdmF0ZQogICAgICAgKiBAbWVtYmVyIHtTdHJpbmd9CiAgICAgICAqLwoKICAgICAgdGhpcy5faXNOZXh0R3Jhdml0eVJlc3RvcmF0aW9uU2tpcHBlZCA9IGZhbHNlOyAvLyBUaGUgYXV0b21hdGljIGdyYXZpdHkgcmVzdG9yYXRpb24gbG9naWMuCgogICAgICB0aGlzLmxpc3RlblRvKG1vZGVsU2VsZWN0aW9uLCAnY2hhbmdlOnJhbmdlJywgZnVuY3Rpb24gKGV2dCwgZGF0YSkgewogICAgICAgIC8vIFNraXBwaW5nIHRoZSBhdXRvbWF0aWMgcmVzdG9yYXRpb24gaXMgbmVlZGVkIGlmIHRoZSBzZWxlY3Rpb24gc2hvdWxkIGNoYW5nZQogICAgICAgIC8vIGJ1dCB0aGUgZ3Jhdml0eSBtdXN0IHJlbWFpbiBvdmVycmlkZGVuIGFmdGVyd2FyZHMuIFNlZSB0aGUgI2hhbmRsZUJhY2t3YXJkTW92ZW1lbnQKICAgICAgICAvLyB0byBsZWFybiBtb3JlLgogICAgICAgIGlmIChfdGhpczIuX2lzTmV4dEdyYXZpdHlSZXN0b3JhdGlvblNraXBwZWQpIHsKICAgICAgICAgIF90aGlzMi5faXNOZXh0R3Jhdml0eVJlc3RvcmF0aW9uU2tpcHBlZCA9IGZhbHNlOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0gLy8gU2tpcCBhdXRvbWF0aWMgcmVzdG9yZSB3aGVuIHRoZSBncmF2aXR5IGlzIG5vdCBvdmVycmlkZGVuIOKAlCBzaW1wbHksIHRoZXJlJ3Mgbm90aGluZyB0byByZXN0b3JlCiAgICAgICAgLy8gYXQgdGhpcyBtb21lbnQuCgoKICAgICAgICBpZiAoIV90aGlzMi5faXNHcmF2aXR5T3ZlcnJpZGRlbikgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0gLy8gU2tpcCBhdXRvbWF0aWMgcmVzdG9yZSB3aGVuIHRoZSBjaGFuZ2UgaXMgaW5kaXJlY3QgQU5EIHRoZSBzZWxlY3Rpb24gaXMgYXQgdGhlIGF0dHJpYnV0ZSBib3VuZGFyeS4KICAgICAgICAvLyBJdCBtZWFucyB0aGF0IGUuZy4gaWYgdGhlIGNoYW5nZSB3YXMgZXh0ZXJuYWwgKGNvbGxhYm9yYXRpb24pIGFuZCB0aGUgdXNlciBoYWQgdGhlaXIKICAgICAgICAvLyBzZWxlY3Rpb24gYXJvdW5kIHRoZSBsaW5rLCBpdHMgZ3Jhdml0eSBzaG91bGQgcmVtYWluIGludGFjdCBpbiB0aGlzIGNoYW5nZTpyYW5nZSBldmVudC4KCgogICAgICAgIGlmICghZGF0YS5kaXJlY3RDaGFuZ2UgJiYgaXNCZXR3ZWVuRGlmZmVyZW50QXR0cmlidXRlcyhtb2RlbFNlbGVjdGlvbi5nZXRGaXJzdFBvc2l0aW9uKCksIF90aGlzMi5hdHRyaWJ1dGVzKSkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMyLl9yZXN0b3JlR3Jhdml0eSgpOwogICAgICB9KTsKICAgIH0KICAgIC8qKgogICAgICogUmVnaXN0ZXJzIGEgZ2l2ZW4gYXR0cmlidXRlIGZvciB0aGUgdHdvLXN0ZXAgY2FyZXQgbW92ZW1lbnQuCiAgICAgKgogICAgICogQHBhcmFtIHtTdHJpbmd9IGF0dHJpYnV0ZSBOYW1lIG9mIHRoZSBhdHRyaWJ1dGUgdG8gaGFuZGxlLgogICAgICovCgogIH0sIHsKICAgIGtleTogInJlZ2lzdGVyQXR0cmlidXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWdpc3RlckF0dHJpYnV0ZShhdHRyaWJ1dGUpIHsKICAgICAgdGhpcy5hdHRyaWJ1dGVzLmFkZChhdHRyaWJ1dGUpOwogICAgfQogICAgLyoqCiAgICAgKiBVcGRhdGVzIHRoZSBkb2N1bWVudCBzZWxlY3Rpb24gYW5kIHRoZSB2aWV3IGFjY29yZGluZyB0byB0aGUgdHdv4oCTc3RlcCBjYXJldCBtb3ZlbWVudCBzdGF0ZQogICAgICogd2hlbiBtb3ZpbmcgKipmb3J3YXJkcyoqLiBFeGVjdXRlZCB1cG9uIGBrZXlwcmVzc2AgaW4gdGhlIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvdmlld35WaWV3fS4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL3ZpZXcvb2JzZXJ2ZXIvZG9tZXZlbnRkYXRhfkRvbUV2ZW50RGF0YX0gZGF0YSBEYXRhIG9mIHRoZSBrZXkgcHJlc3MuCiAgICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gYHRydWVgIHdoZW4gdGhlIGhhbmRsZXIgcHJldmVudGVkIGNhcmV0IG1vdmVtZW50CiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX2hhbmRsZUZvcndhcmRNb3ZlbWVudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2hhbmRsZUZvcndhcmRNb3ZlbWVudChkYXRhKSB7CiAgICAgIHZhciBhdHRyaWJ1dGVzID0gdGhpcy5hdHRyaWJ1dGVzOwogICAgICB2YXIgbW9kZWwgPSB0aGlzLmVkaXRvci5tb2RlbDsKICAgICAgdmFyIHNlbGVjdGlvbiA9IG1vZGVsLmRvY3VtZW50LnNlbGVjdGlvbjsKICAgICAgdmFyIHBvc2l0aW9uID0gc2VsZWN0aW9uLmdldEZpcnN0UG9zaXRpb24oKTsgLy8gRE9OJ1QgRU5HQUdFIDItU0NNIGlmIGdyYXZpdHkgaXMgYWxyZWFkeSBvdmVycmlkZGVuLiBJdCBtZWFucyB0aGF0IHdlIGp1c3QgZW50ZXJlZAogICAgICAvLwogICAgICAvLyAJCTxwYXJhZ3JhcGg+Zm9vPCR0ZXh0IGF0dHJpYnV0ZT57fWJhcjwvJHRleHQ+YmF6PC9wYXJhZ3JhcGg+CiAgICAgIC8vCiAgICAgIC8vIG9yIGxlZnQgdGhlIGF0dHJpYnV0ZQogICAgICAvLwogICAgICAvLyAJCTxwYXJhZ3JhcGg+Zm9vPCR0ZXh0IGF0dHJpYnV0ZT5iYXI8LyR0ZXh0Pnt9YmF6PC9wYXJhZ3JhcGg+CiAgICAgIC8vCiAgICAgIC8vIGFuZCB0aGUgZ3Jhdml0eSB3aWxsIGJlIHJlc3RvcmVkIGF1dG9tYXRpY2FsbHkuCgogICAgICBpZiAodGhpcy5faXNHcmF2aXR5T3ZlcnJpZGRlbikgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSAvLyBET04nVCBFTkdBR0UgMi1TQ00gd2hlbiB0aGUgc2VsZWN0aW9uIGlzIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIGJsb2NrIEFORCBhbHJlYWR5IGhhcyB0aGUKICAgICAgLy8gYXR0cmlidXRlOgogICAgICAvLyAqIHdoZW4gdGhlIHNlbGVjdGlvbiB3YXMgaW5pdGlhbGx5IHNldCB0aGVyZSB1c2luZyB0aGUgbW91c2UsCiAgICAgIC8vICogd2hlbiB0aGUgZWRpdG9yIGhhcyBqdXN0IHN0YXJ0ZWQKICAgICAgLy8KICAgICAgLy8JCTxwYXJhZ3JhcGg+PCR0ZXh0IGF0dHJpYnV0ZT57fWJhcjwvJHRleHQ+YmF6PC9wYXJhZ3JhcGg+CiAgICAgIC8vCgoKICAgICAgaWYgKHBvc2l0aW9uLmlzQXRTdGFydCAmJiBoYXNBbnlBdHRyaWJ1dGUoc2VsZWN0aW9uLCBhdHRyaWJ1dGVzKSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSAvLyBFTkdBR0UgMi1TQ00gV2hlbiBhdCBsZWFzdCBvbmUgb2YgdGhlIG9ic2VydmVkIGF0dHJpYnV0ZXMgY2hhbmdlcyBpdHMgdmFsdWUgKGluY2wuIHN0YXJ0cywgZW5kcykuCiAgICAgIC8vCiAgICAgIC8vCQk8cGFyYWdyYXBoPmZvbzwkdGV4dCBhdHRyaWJ1dGU+YmFye308LyR0ZXh0PmJhejwvcGFyYWdyYXBoPgogICAgICAvLwkJPHBhcmFncmFwaD5mb288JHRleHQgYXR0cmlidXRlPmJhcnt9PC8kdGV4dD48JHRleHQgb3RoZXJBdHRyaWJ1dGU+YmF6PC8kdGV4dD48L3BhcmFncmFwaD4KICAgICAgLy8JCTxwYXJhZ3JhcGg+Zm9vPCR0ZXh0IGF0dHJpYnV0ZT0xPmJhcnt9PC8kdGV4dD48JHRleHQgYXR0cmlidXRlPTI+YmF6PC8kdGV4dD48L3BhcmFncmFwaD4KICAgICAgLy8JCTxwYXJhZ3JhcGg+Zm9ve308JHRleHQgYXR0cmlidXRlPmJhcjwvJHRleHQ+YmF6PC9wYXJhZ3JhcGg+CiAgICAgIC8vCgoKICAgICAgaWYgKGlzQmV0d2VlbkRpZmZlcmVudEF0dHJpYnV0ZXMocG9zaXRpb24sIGF0dHJpYnV0ZXMpKSB7CiAgICAgICAgcHJldmVudENhcmV0TW92ZW1lbnQoZGF0YSk7CgogICAgICAgIHRoaXMuX292ZXJyaWRlR3Jhdml0eSgpOwoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfQogICAgLyoqCiAgICAgKiBVcGRhdGVzIHRoZSBkb2N1bWVudCBzZWxlY3Rpb24gYW5kIHRoZSB2aWV3IGFjY29yZGluZyB0byB0aGUgdHdv4oCTc3RlcCBjYXJldCBtb3ZlbWVudCBzdGF0ZQogICAgICogd2hlbiBtb3ZpbmcgKipiYWNrd2FyZHMqKi4gRXhlY3V0ZWQgdXBvbiBga2V5cHJlc3NgIGluIHRoZSB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L3ZpZXd+Vmlld30uCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L29ic2VydmVyL2RvbWV2ZW50ZGF0YX5Eb21FdmVudERhdGF9IGRhdGEgRGF0YSBvZiB0aGUga2V5IHByZXNzLgogICAgICogQHJldHVybnMge0Jvb2xlYW59IGB0cnVlYCB3aGVuIHRoZSBoYW5kbGVyIHByZXZlbnRlZCBjYXJldCBtb3ZlbWVudAogICAgICovCgogIH0sIHsKICAgIGtleTogIl9oYW5kbGVCYWNrd2FyZE1vdmVtZW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfaGFuZGxlQmFja3dhcmRNb3ZlbWVudChkYXRhKSB7CiAgICAgIHZhciBhdHRyaWJ1dGVzID0gdGhpcy5hdHRyaWJ1dGVzOwogICAgICB2YXIgbW9kZWwgPSB0aGlzLmVkaXRvci5tb2RlbDsKICAgICAgdmFyIHNlbGVjdGlvbiA9IG1vZGVsLmRvY3VtZW50LnNlbGVjdGlvbjsKICAgICAgdmFyIHBvc2l0aW9uID0gc2VsZWN0aW9uLmdldEZpcnN0UG9zaXRpb24oKTsgLy8gV2hlbiB0aGUgZ3Jhdml0eSBpcyBhbHJlYWR5IG92ZXJyaWRkZW4gKGJ5IHRoaXMgcGx1Z2luKSwgaXQgbWVhbnMgd2UgYXJlIG9uIHRoZSB0d28tc3RlcCBwb3NpdGlvbi4KICAgICAgLy8gUHJldmVudCB0aGUgbW92ZW1lbnQsIHJlc3RvcmUgdGhlIGdyYXZpdHkgYW5kIHVwZGF0ZSBzZWxlY3Rpb24gYXR0cmlidXRlcy4KICAgICAgLy8KICAgICAgLy8JCTxwYXJhZ3JhcGg+Zm9vPCR0ZXh0IGF0dHJpYnV0ZT0xPmJhcjwvJHRleHQ+PCR0ZXh0IGF0dHJpYnV0ZT0yPnt9YmF6PC8kdGV4dD48L3BhcmFncmFwaD4KICAgICAgLy8JCTxwYXJhZ3JhcGg+Zm9vPCR0ZXh0IGF0dHJpYnV0ZT5iYXI8LyR0ZXh0PjwkdGV4dCBvdGhlckF0dHJpYnV0ZT57fWJhejwvJHRleHQ+PC9wYXJhZ3JhcGg+CiAgICAgIC8vCQk8cGFyYWdyYXBoPmZvbzwkdGV4dCBhdHRyaWJ1dGU+e31iYXI8LyR0ZXh0PmJhejwvcGFyYWdyYXBoPgogICAgICAvLwkJPHBhcmFncmFwaD5mb288JHRleHQgYXR0cmlidXRlPmJhcjwvJHRleHQ+e31iYXo8L3BhcmFncmFwaD4KICAgICAgLy8KCiAgICAgIGlmICh0aGlzLl9pc0dyYXZpdHlPdmVycmlkZGVuKSB7CiAgICAgICAgcHJldmVudENhcmV0TW92ZW1lbnQoZGF0YSk7CgogICAgICAgIHRoaXMuX3Jlc3RvcmVHcmF2aXR5KCk7CgogICAgICAgIHNldFNlbGVjdGlvbkF0dHJpYnV0ZXNGcm9tVGhlTm9kZUJlZm9yZShtb2RlbCwgYXR0cmlidXRlcywgcG9zaXRpb24pOwogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIFJFTU9WRSBTRUxFQ1RJT04gQVRUUklCVVRFIHdoZW4gcmVzdG9yaW5nIGdyYXZpdHkgdG93YXJkcyBhIG5vbi1leGlzdGVudCBjb250ZW50IGF0IHRoZQogICAgICAgIC8vIGJlZ2lubmluZyBvZiB0aGUgYmxvY2suCiAgICAgICAgLy8KICAgICAgICAvLyAJCTxwYXJhZ3JhcGg+e308JHRleHQgYXR0cmlidXRlPmJhcjwvJHRleHQ+PC9wYXJhZ3JhcGg+CiAgICAgICAgLy8KICAgICAgICBpZiAocG9zaXRpb24uaXNBdFN0YXJ0KSB7CiAgICAgICAgICBpZiAoaGFzQW55QXR0cmlidXRlKHNlbGVjdGlvbiwgYXR0cmlidXRlcykpIHsKICAgICAgICAgICAgcHJldmVudENhcmV0TW92ZW1lbnQoZGF0YSk7CiAgICAgICAgICAgIHNldFNlbGVjdGlvbkF0dHJpYnV0ZXNGcm9tVGhlTm9kZUJlZm9yZShtb2RlbCwgYXR0cmlidXRlcywgcG9zaXRpb24pOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfSAvLyBXaGVuIHdlIGFyZSBtb3ZpbmcgZnJvbSBuYXR1cmFsIGdyYXZpdHksIHRvIHRoZSBwb3NpdGlvbiBvZiB0aGUgMlNDTSwgd2UgbmVlZCB0byBvdmVycmlkZSB0aGUgZ3Jhdml0eSwKICAgICAgICAvLyBhbmQgbWFrZSBzdXJlIGl0IHdvbid0IGJlIHJlc3RvcmVkLiBVbmxlc3MgaXQncyBhdCB0aGUgZW5kIG9mIHRoZSBibG9jayBhbmQgYW4gb2JzZXJ2ZWQgYXR0cmlidXRlLgogICAgICAgIC8vIFdlIG5lZWQgdG8gY2hlY2sgaWYgdGhlIGNhcmV0IGlzIGEgb25lIHBvc2l0aW9uIGJlZm9yZSB0aGUgYXR0cmlidXRlIGJvdW5kYXJ5OgogICAgICAgIC8vCiAgICAgICAgLy8JCTxwYXJhZ3JhcGg+Zm9vPCR0ZXh0IGF0dHJpYnV0ZT0xPmJhcjwvJHRleHQ+PCR0ZXh0IGF0dHJpYnV0ZT0yPmJ7fWF6PC8kdGV4dD48L3BhcmFncmFwaD4KICAgICAgICAvLwkJPHBhcmFncmFwaD5mb288JHRleHQgYXR0cmlidXRlPmJhcjwvJHRleHQ+PCR0ZXh0IG90aGVyQXR0cmlidXRlPmJ7fWF6PC8kdGV4dD48L3BhcmFncmFwaD4KICAgICAgICAvLwkJPHBhcmFncmFwaD5mb288JHRleHQgYXR0cmlidXRlPmJ7fWFyPC8kdGV4dD5iYXo8L3BhcmFncmFwaD4KICAgICAgICAvLwkJPHBhcmFncmFwaD5mb288JHRleHQgYXR0cmlidXRlPmJhcjwvJHRleHQ+Ynt9YXo8L3BhcmFncmFwaD4KICAgICAgICAvLwoKCiAgICAgICAgaWYgKGlzU3RlcEFmdGVyQW55QXR0cmlidXRlQm91bmRhcnkocG9zaXRpb24sIGF0dHJpYnV0ZXMpKSB7CiAgICAgICAgICAvLyBFTkdBR0UgMi1TQ00gaWYgdGhlIHNlbGVjdGlvbiBoYXMgbm8gYXR0cmlidXRlLiBUaGlzIG1heSBoYXBwZW4gd2hlbiB0aGUgdXNlcgogICAgICAgICAgLy8gbGVmdCB0aGUgYXR0cmlidXRlIHVzaW5nIGEgRk9SV0FSRCAyLVNDTS4KICAgICAgICAgIC8vCiAgICAgICAgICAvLyAJCTxwYXJhZ3JhcGg+PCR0ZXh0IGF0dHJpYnV0ZT5iYXI8LyR0ZXh0Pnt9PC9wYXJhZ3JhcGg+CiAgICAgICAgICAvLwogICAgICAgICAgaWYgKHBvc2l0aW9uLmlzQXRFbmQgJiYgIWhhc0FueUF0dHJpYnV0ZShzZWxlY3Rpb24sIGF0dHJpYnV0ZXMpICYmIGlzQmV0d2VlbkRpZmZlcmVudEF0dHJpYnV0ZXMocG9zaXRpb24sIGF0dHJpYnV0ZXMpKSB7CiAgICAgICAgICAgIHByZXZlbnRDYXJldE1vdmVtZW50KGRhdGEpOwogICAgICAgICAgICBzZXRTZWxlY3Rpb25BdHRyaWJ1dGVzRnJvbVRoZU5vZGVCZWZvcmUobW9kZWwsIGF0dHJpYnV0ZXMsIHBvc2l0aW9uKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICB9IC8vIFNraXAgdGhlIGF1dG9tYXRpYyBncmF2aXR5IHJlc3RvcmUgdXBvbiB0aGUgbmV4dCBzZWxlY3Rpb24jY2hhbmdlOnJhbmdlIGV2ZW50LgogICAgICAgICAgLy8gSWYgbm90IHNraXBwZWQsIGl0IHdvdWxkIGF1dG9tYXRpY2FsbHkgcmVzdG9yZSB0aGUgZ3Jhdml0eSwgd2hpY2ggc2hvdWxkIHJlbWFpbgogICAgICAgICAgLy8gb3ZlcnJpZGRlbi4KCgogICAgICAgICAgdGhpcy5faXNOZXh0R3Jhdml0eVJlc3RvcmF0aW9uU2tpcHBlZCA9IHRydWU7CgogICAgICAgICAgdGhpcy5fb3ZlcnJpZGVHcmF2aXR5KCk7IC8vIERvbid0IHJldHVybiAidHJ1ZSIgaGVyZSBiZWNhdXNlIHdlIGRpZG4ndCBjYWxsIF9wcmV2ZW50Q2FyZXRNb3ZlbWVudC4KICAgICAgICAgIC8vIFJldHVybmluZyBoZXJlIHdpbGwgZGVzdGFiaWxpemUgdGhlIGZpbGxlciBsb2dpYywgd2hpY2ggYWxzbyBsaXN0ZW5zIHRvCiAgICAgICAgICAvLyBrZXlkb3duIChhbmQgdGhlIGV2ZW50IHdvdWxkIGJlIHN0b3BwZWQpLgoKCiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgICAvKioKICAgICAqIGB0cnVlYCB3aGVuIHRoZSBncmF2aXR5IGlzIG92ZXJyaWRkZW4gZm9yIHRoZSBwbHVnaW4uCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAcHJpdmF0ZQogICAgICogQHR5cGUge0Jvb2xlYW59CiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX2lzR3Jhdml0eU92ZXJyaWRkZW4iLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiAhIXRoaXMuX292ZXJyaWRlVWlkOwogICAgfQogICAgLyoqCiAgICAgKiBPdmVycmlkZXMgdGhlIGdyYXZpdHkgdXNpbmcgdGhlIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL3dyaXRlcn5Xcml0ZXIgbW9kZWwgd3JpdGVyfQogICAgICogYW5kIHN0b3JlcyB0aGUgaW5mb3JtYXRpb24gYWJvdXQgdGhpcyBmYWN0IGluIHRoZSB7QGxpbmsgI19vdmVycmlkZVVpZH0uCiAgICAgKgogICAgICogQSBzaG9ydGhhbmQgZm9yIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL3dyaXRlcn5Xcml0ZXIjb3ZlcnJpZGVTZWxlY3Rpb25HcmF2aXR5fS4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICovCgogIH0sIHsKICAgIGtleTogIl9vdmVycmlkZUdyYXZpdHkiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9vdmVycmlkZUdyYXZpdHkoKSB7CiAgICAgIHRoaXMuX292ZXJyaWRlVWlkID0gdGhpcy5lZGl0b3IubW9kZWwuY2hhbmdlKGZ1bmN0aW9uICh3cml0ZXIpIHsKICAgICAgICByZXR1cm4gd3JpdGVyLm92ZXJyaWRlU2VsZWN0aW9uR3Jhdml0eSgpOwogICAgICB9KTsKICAgIH0KICAgIC8qKgogICAgICogUmVzdG9yZXMgdGhlIGdyYXZpdHkgdXNpbmcgdGhlIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL3dyaXRlcn5Xcml0ZXIgbW9kZWwgd3JpdGVyfS4KICAgICAqCiAgICAgKiBBIHNob3J0aGFuZCBmb3Ige0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvd3JpdGVyfldyaXRlciNyZXN0b3JlU2VsZWN0aW9uR3Jhdml0eX0uCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfcmVzdG9yZUdyYXZpdHkiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9yZXN0b3JlR3Jhdml0eSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLmVkaXRvci5tb2RlbC5jaGFuZ2UoZnVuY3Rpb24gKHdyaXRlcikgewogICAgICAgIHdyaXRlci5yZXN0b3JlU2VsZWN0aW9uR3Jhdml0eShfdGhpczMuX292ZXJyaWRlVWlkKTsKICAgICAgICBfdGhpczMuX292ZXJyaWRlVWlkID0gbnVsbDsKICAgICAgfSk7CiAgICB9CiAgfV0sIFt7CiAgICBrZXk6ICJwbHVnaW5OYW1lIiwKICAgIGdldDoKICAgIC8qKgogICAgICogQGluaGVyaXREb2MKICAgICAqLwogICAgZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gJ1R3b1N0ZXBDYXJldE1vdmVtZW50JzsKICAgIH0KICB9XSk7CgogIHJldHVybiBUd29TdGVwQ2FyZXRNb3ZlbWVudDsKfShQbHVnaW4pOyAvLyBDaGVja3Mgd2hldGhlciB0aGUgc2VsZWN0aW9uIGhhcyBhbnkgb2YgZ2l2ZW4gYXR0cmlidXRlcy4KLy8KLy8gQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL2RvY3VtZW50c2VsZWN0aW9ufkRvY3VtZW50U2VsZWN0aW9ufSBzZWxlY3Rpb24KLy8gQHBhcmFtIHtJdGVyYWJsZS48U3RyaW5nPn0gYXR0cmlidXRlcwoKCmV4cG9ydCB7IFR3b1N0ZXBDYXJldE1vdmVtZW50IGFzIGRlZmF1bHQgfTsKCmZ1bmN0aW9uIGhhc0FueUF0dHJpYnV0ZShzZWxlY3Rpb24sIGF0dHJpYnV0ZXMpIHsKICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoYXR0cmlidXRlcyksCiAgICAgIF9zdGVwOwoKICB0cnkgewogICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgdmFyIG9ic2VydmVkQXR0cmlidXRlID0gX3N0ZXAudmFsdWU7CgogICAgICBpZiAoc2VsZWN0aW9uLmhhc0F0dHJpYnV0ZShvYnNlcnZlZEF0dHJpYnV0ZSkpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2l0ZXJhdG9yLmUoZXJyKTsKICB9IGZpbmFsbHkgewogICAgX2l0ZXJhdG9yLmYoKTsKICB9CgogIHJldHVybiBmYWxzZTsKfSAvLyBBcHBsaWVzIHRoZSBnaXZlbiBhdHRyaWJ1dGVzIHRvIHRoZSBjdXJyZW50IHNlbGVjdGlvbiB1c2luZyB1c2luZyB0aGUKLy8gdmFsdWVzIGZyb20gdGhlIG5vZGUgYmVmb3JlIHRoZSBjdXJyZW50IHBvc2l0aW9uLiBVc2VzCi8vIHRoZSB7QGxpbmsgbW9kdWxlOmVuZ2luZS9tb2RlbC93cml0ZXJ+V3JpdGVyIG1vZGVsIHdyaXRlcn0uCi8vCi8vIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9tb2RlbH5Nb2RlbH0KLy8gQHBhcmFtIHtJdGVyYWJsZS48U3RyaW5nPn0gYXR0cmlidXRlc3MKLy8gQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL3Bvc2l0aW9uflBvc2l0aW9ufSBwb3NpdGlvbgoKCmZ1bmN0aW9uIHNldFNlbGVjdGlvbkF0dHJpYnV0ZXNGcm9tVGhlTm9kZUJlZm9yZShtb2RlbCwgYXR0cmlidXRlcywgcG9zaXRpb24pIHsKICB2YXIgbm9kZUJlZm9yZSA9IHBvc2l0aW9uLm5vZGVCZWZvcmU7CiAgbW9kZWwuY2hhbmdlKGZ1bmN0aW9uICh3cml0ZXIpIHsKICAgIGlmIChub2RlQmVmb3JlKSB7CiAgICAgIHdyaXRlci5zZXRTZWxlY3Rpb25BdHRyaWJ1dGUobm9kZUJlZm9yZS5nZXRBdHRyaWJ1dGVzKCkpOwogICAgfSBlbHNlIHsKICAgICAgd3JpdGVyLnJlbW92ZVNlbGVjdGlvbkF0dHJpYnV0ZShhdHRyaWJ1dGVzKTsKICAgIH0KICB9KTsKfSAvLyBQcmV2ZW50cyB0aGUgY2FyZXQgbW92ZW1lbnQgaW4gdGhlIHZpZXcgYnkgY2FsbGluZyBgcHJldmVudERlZmF1bHRgIG9uIHRoZSBldmVudCBkYXRhLgovLwovLyBAYWxpYXMgZGF0YS5wcmV2ZW50RGVmYXVsdAoKCmZ1bmN0aW9uIHByZXZlbnRDYXJldE1vdmVtZW50KGRhdGEpIHsKICBkYXRhLnByZXZlbnREZWZhdWx0KCk7Cn0gLy8gQ2hlY2tzIHdoZXRoZXIgdGhlIHN0ZXAgYmVmb3JlIGBpc0JldHdlZW5EaWZmZXJlbnRBdHRyaWJ1dGVzKClgLgovLwovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvcG9zaXRpb25+UG9zaXRpb259IHBvc2l0aW9uCi8vIEBwYXJhbSB7U3RyaW5nfSBhdHRyaWJ1dGUKCgpmdW5jdGlvbiBpc1N0ZXBBZnRlckFueUF0dHJpYnV0ZUJvdW5kYXJ5KHBvc2l0aW9uLCBhdHRyaWJ1dGVzKSB7CiAgdmFyIHBvc2l0aW9uQmVmb3JlID0gcG9zaXRpb24uZ2V0U2hpZnRlZEJ5KC0xKTsKICByZXR1cm4gaXNCZXR3ZWVuRGlmZmVyZW50QXR0cmlidXRlcyhwb3NpdGlvbkJlZm9yZSwgYXR0cmlidXRlcyk7Cn0gLy8gQ2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIHBvc2l0aW9uIGlzIGJldHdlZW4gZGlmZmVyZW50IHZhbHVlcyBvZiBnaXZlbiBhdHRyaWJ1dGVzLgovLwovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvcG9zaXRpb25+UG9zaXRpb259IHBvc2l0aW9uCi8vIEBwYXJhbSB7SXRlcmFibGUuPFN0cmluZz59IGF0dHJpYnV0ZXMKCgpmdW5jdGlvbiBpc0JldHdlZW5EaWZmZXJlbnRBdHRyaWJ1dGVzKHBvc2l0aW9uLCBhdHRyaWJ1dGVzKSB7CiAgdmFyIG5vZGVCZWZvcmUgPSBwb3NpdGlvbi5ub2RlQmVmb3JlLAogICAgICBub2RlQWZ0ZXIgPSBwb3NpdGlvbi5ub2RlQWZ0ZXI7CgogIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoYXR0cmlidXRlcyksCiAgICAgIF9zdGVwMjsKCiAgdHJ5IHsKICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgIHZhciBvYnNlcnZlZEF0dHJpYnV0ZSA9IF9zdGVwMi52YWx1ZTsKICAgICAgdmFyIGF0dHJCZWZvcmUgPSBub2RlQmVmb3JlID8gbm9kZUJlZm9yZS5nZXRBdHRyaWJ1dGUob2JzZXJ2ZWRBdHRyaWJ1dGUpIDogdW5kZWZpbmVkOwogICAgICB2YXIgYXR0ckFmdGVyID0gbm9kZUFmdGVyID8gbm9kZUFmdGVyLmdldEF0dHJpYnV0ZShvYnNlcnZlZEF0dHJpYnV0ZSkgOiB1bmRlZmluZWQ7CgogICAgICBpZiAoYXR0ckFmdGVyICE9PSBhdHRyQmVmb3JlKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9pdGVyYXRvcjIuZShlcnIpOwogIH0gZmluYWxseSB7CiAgICBfaXRlcmF0b3IyLmYoKTsKICB9CgogIHJldHVybiBmYWxzZTsKfQ=="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/twostepcaretmovement.js"],"names":["Plugin","keyCodes","TwoStepCaretMovement","editor","attributes","Set","_overrideUid","model","view","editing","locale","modelSelection","document","selection","listenTo","evt","data","isCollapsed","shiftKey","altKey","ctrlKey","arrowRightPressed","keyCode","arrowright","arrowLeftPressed","arrowleft","contentDirection","contentLanguageDirection","isMovementHandled","_handleForwardMovement","_handleBackwardMovement","stop","context","priority","_isNextGravityRestorationSkipped","_isGravityOverridden","directChange","isBetweenDifferentAttributes","getFirstPosition","_restoreGravity","attribute","add","position","isAtStart","hasAnyAttribute","preventCaretMovement","_overrideGravity","setSelectionAttributesFromTheNodeBefore","isStepAfterAnyAttributeBoundary","isAtEnd","change","writer","overrideSelectionGravity","restoreSelectionGravity","observedAttribute","hasAttribute","nodeBefore","setSelectionAttribute","getAttributes","removeSelectionAttribute","preventDefault","positionBefore","getShiftedBy","nodeAfter","attrBefore","getAttribute","undefined","attrAfter"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,qCAAnB;AAEA,SAASC,QAAT,QAAyB,wCAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,oB;;;;;AAQpB;AACD;AACA;AACC,gCAAaC,MAAb,EAAsB;AAAA;;AAAA;;AACrB,8BAAOA,MAAP;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,UAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,UAAKC,YAAL,GAAoB,IAApB;AAlBqB;AAmBrB;AAED;AACD;AACA;;;;;WACC,gBAAO;AAAA;;AACN,UAAMH,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMI,KAAK,GAAGJ,MAAM,CAACI,KAArB;AACA,UAAMC,IAAI,GAAGL,MAAM,CAACM,OAAP,CAAeD,IAA5B;AACA,UAAME,MAAM,GAAGP,MAAM,CAACO,MAAtB;AAEA,UAAMC,cAAc,GAAGJ,KAAK,CAACK,QAAN,CAAeC,SAAtC,CANM,CAQN;;AACA,WAAKC,QAAL,CAAeN,IAAI,CAACI,QAApB,EAA8B,UAA9B,EAA0C,UAAEG,GAAF,EAAOC,IAAP,EAAiB;AAC1D;AACA,YAAK,CAACL,cAAc,CAACM,WAArB,EAAmC;AAClC;AACA,SAJyD,CAM1D;AACA;;;AACA,YAAKD,IAAI,CAACE,QAAL,IAAiBF,IAAI,CAACG,MAAtB,IAAgCH,IAAI,CAACI,OAA1C,EAAoD;AACnD;AACA;;AAED,YAAMC,iBAAiB,GAAGL,IAAI,CAACM,OAAL,IAAgBrB,QAAQ,CAACsB,UAAnD;AACA,YAAMC,gBAAgB,GAAGR,IAAI,CAACM,OAAL,IAAgBrB,QAAQ,CAACwB,SAAlD,CAb0D,CAe1D;;AACA,YAAK,CAACJ,iBAAD,IAAsB,CAACG,gBAA5B,EAA+C;AAC9C;AACA;;AAED,YAAME,gBAAgB,GAAGhB,MAAM,CAACiB,wBAAhC;AACA,YAAIC,iBAAiB,GAAG,KAAxB;;AAEA,YAAOF,gBAAgB,KAAK,KAArB,IAA8BL,iBAAhC,IAAyDK,gBAAgB,KAAK,KAArB,IAA8BF,gBAA5F,EAAiH;AAChHI,UAAAA,iBAAiB,GAAG,MAAI,CAACC,sBAAL,CAA6Bb,IAA7B,CAApB;AACA,SAFD,MAEO;AACNY,UAAAA,iBAAiB,GAAG,MAAI,CAACE,uBAAL,CAA8Bd,IAA9B,CAApB;AACA,SA3ByD,CA6B1D;AACA;;;AACA,YAAKY,iBAAiB,KAAK,IAA3B,EAAkC;AACjCb,UAAAA,GAAG,CAACgB,IAAJ;AACA;AACD,OAlCD,EAkCG;AAAEC,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAlCH;AAoCA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,WAAKC,gCAAL,GAAwC,KAAxC,CArDM,CAuDN;;AACA,WAAKpB,QAAL,CAAeH,cAAf,EAA+B,cAA/B,EAA+C,UAAEI,GAAF,EAAOC,IAAP,EAAiB;AAC/D;AACA;AACA;AACA,YAAK,MAAI,CAACkB,gCAAV,EAA6C;AAC5C,UAAA,MAAI,CAACA,gCAAL,GAAwC,KAAxC;AAEA;AACA,SAR8D,CAU/D;AACA;;;AACA,YAAK,CAAC,MAAI,CAACC,oBAAX,EAAkC;AACjC;AACA,SAd8D,CAgB/D;AACA;AACA;;;AACA,YAAK,CAACnB,IAAI,CAACoB,YAAN,IAAsBC,4BAA4B,CAAE1B,cAAc,CAAC2B,gBAAf,EAAF,EAAqC,MAAI,CAAClC,UAA1C,CAAvD,EAAgH;AAC/G;AACA;;AAED,QAAA,MAAI,CAACmC,eAAL;AACA,OAxBD;AAyBA;AAED;AACD;AACA;AACA;AACA;;;;WACC,2BAAmBC,SAAnB,EAA+B;AAC9B,WAAKpC,UAAL,CAAgBqC,GAAhB,CAAqBD,SAArB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,gCAAwBxB,IAAxB,EAA+B;AAC9B,UAAMZ,UAAU,GAAG,KAAKA,UAAxB;AACA,UAAMG,KAAK,GAAG,KAAKJ,MAAL,CAAYI,KAA1B;AACA,UAAMM,SAAS,GAAGN,KAAK,CAACK,QAAN,CAAeC,SAAjC;AACA,UAAM6B,QAAQ,GAAG7B,SAAS,CAACyB,gBAAV,EAAjB,CAJ8B,CAK9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAK,KAAKH,oBAAV,EAAiC;AAChC,eAAO,KAAP;AACA,OAhB6B,CAkB9B;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAKO,QAAQ,CAACC,SAAT,IAAsBC,eAAe,CAAE/B,SAAF,EAAaT,UAAb,CAA1C,EAAsE;AACrE,eAAO,KAAP;AACA,OA3B6B,CA6B9B;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAKiC,4BAA4B,CAAEK,QAAF,EAAYtC,UAAZ,CAAjC,EAA4D;AAC3DyC,QAAAA,oBAAoB,CAAE7B,IAAF,CAApB;;AACA,aAAK8B,gBAAL;;AACA,eAAO,IAAP;AACA;AACD;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,iCAAyB9B,IAAzB,EAAgC;AAC/B,UAAMZ,UAAU,GAAG,KAAKA,UAAxB;AACA,UAAMG,KAAK,GAAG,KAAKJ,MAAL,CAAYI,KAA1B;AACA,UAAMM,SAAS,GAAGN,KAAK,CAACK,QAAN,CAAeC,SAAjC;AACA,UAAM6B,QAAQ,GAAG7B,SAAS,CAACyB,gBAAV,EAAjB,CAJ+B,CAM/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAK,KAAKH,oBAAV,EAAiC;AAChCU,QAAAA,oBAAoB,CAAE7B,IAAF,CAApB;;AACA,aAAKuB,eAAL;;AACAQ,QAAAA,uCAAuC,CAAExC,KAAF,EAASH,UAAT,EAAqBsC,QAArB,CAAvC;AAEA,eAAO,IAAP;AACA,OAND,MAMO;AACN;AACA;AACA;AACA;AACA;AACA,YAAKA,QAAQ,CAACC,SAAd,EAA0B;AACzB,cAAKC,eAAe,CAAE/B,SAAF,EAAaT,UAAb,CAApB,EAAgD;AAC/CyC,YAAAA,oBAAoB,CAAE7B,IAAF,CAApB;AACA+B,YAAAA,uCAAuC,CAAExC,KAAF,EAASH,UAAT,EAAqBsC,QAArB,CAAvC;AAEA,mBAAO,IAAP;AACA;;AAED,iBAAO,KAAP;AACA,SAfK,CAiBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,YAAKM,+BAA+B,CAAEN,QAAF,EAAYtC,UAAZ,CAApC,EAA+D;AAC9D;AACA;AACA;AACA;AACA;AACA,cACCsC,QAAQ,CAACO,OAAT,IACA,CAACL,eAAe,CAAE/B,SAAF,EAAaT,UAAb,CADhB,IAEAiC,4BAA4B,CAAEK,QAAF,EAAYtC,UAAZ,CAH7B,EAIE;AACDyC,YAAAA,oBAAoB,CAAE7B,IAAF,CAApB;AACA+B,YAAAA,uCAAuC,CAAExC,KAAF,EAASH,UAAT,EAAqBsC,QAArB,CAAvC;AAEA,mBAAO,IAAP;AACA,WAf6D,CAgB9D;AACA;AACA;;;AACA,eAAKR,gCAAL,GAAwC,IAAxC;;AACA,eAAKY,gBAAL,GApB8D,CAsB9D;AACA;AACA;;;AACA,iBAAO,KAAP;AACA;AACD;AACD;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;SACC,eAA2B;AAC1B,aAAO,CAAC,CAAC,KAAKxC,YAAd;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,4BAAmB;AAClB,WAAKA,YAAL,GAAoB,KAAKH,MAAL,CAAYI,KAAZ,CAAkB2C,MAAlB,CAA0B,UAAAC,MAAM,EAAI;AACvD,eAAOA,MAAM,CAACC,wBAAP,EAAP;AACA,OAFmB,CAApB;AAGA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;WACC,2BAAkB;AAAA;;AACjB,WAAKjD,MAAL,CAAYI,KAAZ,CAAkB2C,MAAlB,CAA0B,UAAAC,MAAM,EAAI;AACnCA,QAAAA,MAAM,CAACE,uBAAP,CAAgC,MAAI,CAAC/C,YAArC;AACA,QAAA,MAAI,CAACA,YAAL,GAAoB,IAApB;AACA,OAHD;AAIA;;;;AA1SD;AACD;AACA;AACC,mBAAwB;AACvB,aAAO,sBAAP;AACA;;;;EANgDN,M,GA8SlD;AACA;AACA;AACA;;;SAjTqBE,oB;;AAkTrB,SAAS0C,eAAT,CAA0B/B,SAA1B,EAAqCT,UAArC,EAAkD;AAAA,6CAChBA,UADgB;AAAA;;AAAA;AACjD,wDAA8C;AAAA,UAAlCkD,iBAAkC;;AAC7C,UAAKzC,SAAS,CAAC0C,YAAV,CAAwBD,iBAAxB,CAAL,EAAmD;AAClD,eAAO,IAAP;AACA;AACD;AALgD;AAAA;AAAA;AAAA;AAAA;;AAOjD,SAAO,KAAP;AACA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASP,uCAAT,CAAkDxC,KAAlD,EAAyDH,UAAzD,EAAqEsC,QAArE,EAAgF;AAC/E,MAAMc,UAAU,GAAGd,QAAQ,CAACc,UAA5B;AACAjD,EAAAA,KAAK,CAAC2C,MAAN,CAAc,UAAAC,MAAM,EAAI;AACvB,QAAKK,UAAL,EAAkB;AACjBL,MAAAA,MAAM,CAACM,qBAAP,CAA8BD,UAAU,CAACE,aAAX,EAA9B;AACA,KAFD,MAEO;AACNP,MAAAA,MAAM,CAACQ,wBAAP,CAAiCvD,UAAjC;AACA;AACD,GAND;AAOA,C,CAED;AACA;AACA;;;AACA,SAASyC,oBAAT,CAA+B7B,IAA/B,EAAsC;AACrCA,EAAAA,IAAI,CAAC4C,cAAL;AACA,C,CAED;AACA;AACA;AACA;;;AACA,SAASZ,+BAAT,CAA0CN,QAA1C,EAAoDtC,UAApD,EAAiE;AAChE,MAAMyD,cAAc,GAAGnB,QAAQ,CAACoB,YAAT,CAAuB,CAAC,CAAxB,CAAvB;AACA,SAAOzB,4BAA4B,CAAEwB,cAAF,EAAkBzD,UAAlB,CAAnC;AACA,C,CAED;AACA;AACA;AACA;;;AACA,SAASiC,4BAAT,CAAuCK,QAAvC,EAAiDtC,UAAjD,EAA8D;AAAA,MACrDoD,UADqD,GAC3Bd,QAD2B,CACrDc,UADqD;AAAA,MACzCO,SADyC,GAC3BrB,QAD2B,CACzCqB,SADyC;;AAAA,8CAE5B3D,UAF4B;AAAA;;AAAA;AAE7D,2DAA8C;AAAA,UAAlCkD,iBAAkC;AAC7C,UAAMU,UAAU,GAAGR,UAAU,GAAGA,UAAU,CAACS,YAAX,CAAyBX,iBAAzB,CAAH,GAAkDY,SAA/E;AACA,UAAMC,SAAS,GAAGJ,SAAS,GAAGA,SAAS,CAACE,YAAV,CAAwBX,iBAAxB,CAAH,GAAiDY,SAA5E;;AAEA,UAAKC,SAAS,KAAKH,UAAnB,EAAgC;AAC/B,eAAO,IAAP;AACA;AACD;AAT4D;AAAA;AAAA;AAAA;AAAA;;AAU7D,SAAO,KAAP;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/twostepcaretmovement\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * This plugin enables the two-step caret (phantom) movement behavior for\n * {@link module:typing/twostepcaretmovement~TwoStepCaretMovement#registerAttribute registered attributes}\n * on arrow right (<kbd>→</kbd>) and left (<kbd>←</kbd>) key press.\n *\n * Thanks to this (phantom) caret movement the user is able to type before/after as well as at the\n * beginning/end of an attribute.\n *\n * **Note:** This plugin support right–to–left (Arabic, Hebrew, etc.) content by mirroring its behavior\n * but for the sake of simplicity examples showcase only left–to–right use–cases.\n *\n * # Forward movement\n *\n * ## \"Entering\" an attribute:\n *\n * When this plugin is enabled and registered for the `a` attribute and the selection is right before it\n * (at the attribute boundary), pressing the right arrow key will not move the selection but update its\n * attributes accordingly:\n *\n * * When enabled:\n *\n *   \t\tfoo{}<$text a=\"true\">bar</$text>\n *\n *    <kbd>→</kbd>\n *\n *   \t\tfoo<$text a=\"true\">{}bar</$text>\n *\n * * When disabled:\n *\n *   \t\tfoo{}<$text a=\"true\">bar</$text>\n *\n *   <kbd>→</kbd>\n *\n *   \t\tfoo<$text a=\"true\">b{}ar</$text>\n *\n *\n * ## \"Leaving\" an attribute:\n *\n * * When enabled:\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n *    <kbd>→</kbd>\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n * * When disabled:\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n *   <kbd>→</kbd>\n *\n *   \t\t<$text a=\"true\">bar</$text>b{}az\n *\n * # Backward movement\n *\n * * When enabled:\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n *    <kbd>←</kbd>\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n * * When disabled:\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n *   <kbd>←</kbd>\n *\n *   \t\t<$text a=\"true\">ba{}r</$text>b{}az\n *\n * # Multiple attributes\n *\n * * When enabled and many attributes starts or ends at the same position:\n *\n *   \t\t<$text a=\"true\" b=\"true\">bar</$text>{}baz\n *\n *    <kbd>←</kbd>\n *\n *   \t\t<$text a=\"true\" b=\"true\">bar{}</$text>baz\n *\n * * When enabled and one procedes another:\n *\n *   \t\t<$text a=\"true\">bar</$text><$text b=\"true\">{}bar</$text>\n *\n *    <kbd>←</kbd>\n *\n *   \t\t<$text a=\"true\">bar{}</$text><$text b=\"true\">bar</$text>\n *\n */\nexport default class TwoStepCaretMovement extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TwoStepCaretMovement';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A set of attributes to handle.\n\t\t *\n\t\t * @protected\n\t\t * @property {module:typing/twostepcaretmovement~TwoStepCaretMovement}\n\t\t */\n\t\tthis.attributes = new Set();\n\n\t\t/**\n\t\t * The current UID of the overridden gravity, as returned by\n\t\t * {@link module:engine/model/writer~Writer#overrideSelectionGravity}.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._overrideUid = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst view = editor.editing.view;\n\t\tconst locale = editor.locale;\n\n\t\tconst modelSelection = model.document.selection;\n\n\t\t// Listen to keyboard events and handle the caret movement according to the 2-step caret logic.\n\t\tthis.listenTo( view.document, 'arrowKey', ( evt, data ) => {\n\t\t\t// This implementation works only for collapsed selection.\n\t\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// When user tries to expand the selection or jump over the whole word or to the beginning/end then\n\t\t\t// two-steps movement is not necessary.\n\t\t\tif ( data.shiftKey || data.altKey || data.ctrlKey ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst arrowRightPressed = data.keyCode == keyCodes.arrowright;\n\t\t\tconst arrowLeftPressed = data.keyCode == keyCodes.arrowleft;\n\n\t\t\t// When neither left or right arrow has been pressed then do noting.\n\t\t\tif ( !arrowRightPressed && !arrowLeftPressed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst contentDirection = locale.contentLanguageDirection;\n\t\t\tlet isMovementHandled = false;\n\n\t\t\tif ( ( contentDirection === 'ltr' && arrowRightPressed ) || ( contentDirection === 'rtl' && arrowLeftPressed ) ) {\n\t\t\t\tisMovementHandled = this._handleForwardMovement( data );\n\t\t\t} else {\n\t\t\t\tisMovementHandled = this._handleBackwardMovement( data );\n\t\t\t}\n\n\t\t\t// Stop the keydown event if the two-step caret movement handled it. Avoid collisions\n\t\t\t// with other features which may also take over the caret movement (e.g. Widget).\n\t\t\tif ( isMovementHandled === true ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { context: '$text', priority: 'highest' } );\n\n\t\t/**\n\t\t * A flag indicating that the automatic gravity restoration should not happen upon the next\n\t\t * gravity restoration.\n\t\t * {@link module:engine/model/selection~Selection#event:change:range} event.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._isNextGravityRestorationSkipped = false;\n\n\t\t// The automatic gravity restoration logic.\n\t\tthis.listenTo( modelSelection, 'change:range', ( evt, data ) => {\n\t\t\t// Skipping the automatic restoration is needed if the selection should change\n\t\t\t// but the gravity must remain overridden afterwards. See the #handleBackwardMovement\n\t\t\t// to learn more.\n\t\t\tif ( this._isNextGravityRestorationSkipped ) {\n\t\t\t\tthis._isNextGravityRestorationSkipped = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip automatic restore when the gravity is not overridden — simply, there's nothing to restore\n\t\t\t// at this moment.\n\t\t\tif ( !this._isGravityOverridden ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip automatic restore when the change is indirect AND the selection is at the attribute boundary.\n\t\t\t// It means that e.g. if the change was external (collaboration) and the user had their\n\t\t\t// selection around the link, its gravity should remain intact in this change:range event.\n\t\t\tif ( !data.directChange && isBetweenDifferentAttributes( modelSelection.getFirstPosition(), this.attributes ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._restoreGravity();\n\t\t} );\n\t}\n\n\t/**\n\t * Registers a given attribute for the two-step caret movement.\n\t *\n\t * @param {String} attribute Name of the attribute to handle.\n\t */\n\tregisterAttribute( attribute ) {\n\t\tthis.attributes.add( attribute );\n\t}\n\n\t/**\n\t * Updates the document selection and the view according to the two–step caret movement state\n\t * when moving **forwards**. Executed upon `keypress` in the {@link module:engine/view/view~View}.\n\t *\n\t * @private\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} data Data of the key press.\n\t * @returns {Boolean} `true` when the handler prevented caret movement\n\t */\n\t_handleForwardMovement( data ) {\n\t\tconst attributes = this.attributes;\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst position = selection.getFirstPosition();\n\t\t// DON'T ENGAGE 2-SCM if gravity is already overridden. It means that we just entered\n\t\t//\n\t\t// \t\t<paragraph>foo<$text attribute>{}bar</$text>baz</paragraph>\n\t\t//\n\t\t// or left the attribute\n\t\t//\n\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>{}baz</paragraph>\n\t\t//\n\t\t// and the gravity will be restored automatically.\n\t\tif ( this._isGravityOverridden ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// DON'T ENGAGE 2-SCM when the selection is at the beginning of the block AND already has the\n\t\t// attribute:\n\t\t// * when the selection was initially set there using the mouse,\n\t\t// * when the editor has just started\n\t\t//\n\t\t//\t\t<paragraph><$text attribute>{}bar</$text>baz</paragraph>\n\t\t//\n\t\tif ( position.isAtStart && hasAnyAttribute( selection, attributes ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// ENGAGE 2-SCM When at least one of the observed attributes changes its value (incl. starts, ends).\n\t\t//\n\t\t//\t\t<paragraph>foo<$text attribute>bar{}</$text>baz</paragraph>\n\t\t//\t\t<paragraph>foo<$text attribute>bar{}</$text><$text otherAttribute>baz</$text></paragraph>\n\t\t//\t\t<paragraph>foo<$text attribute=1>bar{}</$text><$text attribute=2>baz</$text></paragraph>\n\t\t//\t\t<paragraph>foo{}<$text attribute>bar</$text>baz</paragraph>\n\t\t//\n\t\tif ( isBetweenDifferentAttributes( position, attributes ) ) {\n\t\t\tpreventCaretMovement( data );\n\t\t\tthis._overrideGravity();\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the document selection and the view according to the two–step caret movement state\n\t * when moving **backwards**. Executed upon `keypress` in the {@link module:engine/view/view~View}.\n\t *\n\t * @private\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} data Data of the key press.\n\t * @returns {Boolean} `true` when the handler prevented caret movement\n\t */\n\t_handleBackwardMovement( data ) {\n\t\tconst attributes = this.attributes;\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst position = selection.getFirstPosition();\n\n\t\t// When the gravity is already overridden (by this plugin), it means we are on the two-step position.\n\t\t// Prevent the movement, restore the gravity and update selection attributes.\n\t\t//\n\t\t//\t\t<paragraph>foo<$text attribute=1>bar</$text><$text attribute=2>{}baz</$text></paragraph>\n\t\t//\t\t<paragraph>foo<$text attribute>bar</$text><$text otherAttribute>{}baz</$text></paragraph>\n\t\t//\t\t<paragraph>foo<$text attribute>{}bar</$text>baz</paragraph>\n\t\t//\t\t<paragraph>foo<$text attribute>bar</$text>{}baz</paragraph>\n\t\t//\n\t\tif ( this._isGravityOverridden ) {\n\t\t\tpreventCaretMovement( data );\n\t\t\tthis._restoreGravity();\n\t\t\tsetSelectionAttributesFromTheNodeBefore( model, attributes, position );\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// REMOVE SELECTION ATTRIBUTE when restoring gravity towards a non-existent content at the\n\t\t\t// beginning of the block.\n\t\t\t//\n\t\t\t// \t\t<paragraph>{}<$text attribute>bar</$text></paragraph>\n\t\t\t//\n\t\t\tif ( position.isAtStart ) {\n\t\t\t\tif ( hasAnyAttribute( selection, attributes ) ) {\n\t\t\t\t\tpreventCaretMovement( data );\n\t\t\t\t\tsetSelectionAttributesFromTheNodeBefore( model, attributes, position );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// When we are moving from natural gravity, to the position of the 2SCM, we need to override the gravity,\n\t\t\t// and make sure it won't be restored. Unless it's at the end of the block and an observed attribute.\n\t\t\t// We need to check if the caret is a one position before the attribute boundary:\n\t\t\t//\n\t\t\t//\t\t<paragraph>foo<$text attribute=1>bar</$text><$text attribute=2>b{}az</$text></paragraph>\n\t\t\t//\t\t<paragraph>foo<$text attribute>bar</$text><$text otherAttribute>b{}az</$text></paragraph>\n\t\t\t//\t\t<paragraph>foo<$text attribute>b{}ar</$text>baz</paragraph>\n\t\t\t//\t\t<paragraph>foo<$text attribute>bar</$text>b{}az</paragraph>\n\t\t\t//\n\t\t\tif ( isStepAfterAnyAttributeBoundary( position, attributes ) ) {\n\t\t\t\t// ENGAGE 2-SCM if the selection has no attribute. This may happen when the user\n\t\t\t\t// left the attribute using a FORWARD 2-SCM.\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph><$text attribute>bar</$text>{}</paragraph>\n\t\t\t\t//\n\t\t\t\tif (\n\t\t\t\t\tposition.isAtEnd &&\n\t\t\t\t\t!hasAnyAttribute( selection, attributes ) &&\n\t\t\t\t\tisBetweenDifferentAttributes( position, attributes )\n\t\t\t\t) {\n\t\t\t\t\tpreventCaretMovement( data );\n\t\t\t\t\tsetSelectionAttributesFromTheNodeBefore( model, attributes, position );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t// Skip the automatic gravity restore upon the next selection#change:range event.\n\t\t\t\t// If not skipped, it would automatically restore the gravity, which should remain\n\t\t\t\t// overridden.\n\t\t\t\tthis._isNextGravityRestorationSkipped = true;\n\t\t\t\tthis._overrideGravity();\n\n\t\t\t\t// Don't return \"true\" here because we didn't call _preventCaretMovement.\n\t\t\t\t// Returning here will destabilize the filler logic, which also listens to\n\t\t\t\t// keydown (and the event would be stopped).\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * `true` when the gravity is overridden for the plugin.\n\t *\n\t * @readonly\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _isGravityOverridden() {\n\t\treturn !!this._overrideUid;\n\t}\n\n\t/**\n\t * Overrides the gravity using the {@link module:engine/model/writer~Writer model writer}\n\t * and stores the information about this fact in the {@link #_overrideUid}.\n\t *\n\t * A shorthand for {@link module:engine/model/writer~Writer#overrideSelectionGravity}.\n\t *\n\t * @private\n\t */\n\t_overrideGravity() {\n\t\tthis._overrideUid = this.editor.model.change( writer => {\n\t\t\treturn writer.overrideSelectionGravity();\n\t\t} );\n\t}\n\n\t/**\n\t * Restores the gravity using the {@link module:engine/model/writer~Writer model writer}.\n\t *\n\t * A shorthand for {@link module:engine/model/writer~Writer#restoreSelectionGravity}.\n\t *\n\t * @private\n\t */\n\t_restoreGravity() {\n\t\tthis.editor.model.change( writer => {\n\t\t\twriter.restoreSelectionGravity( this._overrideUid );\n\t\t\tthis._overrideUid = null;\n\t\t} );\n\t}\n}\n\n// Checks whether the selection has any of given attributes.\n//\n// @param {module:engine/model/documentselection~DocumentSelection} selection\n// @param {Iterable.<String>} attributes\nfunction hasAnyAttribute( selection, attributes ) {\n\tfor ( const observedAttribute of attributes ) {\n\t\tif ( selection.hasAttribute( observedAttribute ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n// Applies the given attributes to the current selection using using the\n// values from the node before the current position. Uses\n// the {@link module:engine/model/writer~Writer model writer}.\n//\n// @param {module:engine/model/model~Model}\n// @param {Iterable.<String>} attributess\n// @param {module:engine/model/position~Position} position\nfunction setSelectionAttributesFromTheNodeBefore( model, attributes, position ) {\n\tconst nodeBefore = position.nodeBefore;\n\tmodel.change( writer => {\n\t\tif ( nodeBefore ) {\n\t\t\twriter.setSelectionAttribute( nodeBefore.getAttributes() );\n\t\t} else {\n\t\t\twriter.removeSelectionAttribute( attributes );\n\t\t}\n\t} );\n}\n\n// Prevents the caret movement in the view by calling `preventDefault` on the event data.\n//\n// @alias data.preventDefault\nfunction preventCaretMovement( data ) {\n\tdata.preventDefault();\n}\n\n// Checks whether the step before `isBetweenDifferentAttributes()`.\n//\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isStepAfterAnyAttributeBoundary( position, attributes ) {\n\tconst positionBefore = position.getShiftedBy( -1 );\n\treturn isBetweenDifferentAttributes( positionBefore, attributes );\n}\n\n// Checks whether the given position is between different values of given attributes.\n//\n// @param {module:engine/model/position~Position} position\n// @param {Iterable.<String>} attributes\nfunction isBetweenDifferentAttributes( position, attributes ) {\n\tconst { nodeBefore, nodeAfter } = position;\n\tfor ( const observedAttribute of attributes ) {\n\t\tconst attrBefore = nodeBefore ? nodeBefore.getAttribute( observedAttribute ) : undefined;\n\t\tconst attrAfter = nodeAfter ? nodeAfter.getAttribute( observedAttribute ) : undefined;\n\n\t\tif ( attrAfter !== attrBefore ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n"]}]}