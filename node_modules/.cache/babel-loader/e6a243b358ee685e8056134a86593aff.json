{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-clipboard/src/dragdrop.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-clipboard/src/dragdrop.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9nZXQgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXQiOwppbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CgovKioKICogQGxpY2Vuc2UgQ29weXJpZ2h0IChjKSAyMDAzLTIwMjEsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIEZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHBzOi8vY2tlZGl0b3IuY29tL2xlZ2FsL2NrZWRpdG9yLW9zcy1saWNlbnNlCiAqLwoKLyoqCiAqIEBtb2R1bGUgY2xpcGJvYXJkL2RyYWdkcm9wCiAqLwoKLyogZ2xvYmFscyBzZXRUaW1lb3V0LCBjbGVhclRpbWVvdXQgKi8KaW1wb3J0IFBsdWdpbiBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LWNvcmUvc3JjL3BsdWdpbic7CmltcG9ydCBMaXZlUmFuZ2UgZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS1lbmdpbmUvc3JjL21vZGVsL2xpdmVyYW5nZSc7CmltcG9ydCBNb3VzZU9ic2VydmVyIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtZW5naW5lL3NyYy92aWV3L29ic2VydmVyL21vdXNlb2JzZXJ2ZXInOwppbXBvcnQgV2lkZ2V0IGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtd2lkZ2V0L3NyYy93aWRnZXQnOwppbXBvcnQgdWlkIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL3VpZCc7CmltcG9ydCBlbnYgZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS11dGlscy9zcmMvZW52JzsKaW1wb3J0IHsgaXNXaWRnZXQgfSBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXdpZGdldC9zcmMvdXRpbHMnOwppbXBvcnQgQ2xpcGJvYXJkUGlwZWxpbmUgZnJvbSAnLi9jbGlwYm9hcmRwaXBlbGluZSc7CmltcG9ydCBDbGlwYm9hcmRPYnNlcnZlciBmcm9tICcuL2NsaXBib2FyZG9ic2VydmVyJzsKaW1wb3J0IHsgdGhyb3R0bGUgfSBmcm9tICdsb2Rhc2gtZXMnOwppbXBvcnQgJy4uL3RoZW1lL2NsaXBib2FyZC5jc3MnOyAvLyBEcmFnIGFuZCBkcm9wIGV2ZW50cyBvdmVydmlldzoKLy8KLy8gICAgICAgICAgICAgICAg4pSM4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQCi8vICAgICAgICAgICAgICAgIOKUgiAgICAgbW91c2Vkb3duICAgIOKUgiAgIFNldHMgdGhlIGRyYWdnYWJsZSBhdHRyaWJ1dGUuCi8vICAgICAgICAgICAgICAgIOKUlOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUrOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUmAovLyAgICAgICAgICAgICAgICAgICAgICAgICAg4pSCCi8vICAgICAgICAgICAgICAgICAgICAgICAgICDilJTilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJAKLy8gICAgICAgICAgICAgICAgICAgICAgICAgIOKUgiAgICAgICAgICAgICAgICAgICAgIOKUggovLyAgICAgICAgICAgICAgICAgICAgICAgICAg4pSCICAgICAgICAgICDilIzilIDilIDilIDilIDilIDilIDilIDilIDilIBW4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQCi8vICAgICAgICAgICAgICAgICAgICAgICAgICDilIIgICAgICAgICAgIOKUgiAgICAgIG1vdXNldXAgICAgIOKUgiAgIERyYWdnaW5nIGRpZCBub3Qgc3RhcnQsIHJlbW92ZXMgdGhlIGRyYWdnYWJsZSBhdHRyaWJ1dGUuCi8vICAgICAgICAgICAgICAgICAgICAgICAgICDilIIgICAgICAgICAgIOKUlOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUmAovLyAgICAgICAgICAgICAgICAgICAgICAgICAg4pSCCi8vICAgICAgICAgICAgICAgIOKUjOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFbilIDilIDilIDilIDilIDilIDilIDilIDilJAgICBSZXRyaWV2ZXMgdGhlIHNlbGVjdGVkIG1vZGVsLkRvY3VtZW50RnJhZ21lbnQKLy8gICAgICAgICAgICAgICAg4pSCICAgICBkcmFnc3RhcnQgICAg4pSCICAgYW5kIGNvbnZlcnRzIGl0IHRvIHZpZXcuRG9jdW1lbnRGcmFnbWVudC4KLy8gICAgICAgICAgICAgICAg4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSs4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYCi8vICAgICAgICAgICAgICAgICAgICAgICAgICDilIIKLy8gICAgICAgICAgICAgICAg4pSM4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAVuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkCAgIFByb2Nlc3NlcyB2aWV3LkRvY3VtZW50RnJhZ21lbnQgdG8gdGV4dC9odG1sIGFuZCB0ZXh0L3BsYWluCi8vICAgICAgICAgICAgICAgIOKUgiAgY2xpcGJvYXJkT3V0cHV0IOKUgiAgIGFuZCBzdG9yZXMgdGhlIHJlc3VsdHMgaW4gZGF0YS5kYXRhVHJhbnNmZXIuCi8vICAgICAgICAgICAgICAgIOKUlOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUrOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUmAovLyAgICAgICAgICAgICAgICAgICAgICAgICAg4pSCCi8vICAgICAgICAgICAgICAgICAgICAgICAgICDilIIgICBET00gZHJhZ292ZXIKLy8gICAgICAgICAgICAgICAgICAgICAgICAgIOKUjOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkAovLyAgICAgICAgICAgICAgICAgICAgICAgICAg4pSCICAgICAgICAgICAg4pSCCi8vICAgICAgICAgICAgICAgIOKUjOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFbilIDilIDilIDilIDilIDilIDilIDilIDilJAgICDilIIKLy8gICAgICAgICAgICAgICAg4pSCICAgICBkcmFnZ2luZyAgICAg4pSCICAg4pSCICAgVXBkYXRlcyB0aGUgZHJvcCB0YXJnZXQgbWFya2VyLgovLyAgICAgICAgICAgICAgICDilJTilIDilIDilIDilIDilIDilIDilIDilIDilIDilKzilIDilIDilIDilIDilIDilIDilIDilIDilJggICDilIIKLy8gICAgICAgICAgICAgICAgICAgICAgICAgIOKUgiAgICAgICAgICAgIOKUggovLyAgICAgICAgICAgIOKUjOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUlOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUmAovLyAgICAgICAgICAgIOKUgiAgICAgICAgICAgICDilIIgICAgICAgICAgICDilIIKLy8gICAgICAgICAgICDilIIgICDilIzilIDilIDilIDilIDilIDilIDilIDilIDilIBW4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQICAg4pSCCi8vICAgICAgICAgICAg4pSCICAg4pSCICAgICBkcmFnbGVhdmUgICAg4pSCICAg4pSCICAgUmVtb3ZlcyB0aGUgZHJvcCB0YXJnZXQgbWFya2VyLgovLyAgICAgICAgICAgIOKUgiAgIOKUlOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUrOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUmCAgIOKUggovLyAgICAgICAgICAgIOKUgiAgICAgICAgICAgICDilIIgICAgICAgICAgICDilIIKLy8gICAgICAgIOKUjOKUgOKUgOKUgOKUguKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUmCAgICAgICAgICAgIOKUggovLyAgICAgICAg4pSCICAg4pSCICAgICAgICAgICAgIOKUgiAgICAgICAgICAgIOKUggovLyAgICAgICAg4pSCICAg4pSCICAg4pSM4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAVuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkCAgIOKUggovLyAgICAgICAg4pSCICAg4pSCICAg4pSCICAgICBkcmFnZW50ZXIgICAg4pSCICAg4pSCICAgRm9jdXNlcyB0aGUgZWRpdG9yIHZpZXcuCi8vICAgICAgICDilIIgICDilIIgICDilJTilIDilIDilIDilIDilIDilIDilIDilIDilIDilKzilIDilIDilIDilIDilIDilIDilIDilIDilJggICDilIIKLy8gICAgICAgIOKUgiAgIOKUgiAgICAgICAgICAgICDilIIgICAgICAgICAgICDilIIKLy8gICAgICAgIOKUgiAgIOKUgiAgICAgICAgICAgICDilJTilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJgKLy8gICAgICAgIOKUgiAgIOKUggovLyAgICAgICAg4pSCICAg4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQCi8vICAgICAgICDilIIgICDilIIgICAgICAgICAgICAg4pSCCi8vICAgICAgICDilIIgICDilIIgICDilIzilIDilIDilIDilIDilIDilIDilIDilIDilIBW4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQCi8vICAgICAgICDilJTilIDilIDilIDilJAgICDilIIgICAgICAgZHJvcCAgICAgICDilIIgICAoVGhlIGRlZmF1bHQgaGFuZGxlciBvZiB0aGUgY2xpcGJvYXJkIHBpcGVsaW5lKS4KLy8gICAgICAgICAgICDilIIgICDilJTilIDilIDilIDilIDilIDilIDilIDilIDilIDilKzilIDilIDilIDilIDilIDilIDilIDilIDilJgKLy8gICAgICAgICAgICDilIIgICAgICAgICAgICAg4pSCCi8vICAgICAgICAgICAg4pSCICAg4pSM4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAVuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkCAgIFJlc29sdmVzIHRoZSBmaW5hbCBkYXRhLnRhcmdldFJhbmdlcy4KLy8gICAgICAgICAgICDilIIgICDilIIgIGNsaXBib2FyZElucHV0ICDilIIgICBBYm9ydHMgaWYgZHJvcHBpbmcgb24gZHJhZ2dlZCBjb250ZW50LgovLyAgICAgICAgICAgIOKUgiAgIOKUlOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUrOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUmAovLyAgICAgICAgICAgIOKUgiAgICAgICAgICAgICDilIIKLy8gICAgICAgICAgICDilIIgICDilIzilIDilIDilIDilIDilIDilIDilIDilIDilIBW4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQCi8vICAgICAgICAgICAg4pSCICAg4pSCICBjbGlwYm9hcmRJbnB1dCAg4pSCICAgKFRoZSBkZWZhdWx0IGhhbmRsZXIgb2YgdGhlIGNsaXBib2FyZCBwaXBlbGluZSkuCi8vICAgICAgICAgICAg4pSCICAg4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSs4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYCi8vICAgICAgICAgICAg4pSCICAgICAgICAgICAgIOKUggovLyAgICAgICAgICAgIOKUgiDilIzilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIBW4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQCi8vICAgICAgICAgICAg4pSCIOKUgiAgaW5wdXRUcmFuc2Zvcm1hdGlvbiAg4pSCICAgKFRoZSBkZWZhdWx0IGhhbmRsZXIgb2YgdGhlIGNsaXBib2FyZCBwaXBlbGluZSkuCi8vICAgICAgICAgICAg4pSCIOKUlOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUrOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUmAovLyAgICAgICAgICAgIOKUgiAgICAgICAgICAgICDilIIKLy8gICAgICAgICAgICDilIIgIOKUjOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFbilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJAKLy8gICAgICAgICAgICDilIIgIOKUgiAgIGNvbnRlbnRJbnNlcnRpb24gIOKUgiAgIFVwZGF0ZXMgdGhlIGRvY3VtZW50IHNlbGVjdGlvbiB0byBkcm9wIHJhbmdlLgovLyAgICAgICAgICAgIOKUgiAg4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSs4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYCi8vICAgICAgICAgICAg4pSCICAgICAgICAgICAgIOKUggovLyAgICAgICAgICAgIOKUgiAg4pSM4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAVuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkAovLyAgICAgICAgICAgIOKUgiAg4pSCICAgY29udGVudEluc2VydGlvbiAg4pSCICAgKFRoZSBkZWZhdWx0IGhhbmRsZXIgb2YgdGhlIGNsaXBib2FyZCBwaXBlbGluZSkuCi8vICAgICAgICAgICAg4pSCICDilJTilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilKzilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJgKLy8gICAgICAgICAgICDilIIgICAgICAgICAgICAg4pSCCi8vICAgICAgICAgICAg4pSCICDilIzilIDilIDilIDilIDilIDilIDilIDilIDilIDilIBW4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQCi8vICAgICAgICAgICAg4pSCICDilIIgICBjb250ZW50SW5zZXJ0aW9uICDilIIgICBSZW1vdmVzIHRoZSBjb250ZW50IGZyb20gdGhlIG9yaWdpbmFsIHJhbmdlIGlmIHRoZSBpbnNlcnRpb24gd2FzIHN1Y2Nlc3NmdWwuCi8vICAgICAgICAgICAg4pSCICDilJTilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilKzilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJgKLy8gICAgICAgICAgICDilIIgICAgICAgICAgICAg4pSCCi8vICAgICAgICAgICAg4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSQCi8vICAgICAgICAgICAgICAgICAgICAgICAgICDilIIKLy8gICAgICAgICAgICAgICAg4pSM4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAVuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkAovLyAgICAgICAgICAgICAgICDilIIgICAgICBkcmFnZW5kICAgICDilIIgICBSZW1vdmVzIHRoZSBkcm9wIG1hcmtlciBhbmQgY2xlYW5zIHRoZSBzdGF0ZS4KLy8gICAgICAgICAgICAgICAg4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYCi8vCgovKioKICogVGhlIGRyYWcgYW5kIGRyb3AgZmVhdHVyZS4gSXQgd29ya3Mgb24gdG9wIG9mIHRoZSB7QGxpbmsgbW9kdWxlOmNsaXBib2FyZC9jbGlwYm9hcmRwaXBlbGluZX5DbGlwYm9hcmRQaXBlbGluZX0uCiAqCiAqIFJlYWQgbW9yZSBhYm91dCB0aGUgY2xpcGJvYXJkIGludGVncmF0aW9uIGluIHRoZSB7QGdsaW5rIGZyYW1ld29yay9ndWlkZXMvZGVlcC1kaXZlL2NsaXBib2FyZCBjbGlwYm9hcmQgZGVlcCBkaXZlIGd1aWRlfS4KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvcGx1Z2luflBsdWdpbgogKi8KCnZhciBEcmFnRHJvcCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1BsdWdpbikgewogIF9pbmhlcml0cyhEcmFnRHJvcCwgX1BsdWdpbik7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoRHJhZ0Ryb3ApOwoKICBmdW5jdGlvbiBEcmFnRHJvcCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEcmFnRHJvcCk7CgogICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKERyYWdEcm9wLCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZToKICAgIC8qKgogICAgICogQGluaGVyaXREb2MKICAgICAqLwogICAgZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBlZGl0b3IgPSB0aGlzLmVkaXRvcjsKICAgICAgdmFyIHZpZXcgPSBlZGl0b3IuZWRpdGluZy52aWV3OwogICAgICAvKioKICAgICAgICogVGhlIGxpdmUgcmFuZ2Ugb3ZlciB0aGUgb3JpZ2luYWwgY29udGVudCB0aGF0IGlzIGJlaW5nIGRyYWdnZWQuCiAgICAgICAqCiAgICAgICAqIEBwcml2YXRlCiAgICAgICAqIEB0eXBlIHttb2R1bGU6ZW5naW5lL21vZGVsL2xpdmVyYW5nZX5MaXZlUmFuZ2V9CiAgICAgICAqLwoKICAgICAgdGhpcy5fZHJhZ2dlZFJhbmdlID0gbnVsbDsKICAgICAgLyoqCiAgICAgICAqIFRoZSBVSUQgb2YgY3VycmVudCBkcmFnZ2luZyB0aGF0IGlzIHVzZWQgdG8gdmVyaWZ5IGlmIHRoZSBkcm9wIHN0YXJ0ZWQgaW4gdGhlIHNhbWUgZWRpdG9yIGFzIHRoZSBkcmFnIHN0YXJ0LgogICAgICAgKgogICAgICAgKiAqKk5vdGUqKjogVGhpcyBpcyBhIHdvcmthcm91bmQgZm9yIGJyb2tlbiAnZHJhZ2VuZCcgZXZlbnRzICh0aGV5IGFyZSBub3QgZmlyZWQgaWYgdGhlIHNvdXJjZSB0ZXh0IG5vZGUgZ290IHJlbW92ZWQpLgogICAgICAgKgogICAgICAgKiBAcHJpdmF0ZQogICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgKi8KCiAgICAgIHRoaXMuX2RyYWdnaW5nVWlkID0gJyc7CiAgICAgIC8qKgogICAgICAgKiBUaGUgcmVmZXJlbmNlIHRvIHRoZSBtb2RlbCBlbGVtZW50IHRoYXQgY3VycmVudGx5IGhhcyBhIGBkcmFnZ2FibGVgIGF0dHJpYnV0ZSBzZXQgKGl0IGlzIHNldCB3aGlsZSBkcmFnZ2luZykuCiAgICAgICAqCiAgICAgICAqIEBwcml2YXRlCiAgICAgICAqIEB0eXBlIHttb2R1bGU6ZW5naW5lL21vZGVsL2VsZW1lbnR+RWxlbWVudH0KICAgICAgICovCgogICAgICB0aGlzLl9kcmFnZ2FibGVFbGVtZW50ID0gbnVsbDsKICAgICAgLyoqCiAgICAgICAqIEEgdGhyb3R0bGVkIGNhbGxiYWNrIHVwZGF0aW5nIHRoZSBkcm9wIG1hcmtlci4KICAgICAgICoKICAgICAgICogQHByaXZhdGUKICAgICAgICogQHR5cGUge0Z1bmN0aW9ufQogICAgICAgKi8KCiAgICAgIHRoaXMuX3VwZGF0ZURyb3BNYXJrZXJUaHJvdHRsZWQgPSB0aHJvdHRsZShmdW5jdGlvbiAodGFyZ2V0UmFuZ2UpIHsKICAgICAgICByZXR1cm4gX3RoaXMuX3VwZGF0ZURyb3BNYXJrZXIodGFyZ2V0UmFuZ2UpOwogICAgICB9LCA0MCk7CiAgICAgIC8qKgogICAgICAgKiBBIGRlbGF5ZWQgY2FsbGJhY2sgcmVtb3ZpbmcgdGhlIGRyb3AgbWFya2VyLgogICAgICAgKgogICAgICAgKiBAcHJpdmF0ZQogICAgICAgKiBAdHlwZSB7RnVuY3Rpb259CiAgICAgICAqLwoKICAgICAgdGhpcy5fcmVtb3ZlRHJvcE1hcmtlckRlbGF5ZWQgPSBkZWxheShmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLl9yZW1vdmVEcm9wTWFya2VyKCk7CiAgICAgIH0sIDQwKTsKICAgICAgLyoqCiAgICAgICAqIEEgZGVsYXllZCBjYWxsYmFjayByZW1vdmluZyBkcmFnZ2FibGUgYXR0cmlidXRlcy4KICAgICAgICoKICAgICAgICogQHByaXZhdGUKICAgICAgICogQHR5cGUge0Z1bmN0aW9ufQogICAgICAgKi8KCiAgICAgIHRoaXMuX2NsZWFyRHJhZ2dhYmxlQXR0cmlidXRlc0RlbGF5ZWQgPSBkZWxheShmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLl9jbGVhckRyYWdnYWJsZUF0dHJpYnV0ZXMoKTsKICAgICAgfSwgNDApOwogICAgICB2aWV3LmFkZE9ic2VydmVyKENsaXBib2FyZE9ic2VydmVyKTsKICAgICAgdmlldy5hZGRPYnNlcnZlcihNb3VzZU9ic2VydmVyKTsKCiAgICAgIHRoaXMuX3NldHVwRHJhZ2dpbmcoKTsKCiAgICAgIHRoaXMuX3NldHVwQ29udGVudEluc2VydGlvbkludGVncmF0aW9uKCk7CgogICAgICB0aGlzLl9zZXR1cENsaXBib2FyZElucHV0SW50ZWdyYXRpb24oKTsKCiAgICAgIHRoaXMuX3NldHVwRHJvcE1hcmtlcigpOwoKICAgICAgdGhpcy5fc2V0dXBEcmFnZ2FibGVBdHRyaWJ1dGVIYW5kbGluZygpOwoKICAgICAgdGhpcy5saXN0ZW5UbyhlZGl0b3IsICdjaGFuZ2U6aXNSZWFkT25seScsIGZ1bmN0aW9uIChldnQsIG5hbWUsIGlzUmVhZE9ubHkpIHsKICAgICAgICBpZiAoaXNSZWFkT25seSkgewogICAgICAgICAgX3RoaXMuZm9yY2VEaXNhYmxlZCgncmVhZE9ubHlNb2RlJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzLmNsZWFyRm9yY2VEaXNhYmxlZCgncmVhZE9ubHlNb2RlJyk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5vbignY2hhbmdlOmlzRW5hYmxlZCcsIGZ1bmN0aW9uIChldnQsIG5hbWUsIGlzRW5hYmxlZCkgewogICAgICAgIGlmICghaXNFbmFibGVkKSB7CiAgICAgICAgICBfdGhpcy5fZmluYWxpemVEcmFnZ2luZyhmYWxzZSk7CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIGlmIChlbnYuaXNBbmRyb2lkKSB7CiAgICAgICAgdGhpcy5mb3JjZURpc2FibGVkKCdub0FuZHJvaWRTdXBwb3J0Jyk7CiAgICAgIH0KICAgIH0KICAgIC8qKgogICAgICogQGluaGVyaXREb2MKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJkZXN0cm95IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkZXN0cm95KCkgewogICAgICBpZiAodGhpcy5fZHJhZ2dlZFJhbmdlKSB7CiAgICAgICAgdGhpcy5fZHJhZ2dlZFJhbmdlLmRldGFjaCgpOwoKICAgICAgICB0aGlzLl9kcmFnZ2VkUmFuZ2UgPSBudWxsOwogICAgICB9CgogICAgICB0aGlzLl91cGRhdGVEcm9wTWFya2VyVGhyb3R0bGVkLmNhbmNlbCgpOwoKICAgICAgdGhpcy5fcmVtb3ZlRHJvcE1hcmtlckRlbGF5ZWQuY2FuY2VsKCk7CgogICAgICB0aGlzLl9jbGVhckRyYWdnYWJsZUF0dHJpYnV0ZXNEZWxheWVkLmNhbmNlbCgpOwoKICAgICAgcmV0dXJuIF9nZXQoX2dldFByb3RvdHlwZU9mKERyYWdEcm9wLnByb3RvdHlwZSksICJkZXN0cm95IiwgdGhpcykuY2FsbCh0aGlzKTsKICAgIH0KICAgIC8qKgogICAgICogRHJhZyBhbmQgZHJvcCBldmVudHMgaGFuZGxpbmcuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfc2V0dXBEcmFnZ2luZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX3NldHVwRHJhZ2dpbmcoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yOwogICAgICB2YXIgbW9kZWwgPSBlZGl0b3IubW9kZWw7CiAgICAgIHZhciBtb2RlbERvY3VtZW50ID0gbW9kZWwuZG9jdW1lbnQ7CiAgICAgIHZhciB2aWV3ID0gZWRpdG9yLmVkaXRpbmcudmlldzsKICAgICAgdmFyIHZpZXdEb2N1bWVudCA9IHZpZXcuZG9jdW1lbnQ7IC8vIFRoZSBoYW5kbGVyIGZvciB0aGUgZHJhZyBzdGFydDsgaXQgaXMgcmVzcG9uc2libGUgZm9yIHNldHRpbmcgZGF0YSB0cmFuc2ZlciBvYmplY3QuCgogICAgICB0aGlzLmxpc3RlblRvKHZpZXdEb2N1bWVudCwgJ2RyYWdzdGFydCcsIGZ1bmN0aW9uIChldnQsIGRhdGEpIHsKICAgICAgICB2YXIgc2VsZWN0aW9uID0gbW9kZWxEb2N1bWVudC5zZWxlY3Rpb247IC8vIERvbid0IGRyYWcgdGhlIGVkaXRhYmxlIGVsZW1lbnQgaXRzZWxmLgoKICAgICAgICBpZiAoZGF0YS50YXJnZXQgJiYgZGF0YS50YXJnZXQuaXMoJ2VkaXRhYmxlRWxlbWVudCcpKSB7CiAgICAgICAgICBkYXRhLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSAvLyBUT0RPIHdlIGNvdWxkIGNsb25lIHRoaXMgbm9kZSBzb21ld2hlcmUgYW5kIHN0eWxlIGl0IHRvIG1hdGNoIGVkaXRpbmcgdmlldyBidXQgd2l0aG91dCBoYW5kbGVzLAogICAgICAgIC8vICBzZWxlY3Rpb24gb3V0bGluZSwgV1RBIGJ1dHRvbnMsIGV0Yy4KICAgICAgICAvLyBkYXRhLmRhdGFUcmFuc2Zlci5fbmF0aXZlLnNldERyYWdJbWFnZSggZGF0YS5kb21UYXJnZXQsIDAsIDAgKTsKICAgICAgICAvLyBDaGVjayBpZiB0aGlzIGlzIGRyYWdzdGFydCBvdmVyIHRoZSB3aWRnZXQgKGJ1dCBub3QgYSBuZXN0ZWQgZWRpdGFibGUpLgoKCiAgICAgICAgdmFyIGRyYWdnYWJsZVdpZGdldCA9IGRhdGEudGFyZ2V0ID8gZmluZERyYWdnYWJsZVdpZGdldChkYXRhLnRhcmdldCkgOiBudWxsOwoKICAgICAgICBpZiAoZHJhZ2dhYmxlV2lkZ2V0KSB7CiAgICAgICAgICB2YXIgbW9kZWxFbGVtZW50ID0gZWRpdG9yLmVkaXRpbmcubWFwcGVyLnRvTW9kZWxFbGVtZW50KGRyYWdnYWJsZVdpZGdldCk7CiAgICAgICAgICBfdGhpczIuX2RyYWdnZWRSYW5nZSA9IExpdmVSYW5nZS5mcm9tUmFuZ2UobW9kZWwuY3JlYXRlUmFuZ2VPbihtb2RlbEVsZW1lbnQpKTsKICAgICAgICB9IC8vIElmIHRoaXMgd2FzIG5vdCBhIHdpZGdldCB3ZSBzaG91bGQgY2hlY2sgaWYgd2UgbmVlZCB0byBkcmFnIHNvbWUgdGV4dCBjb250ZW50LgogICAgICAgIGVsc2UgaWYgKCF2aWV3RG9jdW1lbnQuc2VsZWN0aW9uLmlzQ29sbGFwc2VkKSB7CiAgICAgICAgICAgIHZhciBzZWxlY3RlZEVsZW1lbnQgPSB2aWV3RG9jdW1lbnQuc2VsZWN0aW9uLmdldFNlbGVjdGVkRWxlbWVudCgpOwoKICAgICAgICAgICAgaWYgKCFzZWxlY3RlZEVsZW1lbnQgfHwgIWlzV2lkZ2V0KHNlbGVjdGVkRWxlbWVudCkpIHsKICAgICAgICAgICAgICBfdGhpczIuX2RyYWdnZWRSYW5nZSA9IExpdmVSYW5nZS5mcm9tUmFuZ2Uoc2VsZWN0aW9uLmdldEZpcnN0UmFuZ2UoKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgaWYgKCFfdGhpczIuX2RyYWdnZWRSYW5nZSkgewogICAgICAgICAgZGF0YS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMyLl9kcmFnZ2luZ1VpZCA9IHVpZCgpOwogICAgICAgIGRhdGEuZGF0YVRyYW5zZmVyLmVmZmVjdEFsbG93ZWQgPSBfdGhpczIuaXNFbmFibGVkID8gJ2NvcHlNb3ZlJyA6ICdjb3B5JzsKICAgICAgICBkYXRhLmRhdGFUcmFuc2Zlci5zZXREYXRhKCdhcHBsaWNhdGlvbi9ja2VkaXRvcjUtZHJhZ2dpbmctdWlkJywgX3RoaXMyLl9kcmFnZ2luZ1VpZCk7CiAgICAgICAgdmFyIGRyYWdnZWRTZWxlY3Rpb24gPSBtb2RlbC5jcmVhdGVTZWxlY3Rpb24oX3RoaXMyLl9kcmFnZ2VkUmFuZ2UudG9SYW5nZSgpKTsKICAgICAgICB2YXIgY29udGVudCA9IGVkaXRvci5kYXRhLnRvVmlldyhtb2RlbC5nZXRTZWxlY3RlZENvbnRlbnQoZHJhZ2dlZFNlbGVjdGlvbikpOwogICAgICAgIHZpZXdEb2N1bWVudC5maXJlKCdjbGlwYm9hcmRPdXRwdXQnLCB7CiAgICAgICAgICBkYXRhVHJhbnNmZXI6IGRhdGEuZGF0YVRyYW5zZmVyLAogICAgICAgICAgY29udGVudDogY29udGVudCwKICAgICAgICAgIG1ldGhvZDogZXZ0Lm5hbWUKICAgICAgICB9KTsKCiAgICAgICAgaWYgKCFfdGhpczIuaXNFbmFibGVkKSB7CiAgICAgICAgICBfdGhpczIuX2RyYWdnZWRSYW5nZS5kZXRhY2goKTsKCiAgICAgICAgICBfdGhpczIuX2RyYWdnZWRSYW5nZSA9IG51bGw7CiAgICAgICAgICBfdGhpczIuX2RyYWdnaW5nVWlkID0gJyc7CiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgcHJpb3JpdHk6ICdsb3cnCiAgICAgIH0pOyAvLyBUaGUgaGFuZGxlciBmb3IgZmluYWxpemluZyBkcmFnIGFuZCBkcm9wLiBJdCBzaG91bGQgYWx3YXlzIGJlIHRyaWdnZXJlZCBhZnRlciBkcmFnZ2luZyBjb21wbGV0ZXMKICAgICAgLy8gZXZlbiBpZiBpdCB3YXMgY29tcGxldGVkIGluIGEgZGlmZmVyZW50IGFwcGxpY2F0aW9uLgogICAgICAvLyBOb3RlOiBUaGlzIGlzIG5vdCBmaXJlZCBpZiBzb3VyY2UgdGV4dCBub2RlIGdvdCByZW1vdmVkIHdoaWxlIGRvd25jYXN0aW5nIGEgbWFya2VyLgoKICAgICAgdGhpcy5saXN0ZW5Ubyh2aWV3RG9jdW1lbnQsICdkcmFnZW5kJywgZnVuY3Rpb24gKGV2dCwgZGF0YSkgewogICAgICAgIF90aGlzMi5fZmluYWxpemVEcmFnZ2luZyghZGF0YS5kYXRhVHJhbnNmZXIuaXNDYW5jZWxlZCAmJiBkYXRhLmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0ID09ICdtb3ZlJyk7CiAgICAgIH0sIHsKICAgICAgICBwcmlvcml0eTogJ2xvdycKICAgICAgfSk7IC8vIERyYWdnaW5nIG92ZXIgdGhlIGVkaXRhYmxlLgoKICAgICAgdGhpcy5saXN0ZW5Ubyh2aWV3RG9jdW1lbnQsICdkcmFnZW50ZXInLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKCFfdGhpczIuaXNFbmFibGVkKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB2aWV3LmZvY3VzKCk7CiAgICAgIH0pOyAvLyBEcmFnZ2luZyBvdXQgb2YgdGhlIGVkaXRhYmxlLgoKICAgICAgdGhpcy5saXN0ZW5Ubyh2aWV3RG9jdW1lbnQsICdkcmFnbGVhdmUnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8gV2UgZG8gbm90IGtub3cgaWYgdGhlIG1vdXNlIGxlZnQgdGhlIGVkaXRvciBvciBqdXN0IHNvbWUgZWxlbWVudCBpbiBpdCwgc28gbGV0IHVzIHdhaXQgYSBmZXcgbWlsbGlzZWNvbmRzCiAgICAgICAgLy8gdG8gY2hlY2sgaWYgJ2RyYWdvdmVyJyBpcyBub3QgZmlyZWQuCiAgICAgICAgX3RoaXMyLl9yZW1vdmVEcm9wTWFya2VyRGVsYXllZCgpOwogICAgICB9KTsgLy8gSGFuZGxlciBmb3IgbW92aW5nIGRyYWdnZWQgY29udGVudCBvdmVyIHRoZSB0YXJnZXQgYXJlYS4KCiAgICAgIHRoaXMubGlzdGVuVG8odmlld0RvY3VtZW50LCAnZHJhZ2dpbmcnLCBmdW5jdGlvbiAoZXZ0LCBkYXRhKSB7CiAgICAgICAgaWYgKCFfdGhpczIuaXNFbmFibGVkKSB7CiAgICAgICAgICBkYXRhLmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0ID0gJ25vbmUnOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMyLl9yZW1vdmVEcm9wTWFya2VyRGVsYXllZC5jYW5jZWwoKTsKCiAgICAgICAgdmFyIHRhcmdldFJhbmdlID0gZmluZERyb3BUYXJnZXRSYW5nZShlZGl0b3IsIGRhdGEudGFyZ2V0UmFuZ2VzLCBkYXRhLnRhcmdldCk7IC8vIElmIHRoaXMgaXMgY29udGVudCBiZWluZyBkcmFnZ2VkIGZyb20gYW5vdGhlciBlZGl0b3IsIG1vdmluZyBvdXQgb2YgY3VycmVudCBlZGl0b3IgaW5zdGFuY2UKICAgICAgICAvLyBpcyBub3QgcG9zc2libGUgdW50aWwgJ2RyYWdlbmQnIGV2ZW50IGNhc2Ugd2lsbCBiZSBmaXhlZC4KCiAgICAgICAgaWYgKCFfdGhpczIuX2RyYWdnZWRSYW5nZSkgewogICAgICAgICAgZGF0YS5kYXRhVHJhbnNmZXIuZHJvcEVmZmVjdCA9ICdjb3B5JzsKICAgICAgICB9IC8vIEluIEZpcmVmb3ggaXQgaXMgYWxyZWFkeSBzZXQgYW5kIGVmZmVjdCBhbGxvd2VkIHJlbWFpbnMgdGhlIHNhbWUgYXMgb3JpZ2luYWxseSBzZXQuCgoKICAgICAgICBpZiAoIWVudi5pc0dlY2tvKSB7CiAgICAgICAgICBpZiAoZGF0YS5kYXRhVHJhbnNmZXIuZWZmZWN0QWxsb3dlZCA9PSAnY29weScpIHsKICAgICAgICAgICAgZGF0YS5kYXRhVHJhbnNmZXIuZHJvcEVmZmVjdCA9ICdjb3B5JzsKICAgICAgICAgIH0gZWxzZSBpZiAoWydhbGwnLCAnY29weU1vdmUnXS5pbmNsdWRlcyhkYXRhLmRhdGFUcmFuc2Zlci5lZmZlY3RBbGxvd2VkKSkgewogICAgICAgICAgICBkYXRhLmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0ID0gJ21vdmUnOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqLwoKCiAgICAgICAgaWYgKHRhcmdldFJhbmdlKSB7CiAgICAgICAgICBfdGhpczIuX3VwZGF0ZURyb3BNYXJrZXJUaHJvdHRsZWQodGFyZ2V0UmFuZ2UpOwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIHByaW9yaXR5OiAnbG93JwogICAgICB9KTsKICAgIH0KICAgIC8qKgogICAgICogSW50ZWdyYXRpb24gd2l0aCB0aGUgYGNsaXBib2FyZElucHV0YCBldmVudC4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICovCgogIH0sIHsKICAgIGtleTogIl9zZXR1cENsaXBib2FyZElucHV0SW50ZWdyYXRpb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9zZXR1cENsaXBib2FyZElucHV0SW50ZWdyYXRpb24oKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yOwogICAgICB2YXIgdmlldyA9IGVkaXRvci5lZGl0aW5nLnZpZXc7CiAgICAgIHZhciB2aWV3RG9jdW1lbnQgPSB2aWV3LmRvY3VtZW50OyAvLyBVcGRhdGUgdGhlIGV2ZW50IHRhcmdldCByYW5nZXMgYW5kIGFib3J0IGRyb3BwaW5nIGlmIGRyb3BwaW5nIG92ZXIgaXRzZWxmLgoKICAgICAgdGhpcy5saXN0ZW5Ubyh2aWV3RG9jdW1lbnQsICdjbGlwYm9hcmRJbnB1dCcsIGZ1bmN0aW9uIChldnQsIGRhdGEpIHsKICAgICAgICBpZiAoZGF0YS5tZXRob2QgIT0gJ2Ryb3AnKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB2YXIgdGFyZ2V0UmFuZ2UgPSBmaW5kRHJvcFRhcmdldFJhbmdlKGVkaXRvciwgZGF0YS50YXJnZXRSYW5nZXMsIGRhdGEudGFyZ2V0KTsgLy8gVGhlIGRyYWdnaW5nIG1hcmtlcnMgbXVzdCBiZSByZW1vdmVkIGFmdGVyIHNlYXJjaGluZyBmb3IgdGhlIHRhcmdldCByYW5nZSBiZWNhdXNlIHNvbWV0aW1lcwogICAgICAgIC8vIHRoZSB0YXJnZXQgbGFuZHMgb24gdGhlIG1hcmtlciBpdHNlbGYuCgogICAgICAgIF90aGlzMy5fcmVtb3ZlRHJvcE1hcmtlcigpOwogICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqLwoKCiAgICAgICAgaWYgKCF0YXJnZXRSYW5nZSkgewogICAgICAgICAgX3RoaXMzLl9maW5hbGl6ZURyYWdnaW5nKGZhbHNlKTsKCiAgICAgICAgICBldnQuc3RvcCgpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0gLy8gU2luY2Ugd2UgY2Fubm90IHJlbHkgb24gdGhlIGRyYWcgZW5kIGV2ZW50LCB3ZSBtdXN0IGNoZWNrIGlmIHRoZSBsb2NhbCBkcmFnIHJhbmdlIGlzIGZyb20gdGhlIGN1cnJlbnQgZHJhZyBhbmQgZHJvcAogICAgICAgIC8vIG9yIGl0IGlzIGZyb20gc29tZSBwcmV2aW91cyBub3QgY2xlYXJlZCBvbmUuCgoKICAgICAgICBpZiAoX3RoaXMzLl9kcmFnZ2VkUmFuZ2UgJiYgX3RoaXMzLl9kcmFnZ2luZ1VpZCAhPSBkYXRhLmRhdGFUcmFuc2Zlci5nZXREYXRhKCdhcHBsaWNhdGlvbi9ja2VkaXRvcjUtZHJhZ2dpbmctdWlkJykpIHsKICAgICAgICAgIF90aGlzMy5fZHJhZ2dlZFJhbmdlLmRldGFjaCgpOwoKICAgICAgICAgIF90aGlzMy5fZHJhZ2dlZFJhbmdlID0gbnVsbDsKICAgICAgICAgIF90aGlzMy5fZHJhZ2dpbmdVaWQgPSAnJzsKICAgICAgICB9IC8vIERvIG5vdCBkbyBhbnl0aGluZyBpZiBzb21lIGNvbnRlbnQgd2FzIGRyYWdnZWQgd2l0aGluIHRoZSBzYW1lIGRvY3VtZW50IHRvIHRoZSBzYW1lIHBvc2l0aW9uLgoKCiAgICAgICAgdmFyIGlzTW92ZSA9IGdldEZpbmFsRHJvcEVmZmVjdChkYXRhLmRhdGFUcmFuc2ZlcikgPT0gJ21vdmUnOwoKICAgICAgICBpZiAoaXNNb3ZlICYmIF90aGlzMy5fZHJhZ2dlZFJhbmdlICYmIF90aGlzMy5fZHJhZ2dlZFJhbmdlLmNvbnRhaW5zUmFuZ2UodGFyZ2V0UmFuZ2UsIHRydWUpKSB7CiAgICAgICAgICBfdGhpczMuX2ZpbmFsaXplRHJhZ2dpbmcoZmFsc2UpOwoKICAgICAgICAgIGV2dC5zdG9wKCk7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSAvLyBPdmVycmlkZSB0aGUgdGFyZ2V0IHJhbmdlcyB3aXRoIHRoZSBvbmUgYWRqdXN0ZWQgdG8gdGhlIGJlc3Qgb25lIGZvciBhIGRyb3AuCgoKICAgICAgICBkYXRhLnRhcmdldFJhbmdlcyA9IFtlZGl0b3IuZWRpdGluZy5tYXBwZXIudG9WaWV3UmFuZ2UodGFyZ2V0UmFuZ2UpXTsKICAgICAgfSwgewogICAgICAgIHByaW9yaXR5OiAnaGlnaCcKICAgICAgfSk7CiAgICB9CiAgICAvKioKICAgICAqIEludGVncmF0aW9uIHdpdGggdGhlIGBjb250ZW50SW5zZXJ0aW9uYCBldmVudCBvZiB0aGUgY2xpcGJvYXJkIHBpcGVsaW5lLgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX3NldHVwQ29udGVudEluc2VydGlvbkludGVncmF0aW9uIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfc2V0dXBDb250ZW50SW5zZXJ0aW9uSW50ZWdyYXRpb24oKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdmFyIGNsaXBib2FyZFBpcGVsaW5lID0gdGhpcy5lZGl0b3IucGx1Z2lucy5nZXQoQ2xpcGJvYXJkUGlwZWxpbmUpOwogICAgICBjbGlwYm9hcmRQaXBlbGluZS5vbignY29udGVudEluc2VydGlvbicsIGZ1bmN0aW9uIChldnQsIGRhdGEpIHsKICAgICAgICBpZiAoIV90aGlzNC5pc0VuYWJsZWQgfHwgZGF0YS5tZXRob2QgIT09ICdkcm9wJykgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0gLy8gVXBkYXRlIHRoZSBzZWxlY3Rpb24gdG8gdGhlIHRhcmdldCByYW5nZSBpbiB0aGUgc2FtZSBjaGFuZ2UgYmxvY2sgdG8gYXZvaWQgc2VsZWN0aW9uIHBvc3QtZml4aW5nCiAgICAgICAgLy8gYW5kIHRvIGJlIGFibGUgdG8gY2xvbmUgdGV4dCBhdHRyaWJ1dGVzIGZvciBwbGFpbiB0ZXh0IGRyb3BwaW5nLgoKCiAgICAgICAgdmFyIHJhbmdlcyA9IGRhdGEudGFyZ2V0UmFuZ2VzLm1hcChmdW5jdGlvbiAodmlld1JhbmdlKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXM0LmVkaXRvci5lZGl0aW5nLm1hcHBlci50b01vZGVsUmFuZ2Uodmlld1JhbmdlKTsKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXM0LmVkaXRvci5tb2RlbC5jaGFuZ2UoZnVuY3Rpb24gKHdyaXRlcikgewogICAgICAgICAgcmV0dXJuIHdyaXRlci5zZXRTZWxlY3Rpb24ocmFuZ2VzKTsKICAgICAgICB9KTsKICAgICAgfSwgewogICAgICAgIHByaW9yaXR5OiAnaGlnaCcKICAgICAgfSk7CiAgICAgIGNsaXBib2FyZFBpcGVsaW5lLm9uKCdjb250ZW50SW5zZXJ0aW9uJywgZnVuY3Rpb24gKGV2dCwgZGF0YSkgewogICAgICAgIGlmICghX3RoaXM0LmlzRW5hYmxlZCB8fCBkYXRhLm1ldGhvZCAhPT0gJ2Ryb3AnKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSAvLyBSZW1vdmUgZHJhZ2dlZCByYW5nZSBjb250ZW50LCByZW1vdmUgbWFya2VycywgY2xlYW4gYWZ0ZXIgZHJhZ2dpbmcuCgoKICAgICAgICB2YXIgaXNNb3ZlID0gZ2V0RmluYWxEcm9wRWZmZWN0KGRhdGEuZGF0YVRyYW5zZmVyKSA9PSAnbW92ZSc7IC8vIFdoZXRoZXIgYW55IGNvbnRlbnQgd2FzIGluc2VydGVkIChpbnNlcnRpb24gbWlnaHQgZmFpbCBpZiB0aGUgc2NoZW1hIGlzIGRpc2FsbG93aW5nIHNvbWUgZWxlbWVudHMKICAgICAgICAvLyAoZm9yIGV4YW1wbGUgYW4gaW1hZ2UgY2FwdGlvbiBhbGxvd3Mgb25seSB0aGUgY29udGVudCBvZiBhIGJsb2NrIGJ1dCBub3QgYmxvY2tzIHRoZW1zZWx2ZXMuCiAgICAgICAgLy8gU29tZSBpbnRlZ3JhdGlvbnMgbWlnaHQgbm90IHJldHVybiB2YWxpZCByYW5nZSAoaS5lLiwgdGFibGUgcGFzdGluZykuCgogICAgICAgIHZhciBpc1N1Y2Nlc3MgPSAhZGF0YS5yZXN1bHRSYW5nZSB8fCAhZGF0YS5yZXN1bHRSYW5nZS5pc0NvbGxhcHNlZDsKCiAgICAgICAgX3RoaXM0Ll9maW5hbGl6ZURyYWdnaW5nKGlzU3VjY2VzcyAmJiBpc01vdmUpOwogICAgICB9LCB7CiAgICAgICAgcHJpb3JpdHk6ICdsb3dlc3QnCiAgICAgIH0pOwogICAgfQogICAgLyoqCiAgICAgKiBBZGRzIGxpc3RlbmVycyB0aGF0IGFkZCB0aGUgYGRyYWdnYWJsZWAgYXR0cmlidXRlIHRvIHRoZSBlbGVtZW50cyB3aGlsZSB0aGUgbW91c2UgYnV0dG9uIGlzIGRvd24gc28gdGhlIGRyYWdnaW5nIGNvdWxkIHN0YXJ0LgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX3NldHVwRHJhZ2dhYmxlQXR0cmlidXRlSGFuZGxpbmciLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9zZXR1cERyYWdnYWJsZUF0dHJpYnV0ZUhhbmRsaW5nKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHZhciBlZGl0b3IgPSB0aGlzLmVkaXRvcjsKICAgICAgdmFyIHZpZXcgPSBlZGl0b3IuZWRpdGluZy52aWV3OwogICAgICB2YXIgdmlld0RvY3VtZW50ID0gdmlldy5kb2N1bWVudDsgLy8gQWRkIHRoZSAnZHJhZ2dhYmxlJyBhdHRyaWJ1dGUgdG8gdGhlIHdpZGdldCB3aGlsZSBwcmVzc2luZyB0aGUgc2VsZWN0aW9uIGhhbmRsZS4KICAgICAgLy8gVGhpcyBpcyByZXF1aXJlZCBmb3Igd2lkZ2V0cyB0byBiZSBkcmFnZ2FibGUuIEluIENocm9tZSBpdCB3aWxsIGVuYWJsZSBkcmFnZ2luZyB0ZXh0IG5vZGVzLgoKICAgICAgdGhpcy5saXN0ZW5Ubyh2aWV3RG9jdW1lbnQsICdtb3VzZWRvd24nLCBmdW5jdGlvbiAoZXZ0LCBkYXRhKSB7CiAgICAgICAgLy8gVGhlIGxhY2sgb2YgZGF0YSBjYW4gYmUgY2F1c2VkIGJ5IGVkaXRvciB0ZXN0cyBmaXJpbmcgZmFrZSBtb3VzZSBldmVudHMuIFRoaXMgc2hvdWxkIG5vdCBvY2N1cgogICAgICAgIC8vIGluIHJlYWwtbGlmZSBzY2VuYXJpb3MgYnV0IHRoaXMgZ3JlYXRseSBzaW1wbGlmaWVzIGVkaXRvciB0ZXN0cyB0aGF0IHdvdWxkIG90aGVyd2lzZSBmYWlsIGEgbG90LgogICAgICAgIGlmIChlbnYuaXNBbmRyb2lkIHx8ICFkYXRhKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBfdGhpczUuX2NsZWFyRHJhZ2dhYmxlQXR0cmlidXRlc0RlbGF5ZWQuY2FuY2VsKCk7IC8vIENoZWNrIGlmIHRoaXMgaXMgYSBtb3VzZWRvd24gb3ZlciB0aGUgd2lkZ2V0IChidXQgbm90IGEgbmVzdGVkIGVkaXRhYmxlKS4KCgogICAgICAgIHZhciBkcmFnZ2FibGVFbGVtZW50ID0gZmluZERyYWdnYWJsZVdpZGdldChkYXRhLnRhcmdldCk7IC8vIE5vdGU6IFRoZXJlIGlzIGEgbGltaXRhdGlvbiB0aGF0IGlmIG1vcmUgdGhhbiBhIHdpZGdldCBpcyBzZWxlY3RlZCAoYSB3aWRnZXQgYW5kIHNvbWUgdGV4dCkKICAgICAgICAvLyBhbmQgZHJhZ2dpbmcgc3RhcnRzIG9uIHRoZSB3aWRnZXQsIHRoZW4gb25seSB0aGUgd2lkZ2V0IGlzIGRyYWdnZWQuCiAgICAgICAgLy8gSWYgdGhpcyB3YXMgbm90IGEgd2lkZ2V0IHRoZW4gd2Ugc2hvdWxkIGNoZWNrIGlmIHdlIG5lZWQgdG8gZHJhZyBzb21lIHRleHQgY29udGVudC4KICAgICAgICAvLyBJbiBDaHJvbWUgc2V0IGEgJ2RyYWdnYWJsZScgYXR0cmlidXRlIG9uIGNsb3Nlc3QgZWRpdGFibGUgdG8gYWxsb3cgaW1tZWRpYXRlIGRyYWdnaW5nIG9mIHRoZSBzZWxlY3RlZCB0ZXh0IHJhbmdlLgogICAgICAgIC8vIEluIEZpcmVmb3ggdGhpcyBpcyBub3QgbmVlZGVkLiBJbiBTYWZhcmkgaXQgbWFrZXMgdGhlIHdob2xlIGVkaXRhYmxlIGRyYWdnYWJsZSAobm90IGp1c3QgdGV4dHVhbCBjb250ZW50KS4KICAgICAgICAvLyBEaXNhYmxlZCBpbiByZWFkLW9ubHkgbW9kZSBiZWNhdXNlIGRyYWdnYWJsZT0idHJ1ZSIgKyBjb250ZW50ZWRpdGFibGU9ImZhbHNlIiByZXN1bHRzCiAgICAgICAgLy8gaW4gbm90IGZpcmluZyBzZWxlY3Rpb25jaGFuZ2UgZXZlbnQgZXZlciwgd2hpY2ggbWFrZXMgdGhlIHNlbGVjdGlvbiBzdHVjayBpbiByZWFkLW9ubHkgbW9kZS4KCiAgICAgICAgaWYgKGVudi5pc0JsaW5rICYmICFlZGl0b3IuaXNSZWFkT25seSAmJiAhZHJhZ2dhYmxlRWxlbWVudCAmJiAhdmlld0RvY3VtZW50LnNlbGVjdGlvbi5pc0NvbGxhcHNlZCkgewogICAgICAgICAgdmFyIHNlbGVjdGVkRWxlbWVudCA9IHZpZXdEb2N1bWVudC5zZWxlY3Rpb24uZ2V0U2VsZWN0ZWRFbGVtZW50KCk7CgogICAgICAgICAgaWYgKCFzZWxlY3RlZEVsZW1lbnQgfHwgIWlzV2lkZ2V0KHNlbGVjdGVkRWxlbWVudCkpIHsKICAgICAgICAgICAgZHJhZ2dhYmxlRWxlbWVudCA9IHZpZXdEb2N1bWVudC5zZWxlY3Rpb24uZWRpdGFibGVFbGVtZW50OwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKGRyYWdnYWJsZUVsZW1lbnQpIHsKICAgICAgICAgIHZpZXcuY2hhbmdlKGZ1bmN0aW9uICh3cml0ZXIpIHsKICAgICAgICAgICAgd3JpdGVyLnNldEF0dHJpYnV0ZSgnZHJhZ2dhYmxlJywgJ3RydWUnLCBkcmFnZ2FibGVFbGVtZW50KTsKICAgICAgICAgIH0pOyAvLyBLZWVwIHRoZSByZWZlcmVuY2UgdG8gdGhlIG1vZGVsIGVsZW1lbnQgaW4gY2FzZSB0aGUgdmlldyBlbGVtZW50IGdldHMgcmVtb3ZlZCB3aGlsZSBkcmFnZ2luZy4KCiAgICAgICAgICBfdGhpczUuX2RyYWdnYWJsZUVsZW1lbnQgPSBlZGl0b3IuZWRpdGluZy5tYXBwZXIudG9Nb2RlbEVsZW1lbnQoZHJhZ2dhYmxlRWxlbWVudCk7CiAgICAgICAgfQogICAgICB9KTsgLy8gUmVtb3ZlIHRoZSBkcmFnZ2FibGUgYXR0cmlidXRlIGluIGNhc2Ugbm8gZHJhZ2dpbmcgc3RhcnRlZCAob25seSBtb3VzZWRvd24gKyBtb3VzZXVwKS4KCiAgICAgIHRoaXMubGlzdGVuVG8odmlld0RvY3VtZW50LCAnbW91c2V1cCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoIWVudi5pc0FuZHJvaWQpIHsKICAgICAgICAgIF90aGlzNS5fY2xlYXJEcmFnZ2FibGVBdHRyaWJ1dGVzRGVsYXllZCgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgICAvKioKICAgICAqIFJlbW92ZXMgdGhlIGBkcmFnZ2FibGVgIGF0dHJpYnV0ZSBmcm9tIHRoZSBlbGVtZW50IHRoYXQgd2FzIHVzZWQgZm9yIGRyYWdnaW5nLgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX2NsZWFyRHJhZ2dhYmxlQXR0cmlidXRlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2NsZWFyRHJhZ2dhYmxlQXR0cmlidXRlcygpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICB2YXIgZWRpdGluZyA9IHRoaXMuZWRpdG9yLmVkaXRpbmc7CiAgICAgIGVkaXRpbmcudmlldy5jaGFuZ2UoZnVuY3Rpb24gKHdyaXRlcikgewogICAgICAgIC8vIFJlbW92ZSAnZHJhZ2dhYmxlJyBhdHRyaWJ1dGUuCiAgICAgICAgaWYgKF90aGlzNi5fZHJhZ2dhYmxlRWxlbWVudCAmJiBfdGhpczYuX2RyYWdnYWJsZUVsZW1lbnQucm9vdC5yb290TmFtZSAhPSAnJGdyYXZleWFyZCcpIHsKICAgICAgICAgIHdyaXRlci5yZW1vdmVBdHRyaWJ1dGUoJ2RyYWdnYWJsZScsIGVkaXRpbmcubWFwcGVyLnRvVmlld0VsZW1lbnQoX3RoaXM2Ll9kcmFnZ2FibGVFbGVtZW50KSk7CiAgICAgICAgfQoKICAgICAgICBfdGhpczYuX2RyYWdnYWJsZUVsZW1lbnQgPSBudWxsOwogICAgICB9KTsKICAgIH0KICAgIC8qKgogICAgICogQ3JlYXRlcyBkb3duY2FzdCBjb252ZXJzaW9uIGZvciB0aGUgZHJvcCB0YXJnZXQgbWFya2VyLgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX3NldHVwRHJvcE1hcmtlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX3NldHVwRHJvcE1hcmtlcigpIHsKICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yOyAvLyBEcm9wIG1hcmtlciBjb252ZXJzaW9uIGZvciBob3ZlcmluZyBvdmVyIHdpZGdldHMuCgogICAgICBlZGl0b3IuY29udmVyc2lvbi5mb3IoJ2VkaXRpbmdEb3duY2FzdCcpLm1hcmtlclRvSGlnaGxpZ2h0KHsKICAgICAgICBtb2RlbDogJ2Ryb3AtdGFyZ2V0JywKICAgICAgICB2aWV3OiB7CiAgICAgICAgICBjbGFzc2VzOiBbJ2NrLWNsaXBib2FyZC1kcm9wLXRhcmdldC1yYW5nZSddCiAgICAgICAgfQogICAgICB9KTsgLy8gRHJvcCBtYXJrZXIgY29udmVyc2lvbiBmb3IgaW4gdGV4dCBkcm9wIHRhcmdldC4KCiAgICAgIGVkaXRvci5jb252ZXJzaW9uLmZvcignZWRpdGluZ0Rvd25jYXN0JykubWFya2VyVG9FbGVtZW50KHsKICAgICAgICBtb2RlbDogJ2Ryb3AtdGFyZ2V0JywKICAgICAgICB2aWV3OiBmdW5jdGlvbiB2aWV3KGRhdGEsIF9yZWYpIHsKICAgICAgICAgIHZhciB3cml0ZXIgPSBfcmVmLndyaXRlcjsKICAgICAgICAgIHZhciBpblRleHQgPSBlZGl0b3IubW9kZWwuc2NoZW1hLmNoZWNrQ2hpbGQoZGF0YS5tYXJrZXJSYW5nZS5zdGFydCwgJyR0ZXh0Jyk7CgogICAgICAgICAgaWYgKCFpblRleHQpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiB3cml0ZXIuY3JlYXRlVUlFbGVtZW50KCdzcGFuJywgewogICAgICAgICAgICBjbGFzczogJ2NrIGNrLWNsaXBib2FyZC1kcm9wLXRhcmdldC1wb3NpdGlvbicKICAgICAgICAgIH0sIGZ1bmN0aW9uIChkb21Eb2N1bWVudCkgewogICAgICAgICAgICB2YXIgZG9tRWxlbWVudCA9IHRoaXMudG9Eb21FbGVtZW50KGRvbURvY3VtZW50KTsgLy8gVXNpbmcgd29yZCBqb2luZXIgdG8gbWFrZSB0aGlzIG1hcmtlciBhcyBoaWdoIGFzIHRleHQgYW5kIGFsc28gbWFraW5nIHRleHQgbm90IGJyZWFrIG9uIG1hcmtlci4KCiAgICAgICAgICAgIGRvbUVsZW1lbnQuaW5uZXJIVE1MID0gJyZOb0JyZWFrOzxzcGFuPjwvc3Bhbj4mTm9CcmVhazsnOwogICAgICAgICAgICByZXR1cm4gZG9tRWxlbWVudDsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgICAvKioKICAgICAqIFVwZGF0ZXMgdGhlIGRyb3AgdGFyZ2V0IG1hcmtlciB0byB0aGUgcHJvdmlkZWQgcmFuZ2UuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9yYW5nZX5SYW5nZX0gdGFyZ2V0UmFuZ2UgVGhlIHJhbmdlIHRvIHNldCB0aGUgbWFya2VyIHRvLgogICAgICovCgogIH0sIHsKICAgIGtleTogIl91cGRhdGVEcm9wTWFya2VyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfdXBkYXRlRHJvcE1hcmtlcih0YXJnZXRSYW5nZSkgewogICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICAgIHZhciBtYXJrZXJzID0gZWRpdG9yLm1vZGVsLm1hcmtlcnM7CiAgICAgIGVkaXRvci5tb2RlbC5jaGFuZ2UoZnVuY3Rpb24gKHdyaXRlcikgewogICAgICAgIGlmIChtYXJrZXJzLmhhcygnZHJvcC10YXJnZXQnKSkgewogICAgICAgICAgaWYgKCFtYXJrZXJzLmdldCgnZHJvcC10YXJnZXQnKS5nZXRSYW5nZSgpLmlzRXF1YWwodGFyZ2V0UmFuZ2UpKSB7CiAgICAgICAgICAgIHdyaXRlci51cGRhdGVNYXJrZXIoJ2Ryb3AtdGFyZ2V0JywgewogICAgICAgICAgICAgIHJhbmdlOiB0YXJnZXRSYW5nZQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgd3JpdGVyLmFkZE1hcmtlcignZHJvcC10YXJnZXQnLCB7CiAgICAgICAgICAgIHJhbmdlOiB0YXJnZXRSYW5nZSwKICAgICAgICAgICAgdXNpbmdPcGVyYXRpb246IGZhbHNlLAogICAgICAgICAgICBhZmZlY3RzRGF0YTogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgICAvKioKICAgICAqIFJlbW92ZXMgdGhlIGRyb3AgdGFyZ2V0IG1hcmtlci4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICovCgogIH0sIHsKICAgIGtleTogIl9yZW1vdmVEcm9wTWFya2VyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfcmVtb3ZlRHJvcE1hcmtlcigpIHsKICAgICAgdmFyIG1vZGVsID0gdGhpcy5lZGl0b3IubW9kZWw7CgogICAgICB0aGlzLl9yZW1vdmVEcm9wTWFya2VyRGVsYXllZC5jYW5jZWwoKTsKCiAgICAgIHRoaXMuX3VwZGF0ZURyb3BNYXJrZXJUaHJvdHRsZWQuY2FuY2VsKCk7CgogICAgICBpZiAobW9kZWwubWFya2Vycy5oYXMoJ2Ryb3AtdGFyZ2V0JykpIHsKICAgICAgICBtb2RlbC5jaGFuZ2UoZnVuY3Rpb24gKHdyaXRlcikgewogICAgICAgICAgd3JpdGVyLnJlbW92ZU1hcmtlcignZHJvcC10YXJnZXQnKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogICAgLyoqCiAgICAgKiBEZWxldGVzIHRoZSBkcmFnZ2VkIGNvbnRlbnQgZnJvbSBpdHMgb3JpZ2luYWwgcmFuZ2UgYW5kIGNsZWFycyB0aGUgZHJhZ2dpbmcgc3RhdGUuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gbW92ZWQgV2hldGhlciB0aGUgbW92ZSBzdWNjZWVkZWQuCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX2ZpbmFsaXplRHJhZ2dpbmciLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9maW5hbGl6ZURyYWdnaW5nKG1vdmVkKSB7CiAgICAgIHZhciBlZGl0b3IgPSB0aGlzLmVkaXRvcjsKICAgICAgdmFyIG1vZGVsID0gZWRpdG9yLm1vZGVsOwoKICAgICAgdGhpcy5fcmVtb3ZlRHJvcE1hcmtlcigpOwoKICAgICAgdGhpcy5fY2xlYXJEcmFnZ2FibGVBdHRyaWJ1dGVzKCk7CgogICAgICB0aGlzLl9kcmFnZ2luZ1VpZCA9ICcnOwoKICAgICAgaWYgKCF0aGlzLl9kcmFnZ2VkUmFuZ2UpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0gLy8gRGVsZXRlIG1vdmVkIGNvbnRlbnQuCgoKICAgICAgaWYgKG1vdmVkICYmIHRoaXMuaXNFbmFibGVkKSB7CiAgICAgICAgbW9kZWwuZGVsZXRlQ29udGVudChtb2RlbC5jcmVhdGVTZWxlY3Rpb24odGhpcy5fZHJhZ2dlZFJhbmdlKSwgewogICAgICAgICAgZG9Ob3RBdXRvcGFyYWdyYXBoOiB0cnVlCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHRoaXMuX2RyYWdnZWRSYW5nZS5kZXRhY2goKTsKCiAgICAgIHRoaXMuX2RyYWdnZWRSYW5nZSA9IG51bGw7CiAgICB9CiAgfV0sIFt7CiAgICBrZXk6ICJwbHVnaW5OYW1lIiwKICAgIGdldDoKICAgIC8qKgogICAgICogQGluaGVyaXREb2MKICAgICAqLwogICAgZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gJ0RyYWdEcm9wJzsKICAgIH0KICAgIC8qKgogICAgICogQGluaGVyaXREb2MKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJyZXF1aXJlcyIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIFtDbGlwYm9hcmRQaXBlbGluZSwgV2lkZ2V0XTsKICAgIH0KICB9XSk7CgogIHJldHVybiBEcmFnRHJvcDsKfShQbHVnaW4pOyAvLyBSZXR1cm5zIGZpeGVkIHNlbGVjdGlvbiByYW5nZSBmb3IgZ2l2ZW4gcG9zaXRpb24gYW5kIHRhcmdldCBlbGVtZW50LgovLwovLyBAcGFyYW0ge21vZHVsZTpjb3JlL2VkaXRvci9lZGl0b3J+RWRpdG9yfSBlZGl0b3IKLy8gQHBhcmFtIHtBcnJheS48bW9kdWxlOmVuZ2luZS92aWV3L3JhbmdlflJhbmdlPn0gdGFyZ2V0Vmlld1JhbmdlcwovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvdmlldy9lbGVtZW50fkVsZW1lbnR9IHRhcmdldFZpZXdFbGVtZW50Ci8vIEByZXR1cm5zIHttb2R1bGU6ZW5naW5lL21vZGVsL3JhbmdlflJhbmdlfG51bGx9CgoKZXhwb3J0IHsgRHJhZ0Ryb3AgYXMgZGVmYXVsdCB9OwoKZnVuY3Rpb24gZmluZERyb3BUYXJnZXRSYW5nZShlZGl0b3IsIHRhcmdldFZpZXdSYW5nZXMsIHRhcmdldFZpZXdFbGVtZW50KSB7CiAgdmFyIG1vZGVsID0gZWRpdG9yLm1vZGVsOwogIHZhciBtYXBwZXIgPSBlZGl0b3IuZWRpdGluZy5tYXBwZXI7CiAgdmFyIHJhbmdlID0gbnVsbDsKICB2YXIgdGFyZ2V0Vmlld1Bvc2l0aW9uID0gdGFyZ2V0Vmlld1JhbmdlcyA/IHRhcmdldFZpZXdSYW5nZXNbMF0uc3RhcnQgOiBudWxsOyAvLyBBIFVJRWxlbWVudCBpcyBub3QgYSB2YWxpZCBkcm9wIGVsZW1lbnQsIHVzZSBwYXJlbnQgKHRoaXMgY291bGQgYmUgYSBkcm9wIG1hcmtlciBvciBhbnkgb3RoZXIgVUlFbGVtZW50KS4KCiAgaWYgKHRhcmdldFZpZXdFbGVtZW50LmlzKCd1aUVsZW1lbnQnKSkgewogICAgdGFyZ2V0Vmlld0VsZW1lbnQgPSB0YXJnZXRWaWV3RWxlbWVudC5wYXJlbnQ7CiAgfSAvLyBRdWljayB3aW4gaWYgdGhlIHRhcmdldCBpcyBhIHdpZGdldCAoYnV0IG5vdCBhIG5lc3RlZCBlZGl0YWJsZSkuCgoKICByYW5nZSA9IGZpbmREcm9wVGFyZ2V0UmFuZ2VPbldpZGdldChlZGl0b3IsIHRhcmdldFZpZXdFbGVtZW50KTsKCiAgaWYgKHJhbmdlKSB7CiAgICByZXR1cm4gcmFuZ2U7CiAgfSAvLyBUaGUgZWFzaWVzdCBwYXJ0IGlzIG92ZXIsIG5vdyB3ZSBuZWVkIHRvIG1vdmUgdG8gdGhlIG1vZGVsIHNwYWNlLgogIC8vIEZpbmQgdGFyZ2V0IG1vZGVsIGVsZW1lbnQgYW5kIHBvc2l0aW9uLgoKCiAgdmFyIHRhcmdldE1vZGVsRWxlbWVudCA9IGdldENsb3Nlc3RNYXBwZWRNb2RlbEVsZW1lbnQoZWRpdG9yLCB0YXJnZXRWaWV3RWxlbWVudCk7CiAgdmFyIHRhcmdldE1vZGVsUG9zaXRpb24gPSB0YXJnZXRWaWV3UG9zaXRpb24gPyBtYXBwZXIudG9Nb2RlbFBvc2l0aW9uKHRhcmdldFZpZXdQb3NpdGlvbikgOiBudWxsOyAvLyBUaGVyZSBpcyBubyB0YXJnZXQgcG9zaXRpb24gd2hpbGUgaG92ZXJpbmcgb3ZlciBhbiBlbXB0eSB0YWJsZSBjZWxsLgogIC8vIEluIFNhZmFyaSwgdGFyZ2V0IHBvc2l0aW9uIGNhbiBiZSBlbXB0eSB3aGlsZSBob3ZlcmluZyBvdmVyIGEgd2lkZ2V0IChlLmcuLCBhIHBhZ2UtYnJlYWspLgogIC8vIEZpbmQgdGhlIGRyb3AgcG9zaXRpb24gaW5zaWRlIHRoZSBlbGVtZW50LgoKICBpZiAoIXRhcmdldE1vZGVsUG9zaXRpb24pIHsKICAgIHJldHVybiBmaW5kRHJvcFRhcmdldFJhbmdlSW5FbGVtZW50KGVkaXRvciwgdGFyZ2V0TW9kZWxFbGVtZW50KTsKICB9IC8vIENoZWNrIGlmIHRhcmdldCBwb3NpdGlvbiBpcyBiZXR3ZWVuIGJsb2NrcyBhbmQgYWRqdXN0IGRyb3AgcG9zaXRpb24gdG8gdGhlIG5leHQgb2JqZWN0LgogIC8vIFRoaXMgaXMgYmVjYXVzZSB3aGlsZSBob3ZlcmluZyBvdmVyIGEgcm9vdCBlbGVtZW50IG5leHQgdG8gYSB3aWRnZXQgdGhlIHRhcmdldCBwb3NpdGlvbiBjYW4ganVtcCBpbiBjcmF6eSBwbGFjZXMuCgoKICByYW5nZSA9IGZpbmREcm9wVGFyZ2V0UmFuZ2VCZXR3ZWVuQmxvY2tzKGVkaXRvciwgdGFyZ2V0TW9kZWxQb3NpdGlvbiwgdGFyZ2V0TW9kZWxFbGVtZW50KTsKCiAgaWYgKHJhbmdlKSB7CiAgICByZXR1cm4gcmFuZ2U7CiAgfSAvLyBUcnkgZml4aW5nIHNlbGVjdGlvbiBwb3NpdGlvbi4KICAvLyBJbiBGaXJlZm94LCB0aGUgdGFyZ2V0IHBvc2l0aW9uIGxhbmRzIGJlZm9yZSB3aWRnZXRzIGJ1dCBpbiBvdGhlciBicm93c2VycyBpdCB0ZW5kcyB0byBsYW5kIGFmdGVyIGEgd2lkZ2V0LgoKCiAgcmFuZ2UgPSBtb2RlbC5zY2hlbWEuZ2V0TmVhcmVzdFNlbGVjdGlvblJhbmdlKHRhcmdldE1vZGVsUG9zaXRpb24sIGVudi5pc0dlY2tvID8gJ2ZvcndhcmQnIDogJ2JhY2t3YXJkJyk7CgogIGlmIChyYW5nZSkgewogICAgcmV0dXJuIHJhbmdlOwogIH0gLy8gVGhlcmUgaXMgbm8gdmFsaWQgc2VsZWN0aW9uIHBvc2l0aW9uIGluc2lkZSB0aGUgY3VycmVudCBsaW1pdCBlbGVtZW50IHNvIGZpbmQgYSBjbG9zZXN0IG9iamVjdCBhbmNlc3Rvci4KICAvLyBUaGlzIGhhcHBlbnMgaWYgdGhlIG1vZGVsIHBvc2l0aW9uIGxhbmRzIGRpcmVjdGx5IGluIHRoZSA8dGFibGU+IGVsZW1lbnQgaXRzZWxmICh2aWV3IHRhcmdldCBlbGVtZW50IHdhcyBhIGA8dGQ+YAogIC8vIHNvIGEgbmVzdGVkIGVkaXRhYmxlLCBidXQgdmlldyB0YXJnZXQgcG9zaXRpb24gd2FzIGRpcmVjdGx5IGluIHRoZSBgPGZpZ3VyZT5gIGVsZW1lbnQpLgoKCiAgcmV0dXJuIGZpbmREcm9wVGFyZ2V0UmFuZ2VPbkFuY2VzdG9yT2JqZWN0KGVkaXRvciwgdGFyZ2V0TW9kZWxQb3NpdGlvbi5wYXJlbnQpOwp9IC8vIFJldHVybnMgZml4ZWQgc2VsZWN0aW9uIHJhbmdlIGZvciBhIGdpdmVuIHBvc2l0aW9uIGFuZCBhIHRhcmdldCBlbGVtZW50IGlmIGl0IGlzIG92ZXIgdGhlIHdpZGdldCBidXQgbm90IG92ZXIgaXRzIG5lc3RlZCBlZGl0YWJsZS4KLy8KLy8gQHBhcmFtIHttb2R1bGU6Y29yZS9lZGl0b3IvZWRpdG9yfkVkaXRvcn0gZWRpdG9yCi8vIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L2VsZW1lbnR+RWxlbWVudH0gdGFyZ2V0Vmlld0VsZW1lbnQKLy8gQHJldHVybnMge21vZHVsZTplbmdpbmUvbW9kZWwvcmFuZ2V+UmFuZ2V8bnVsbH0KCgpmdW5jdGlvbiBmaW5kRHJvcFRhcmdldFJhbmdlT25XaWRnZXQoZWRpdG9yLCB0YXJnZXRWaWV3RWxlbWVudCkgewogIHZhciBtb2RlbCA9IGVkaXRvci5tb2RlbDsKICB2YXIgbWFwcGVyID0gZWRpdG9yLmVkaXRpbmcubWFwcGVyOyAvLyBRdWljayB3aW4gaWYgdGhlIHRhcmdldCBpcyBhIHdpZGdldC4KCiAgaWYgKGlzV2lkZ2V0KHRhcmdldFZpZXdFbGVtZW50KSkgewogICAgcmV0dXJuIG1vZGVsLmNyZWF0ZVJhbmdlT24obWFwcGVyLnRvTW9kZWxFbGVtZW50KHRhcmdldFZpZXdFbGVtZW50KSk7CiAgfSAvLyBDaGVjayBpZiB3ZSBhcmUgZGVlcGVyIG92ZXIgYSB3aWRnZXQgKGJ1dCBub3Qgb3ZlciBhIG5lc3RlZCBlZGl0YWJsZSkuCgoKICBpZiAoIXRhcmdldFZpZXdFbGVtZW50LmlzKCdlZGl0YWJsZUVsZW1lbnQnKSkgewogICAgLy8gRmluZCBhIGNsb3Nlc3QgYW5jZXN0b3IgdGhhdCBpcyBlaXRoZXIgYSB3aWRnZXQgb3IgYW4gZWRpdGFibGUgZWxlbWVudC4uLgogICAgdmFyIGFuY2VzdG9yID0gdGFyZ2V0Vmlld0VsZW1lbnQuZmluZEFuY2VzdG9yKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgIHJldHVybiBpc1dpZGdldChub2RlKSB8fCBub2RlLmlzKCdlZGl0YWJsZUVsZW1lbnQnKTsKICAgIH0pOyAvLyAuLi5hbmQgaWYgdGhlIHdpZGdldCB3YXMgY2xvc2VyIHRoZW4gaXQgaXMgYSBkcm9wIHRhcmdldC4KCiAgICBpZiAoaXNXaWRnZXQoYW5jZXN0b3IpKSB7CiAgICAgIHJldHVybiBtb2RlbC5jcmVhdGVSYW5nZU9uKG1hcHBlci50b01vZGVsRWxlbWVudChhbmNlc3RvcikpOwogICAgfQogIH0KCiAgcmV0dXJuIG51bGw7Cn0gLy8gUmV0dXJucyBmaXhlZCBzZWxlY3Rpb24gcmFuZ2UgaW5zaWRlIGEgbW9kZWwgZWxlbWVudC4KLy8KLy8gQHBhcmFtIHttb2R1bGU6Y29yZS9lZGl0b3IvZWRpdG9yfkVkaXRvcn0gZWRpdG9yCi8vIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9lbGVtZW50fkVsZW1lbnR9IHRhcmdldE1vZGVsRWxlbWVudAovLyBAcmV0dXJucyB7bW9kdWxlOmVuZ2luZS9tb2RlbC9yYW5nZX5SYW5nZX0KCgpmdW5jdGlvbiBmaW5kRHJvcFRhcmdldFJhbmdlSW5FbGVtZW50KGVkaXRvciwgdGFyZ2V0TW9kZWxFbGVtZW50KSB7CiAgdmFyIG1vZGVsID0gZWRpdG9yLm1vZGVsOwogIHZhciBzY2hlbWEgPSBtb2RlbC5zY2hlbWE7CiAgdmFyIHBvc2l0aW9uQXRFbGVtZW50U3RhcnQgPSBtb2RlbC5jcmVhdGVQb3NpdGlvbkF0KHRhcmdldE1vZGVsRWxlbWVudCwgMCk7CiAgcmV0dXJuIHNjaGVtYS5nZXROZWFyZXN0U2VsZWN0aW9uUmFuZ2UocG9zaXRpb25BdEVsZW1lbnRTdGFydCwgJ2ZvcndhcmQnKTsKfSAvLyBSZXR1cm5zIGZpeGVkIHNlbGVjdGlvbiByYW5nZSBmb3IgYSBnaXZlbiBwb3NpdGlvbiBhbmQgYSB0YXJnZXQgZWxlbWVudCBpZiB0aGUgZHJvcCBpcyBiZXR3ZWVuIGJsb2Nrcy4KLy8KLy8gQHBhcmFtIHttb2R1bGU6Y29yZS9lZGl0b3IvZWRpdG9yfkVkaXRvcn0gZWRpdG9yCi8vIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9wb3NpdGlvbn5Qb3NpdGlvbn0gdGFyZ2V0TW9kZWxQb3NpdGlvbgovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvZWxlbWVudH5FbGVtZW50fSB0YXJnZXRNb2RlbEVsZW1lbnQKLy8gQHJldHVybnMge21vZHVsZTplbmdpbmUvbW9kZWwvcmFuZ2V+UmFuZ2V8bnVsbH0KCgpmdW5jdGlvbiBmaW5kRHJvcFRhcmdldFJhbmdlQmV0d2VlbkJsb2NrcyhlZGl0b3IsIHRhcmdldE1vZGVsUG9zaXRpb24sIHRhcmdldE1vZGVsRWxlbWVudCkgewogIHZhciBtb2RlbCA9IGVkaXRvci5tb2RlbDsgLy8gQ2hlY2sgaWYgdGFyZ2V0IGlzIGJldHdlZW4gYmxvY2tzLgoKICBpZiAoIW1vZGVsLnNjaGVtYS5jaGVja0NoaWxkKHRhcmdldE1vZGVsRWxlbWVudCwgJyRibG9jaycpKSB7CiAgICByZXR1cm4gbnVsbDsKICB9IC8vIEZpbmQgcG9zaXRpb24gYmV0d2VlbiBibG9ja3MuCgoKICB2YXIgcG9zaXRpb25BdEVsZW1lbnRTdGFydCA9IG1vZGVsLmNyZWF0ZVBvc2l0aW9uQXQodGFyZ2V0TW9kZWxFbGVtZW50LCAwKTsgLy8gR2V0IHRoZSBjb21tb24gcGFydCBvZiB0aGUgcGF0aCAoaW5zaWRlIHRoZSB0YXJnZXQgZWxlbWVudCBhbmQgdGhlIHRhcmdldCBwb3NpdGlvbikuCgogIHZhciBjb21tb25QYXRoID0gdGFyZ2V0TW9kZWxQb3NpdGlvbi5wYXRoLnNsaWNlKDAsIHBvc2l0aW9uQXRFbGVtZW50U3RhcnQucGF0aC5sZW5ndGgpOyAvLyBQb3NpdGlvbiBiZXR3ZWVuIHRoZSBibG9ja3MuCgogIHZhciBiZXR3ZWVuQmxvY2tzUG9zaXRpb24gPSBtb2RlbC5jcmVhdGVQb3NpdGlvbkZyb21QYXRoKHRhcmdldE1vZGVsUG9zaXRpb24ucm9vdCwgY29tbW9uUGF0aCk7CiAgdmFyIG5vZGVBZnRlciA9IGJldHdlZW5CbG9ja3NQb3NpdGlvbi5ub2RlQWZ0ZXI7IC8vIEFkanVzdCBkcm9wIHBvc2l0aW9uIHRvIHRoZSBuZXh0IG9iamVjdC4KICAvLyBUaGlzIGlzIGJlY2F1c2Ugd2hpbGUgaG92ZXJpbmcgb3ZlciBhIHJvb3QgZWxlbWVudCBuZXh0IHRvIGEgd2lkZ2V0IHRoZSB0YXJnZXQgcG9zaXRpb24gY2FuIGp1bXAgaW4gY3JhenkgcGxhY2VzLgoKICBpZiAobm9kZUFmdGVyICYmIG1vZGVsLnNjaGVtYS5pc09iamVjdChub2RlQWZ0ZXIpKSB7CiAgICByZXR1cm4gbW9kZWwuY3JlYXRlUmFuZ2VPbihub2RlQWZ0ZXIpOwogIH0KCiAgcmV0dXJuIG51bGw7Cn0gLy8gUmV0dXJucyBhIHNlbGVjdGlvbiByYW5nZSBvbiB0aGUgYW5jZXN0b3Igb2JqZWN0LgovLwovLyBAcGFyYW0ge21vZHVsZTpjb3JlL2VkaXRvci9lZGl0b3J+RWRpdG9yfSBlZGl0b3IKLy8gQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL2VsZW1lbnR+RWxlbWVudH0gZWxlbWVudAovLyBAcmV0dXJucyB7bW9kdWxlOmVuZ2luZS9tb2RlbC9yYW5nZX5SYW5nZX0KCgpmdW5jdGlvbiBmaW5kRHJvcFRhcmdldFJhbmdlT25BbmNlc3Rvck9iamVjdChlZGl0b3IsIGVsZW1lbnQpIHsKICB2YXIgbW9kZWwgPSBlZGl0b3IubW9kZWw7CgogIHdoaWxlIChlbGVtZW50KSB7CiAgICBpZiAobW9kZWwuc2NoZW1hLmlzT2JqZWN0KGVsZW1lbnQpKSB7CiAgICAgIHJldHVybiBtb2RlbC5jcmVhdGVSYW5nZU9uKGVsZW1lbnQpOwogICAgfQoKICAgIGVsZW1lbnQgPSBlbGVtZW50LnBhcmVudDsKICB9Cn0gLy8gUmV0dXJucyB0aGUgY2xvc2VzdCBtb2RlbCBlbGVtZW50IGZvciB0aGUgc3BlY2lmaWVkIHZpZXcgZWxlbWVudC4KLy8KLy8gQHBhcmFtIHttb2R1bGU6Y29yZS9lZGl0b3IvZWRpdG9yfkVkaXRvcn0gZWRpdG9yCi8vIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L2VsZW1lbnR+RWxlbWVudH0gZWxlbWVudAovLyBAcmV0dXJucyB7bW9kdWxlOmVuZ2luZS9tb2RlbC9lbGVtZW50fkVsZW1lbnR9CgoKZnVuY3Rpb24gZ2V0Q2xvc2VzdE1hcHBlZE1vZGVsRWxlbWVudChlZGl0b3IsIGVsZW1lbnQpIHsKICB2YXIgbWFwcGVyID0gZWRpdG9yLmVkaXRpbmcubWFwcGVyOwogIHZhciB2aWV3ID0gZWRpdG9yLmVkaXRpbmcudmlldzsKICB2YXIgdGFyZ2V0TW9kZWxFbGVtZW50ID0gbWFwcGVyLnRvTW9kZWxFbGVtZW50KGVsZW1lbnQpOwoKICBpZiAodGFyZ2V0TW9kZWxFbGVtZW50KSB7CiAgICByZXR1cm4gdGFyZ2V0TW9kZWxFbGVtZW50OwogIH0gLy8gRmluZCBtYXBwZWQgYW5jZXN0b3IgaWYgdGhlIHRhcmdldCBpcyBpbnNpZGUgbm90IG1hcHBlZCBlbGVtZW50IChmb3IgZXhhbXBsZSBpbmxpbmUgY29kZSBlbGVtZW50KS4KCgogIHZhciB2aWV3UG9zaXRpb24gPSB2aWV3LmNyZWF0ZVBvc2l0aW9uQmVmb3JlKGVsZW1lbnQpOwogIHZhciB2aWV3RWxlbWVudCA9IG1hcHBlci5maW5kTWFwcGVkVmlld0FuY2VzdG9yKHZpZXdQb3NpdGlvbik7CiAgcmV0dXJuIG1hcHBlci50b01vZGVsRWxlbWVudCh2aWV3RWxlbWVudCk7Cn0gLy8gUmV0dXJucyB0aGUgZHJvcCBlZmZlY3QgdGhhdCBzaG91bGQgYmUgYSByZXN1bHQgb2YgZHJhZ2dpbmcgdGhlIGNvbnRlbnQuCi8vIFRoaXMgZnVuY3Rpb24gaXMgaGFuZGxpbmcgYSBxdWlyayB3aGVuIGNoZWNraW5nIHRoZSBlZmZlY3QgaW4gdGhlICdkcm9wJyBET00gZXZlbnQuCgoKZnVuY3Rpb24gZ2V0RmluYWxEcm9wRWZmZWN0KGRhdGFUcmFuc2ZlcikgewogIGlmIChlbnYuaXNHZWNrbykgewogICAgcmV0dXJuIGRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0OwogIH0KCiAgcmV0dXJuIFsnYWxsJywgJ2NvcHlNb3ZlJ10uaW5jbHVkZXMoZGF0YVRyYW5zZmVyLmVmZmVjdEFsbG93ZWQpID8gJ21vdmUnIDogJ2NvcHknOwp9IC8vIFJldHVybnMgYSBmdW5jdGlvbiB3cmFwcGVyIHRoYXQgd2lsbCB0cmlnZ2VyIGEgZnVuY3Rpb24gYWZ0ZXIgYSBzcGVjaWZpZWQgd2FpdCB0aW1lLgovLyBUaGUgdGltZW91dCBjYW4gYmUgY2FuY2VsZWQgYnkgY2FsbGluZyB0aGUgY2FuY2VsIGZ1bmN0aW9uIG9uIHRoZSByZXR1cm5lZCB3cmFwcGVkIGZ1bmN0aW9uLgovLwovLyBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byB3cmFwLgovLyBAcGFyYW0ge051bWJlcn0gd2FpdCBUaGUgdGltZW91dCBpbiBtcy4KLy8gQHJldHVybnMge0Z1bmN0aW9ufQoKCmZ1bmN0aW9uIGRlbGF5KGZ1bmMsIHdhaXQpIHsKICB2YXIgdGltZXI7CgogIGZ1bmN0aW9uIGRlbGF5ZWQoKSB7CiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTsKICAgIH0KCiAgICBkZWxheWVkLmNhbmNlbCgpOwogICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkodm9pZCAwLCBhcmdzKTsKICAgIH0sIHdhaXQpOwogIH0KCiAgZGVsYXllZC5jYW5jZWwgPSBmdW5jdGlvbiAoKSB7CiAgICBjbGVhclRpbWVvdXQodGltZXIpOwogIH07CgogIHJldHVybiBkZWxheWVkOwp9IC8vIFJldHVybnMgYSB3aWRnZXQgZWxlbWVudCB0aGF0IHNob3VsZCBiZSBkcmFnZ2VkLgovLwovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvdmlldy9lbGVtZW50fkVsZW1lbnR9IHRhcmdldAovLyBAcmV0dXJucyB7bW9kdWxlOmVuZ2luZS92aWV3L2VsZW1lbnR+RWxlbWVudH0KCgpmdW5jdGlvbiBmaW5kRHJhZ2dhYmxlV2lkZ2V0KHRhcmdldCkgewogIC8vIFRoaXMgaXMgZGlyZWN0bHkgYW4gZWRpdGFibGUgc28gbm90IGEgd2lkZ2V0IGZvciBzdXJlLgogIGlmICh0YXJnZXQuaXMoJ2VkaXRhYmxlRWxlbWVudCcpKSB7CiAgICByZXR1cm4gbnVsbDsKICB9IC8vIFRPRE86IExldCdzIGhhdmUgYSBpc1dpZGdldFNlbGVjdGlvbkhhbmRsZURvbUVsZW1lbnQoKSBoZWxwZXIgaW4gY2tlZGl0b3I1LXdpZGdldCB1dGlscy4KCgogIGlmICh0YXJnZXQuaGFzQ2xhc3MoJ2NrLXdpZGdldF9fc2VsZWN0aW9uLWhhbmRsZScpKSB7CiAgICByZXR1cm4gdGFyZ2V0LmZpbmRBbmNlc3Rvcihpc1dpZGdldCk7CiAgfSAvLyBEaXJlY3QgaGl0IG9uIGEgd2lkZ2V0LgoKCiAgaWYgKGlzV2lkZ2V0KHRhcmdldCkpIHsKICAgIHJldHVybiB0YXJnZXQ7CiAgfSAvLyBGaW5kIGNsb3Nlc3QgYW5jZXN0b3IgdGhhdCBpcyBlaXRoZXIgYSB3aWRnZXQgb3IgYW4gZWRpdGFibGUgZWxlbWVudC4uLgoKCiAgdmFyIGFuY2VzdG9yID0gdGFyZ2V0LmZpbmRBbmNlc3RvcihmdW5jdGlvbiAobm9kZSkgewogICAgcmV0dXJuIGlzV2lkZ2V0KG5vZGUpIHx8IG5vZGUuaXMoJ2VkaXRhYmxlRWxlbWVudCcpOwogIH0pOyAvLyAuLi5hbmQgaWYgY2xvc2VyIHdhcyB0aGUgd2lkZ2V0IHRoZW4gZW5hYmxlIGRyYWdnaW5nIGl0LgoKICBpZiAoaXNXaWRnZXQoYW5jZXN0b3IpKSB7CiAgICByZXR1cm4gYW5jZXN0b3I7CiAgfQoKICByZXR1cm4gbnVsbDsKfQ=="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-clipboard/src/dragdrop.js"],"names":["Plugin","LiveRange","MouseObserver","Widget","uid","env","isWidget","ClipboardPipeline","ClipboardObserver","throttle","DragDrop","editor","view","editing","_draggedRange","_draggingUid","_draggableElement","_updateDropMarkerThrottled","targetRange","_updateDropMarker","_removeDropMarkerDelayed","delay","_removeDropMarker","_clearDraggableAttributesDelayed","_clearDraggableAttributes","addObserver","_setupDragging","_setupContentInsertionIntegration","_setupClipboardInputIntegration","_setupDropMarker","_setupDraggableAttributeHandling","listenTo","evt","name","isReadOnly","forceDisabled","clearForceDisabled","on","isEnabled","_finalizeDragging","isAndroid","detach","cancel","model","modelDocument","document","viewDocument","data","selection","target","is","preventDefault","draggableWidget","findDraggableWidget","modelElement","mapper","toModelElement","fromRange","createRangeOn","isCollapsed","selectedElement","getSelectedElement","getFirstRange","dataTransfer","effectAllowed","setData","draggedSelection","createSelection","toRange","content","toView","getSelectedContent","fire","method","priority","isCanceled","dropEffect","focus","findDropTargetRange","targetRanges","isGecko","includes","stop","getData","isMove","getFinalDropEffect","containsRange","toViewRange","clipboardPipeline","plugins","get","ranges","map","viewRange","toModelRange","change","writer","setSelection","isSuccess","resultRange","draggableElement","isBlink","editableElement","setAttribute","root","rootName","removeAttribute","toViewElement","conversion","for","markerToHighlight","classes","markerToElement","inText","schema","checkChild","markerRange","start","createUIElement","class","domDocument","domElement","toDomElement","innerHTML","markers","has","getRange","isEqual","updateMarker","range","addMarker","usingOperation","affectsData","removeMarker","moved","deleteContent","doNotAutoparagraph","targetViewRanges","targetViewElement","targetViewPosition","parent","findDropTargetRangeOnWidget","targetModelElement","getClosestMappedModelElement","targetModelPosition","toModelPosition","findDropTargetRangeInElement","findDropTargetRangeBetweenBlocks","getNearestSelectionRange","findDropTargetRangeOnAncestorObject","ancestor","findAncestor","node","positionAtElementStart","createPositionAt","commonPath","path","slice","length","betweenBlocksPosition","createPositionFromPath","nodeAfter","isObject","element","viewPosition","createPositionBefore","viewElement","findMappedViewAncestor","func","wait","timer","delayed","args","setTimeout","clearTimeout","hasClass"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,SAAP,MAAsB,gDAAtB;AACA,OAAOC,aAAP,MAA0B,4DAA1B;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,GAAP,MAAgB,mCAAhB;AACA,OAAOC,GAAP,MAAgB,mCAAhB;AACA,SAASC,QAAT,QAAyB,sCAAzB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,SAASC,QAAT,QAAyB,WAAzB;AAEA,OAAO,wBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,Q;;;;;;;;;;;;;;AAepB;AACD;AACA;AACC,oBAAO;AAAA;;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,IAAI,GAAGD,MAAM,CAACE,OAAP,CAAeD,IAA5B;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,WAAKE,aAAL,GAAqB,IAArB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,WAAKC,YAAL,GAAoB,EAApB;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,WAAKC,iBAAL,GAAyB,IAAzB;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,WAAKC,0BAAL,GAAkCR,QAAQ,CAAE,UAAAS,WAAW;AAAA,eAAI,KAAI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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/dragdrop\n */\n\n/* globals setTimeout, clearTimeout */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport LiveRange from '@ckeditor/ckeditor5-engine/src/model/liverange';\nimport MouseObserver from '@ckeditor/ckeditor5-engine/src/view/observer/mouseobserver';\nimport Widget from '@ckeditor/ckeditor5-widget/src/widget';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\nimport { isWidget } from '@ckeditor/ckeditor5-widget/src/utils';\n\nimport ClipboardPipeline from './clipboardpipeline';\nimport ClipboardObserver from './clipboardobserver';\n\nimport { throttle } from 'lodash-es';\n\nimport '../theme/clipboard.css';\n\n// Drag and drop events overview:\n//\n//                ┌──────────────────┐\n//                │     mousedown    │   Sets the draggable attribute.\n//                └─────────┬────────┘\n//                          │\n//                          └─────────────────────┐\n//                          │                     │\n//                          │           ┌─────────V────────┐\n//                          │           │      mouseup     │   Dragging did not start, removes the draggable attribute.\n//                          │           └──────────────────┘\n//                          │\n//                ┌─────────V────────┐   Retrieves the selected model.DocumentFragment\n//                │     dragstart    │   and converts it to view.DocumentFragment.\n//                └─────────┬────────┘\n//                          │\n//                ┌─────────V────────┐   Processes view.DocumentFragment to text/html and text/plain\n//                │  clipboardOutput │   and stores the results in data.dataTransfer.\n//                └─────────┬────────┘\n//                          │\n//                          │   DOM dragover\n//                          ┌────────────┐\n//                          │            │\n//                ┌─────────V────────┐   │\n//                │     dragging     │   │   Updates the drop target marker.\n//                └─────────┬────────┘   │\n//                          │            │\n//            ┌─────────────└────────────┘\n//            │             │            │\n//            │   ┌─────────V────────┐   │\n//            │   │     dragleave    │   │   Removes the drop target marker.\n//            │   └─────────┬────────┘   │\n//            │             │            │\n//        ┌───│─────────────┘            │\n//        │   │             │            │\n//        │   │   ┌─────────V────────┐   │\n//        │   │   │     dragenter    │   │   Focuses the editor view.\n//        │   │   └─────────┬────────┘   │\n//        │   │             │            │\n//        │   │             └────────────┘\n//        │   │\n//        │   └─────────────┐\n//        │   │             │\n//        │   │   ┌─────────V────────┐\n//        └───┐   │       drop       │   (The default handler of the clipboard pipeline).\n//            │   └─────────┬────────┘\n//            │             │\n//            │   ┌─────────V────────┐   Resolves the final data.targetRanges.\n//            │   │  clipboardInput  │   Aborts if dropping on dragged content.\n//            │   └─────────┬────────┘\n//            │             │\n//            │   ┌─────────V────────┐\n//            │   │  clipboardInput  │   (The default handler of the clipboard pipeline).\n//            │   └─────────┬────────┘\n//            │             │\n//            │ ┌───────────V───────────┐\n//            │ │  inputTransformation  │   (The default handler of the clipboard pipeline).\n//            │ └───────────┬───────────┘\n//            │             │\n//            │  ┌──────────V──────────┐\n//            │  │   contentInsertion  │   Updates the document selection to drop range.\n//            │  └──────────┬──────────┘\n//            │             │\n//            │  ┌──────────V──────────┐\n//            │  │   contentInsertion  │   (The default handler of the clipboard pipeline).\n//            │  └──────────┬──────────┘\n//            │             │\n//            │  ┌──────────V──────────┐\n//            │  │   contentInsertion  │   Removes the content from the original range if the insertion was successful.\n//            │  └──────────┬──────────┘\n//            │             │\n//            └─────────────┐\n//                          │\n//                ┌─────────V────────┐\n//                │      dragend     │   Removes the drop marker and cleans the state.\n//                └──────────────────┘\n//\n\n/**\n * The drag and drop feature. It works on top of the {@link module:clipboard/clipboardpipeline~ClipboardPipeline}.\n *\n * Read more about the clipboard integration in the {@glink framework/guides/deep-dive/clipboard clipboard deep dive guide}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class DragDrop extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'DragDrop';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ClipboardPipeline, Widget ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\n\t\t/**\n\t\t * The live range over the original content that is being dragged.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/model/liverange~LiveRange}\n\t\t */\n\t\tthis._draggedRange = null;\n\n\t\t/**\n\t\t * The UID of current dragging that is used to verify if the drop started in the same editor as the drag start.\n\t\t *\n\t\t * **Note**: This is a workaround for broken 'dragend' events (they are not fired if the source text node got removed).\n\t\t *\n\t\t * @private\n\t\t * @type {String}\n\t\t */\n\t\tthis._draggingUid = '';\n\n\t\t/**\n\t\t * The reference to the model element that currently has a `draggable` attribute set (it is set while dragging).\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/model/element~Element}\n\t\t */\n\t\tthis._draggableElement = null;\n\n\t\t/**\n\t\t * A throttled callback updating the drop marker.\n\t\t *\n\t\t * @private\n\t\t * @type {Function}\n\t\t */\n\t\tthis._updateDropMarkerThrottled = throttle( targetRange => this._updateDropMarker( targetRange ), 40 );\n\n\t\t/**\n\t\t * A delayed callback removing the drop marker.\n\t\t *\n\t\t * @private\n\t\t * @type {Function}\n\t\t */\n\t\tthis._removeDropMarkerDelayed = delay( () => this._removeDropMarker(), 40 );\n\n\t\t/**\n\t\t * A delayed callback removing draggable attributes.\n\t\t *\n\t\t * @private\n\t\t * @type {Function}\n\t\t */\n\t\tthis._clearDraggableAttributesDelayed = delay( () => this._clearDraggableAttributes(), 40 );\n\n\t\tview.addObserver( ClipboardObserver );\n\t\tview.addObserver( MouseObserver );\n\n\t\tthis._setupDragging();\n\t\tthis._setupContentInsertionIntegration();\n\t\tthis._setupClipboardInputIntegration();\n\t\tthis._setupDropMarker();\n\t\tthis._setupDraggableAttributeHandling();\n\n\t\tthis.listenTo( editor, 'change:isReadOnly', ( evt, name, isReadOnly ) => {\n\t\t\tif ( isReadOnly ) {\n\t\t\t\tthis.forceDisabled( 'readOnlyMode' );\n\t\t\t} else {\n\t\t\t\tthis.clearForceDisabled( 'readOnlyMode' );\n\t\t\t}\n\t\t} );\n\n\t\tthis.on( 'change:isEnabled', ( evt, name, isEnabled ) => {\n\t\t\tif ( !isEnabled ) {\n\t\t\t\tthis._finalizeDragging( false );\n\t\t\t}\n\t\t} );\n\n\t\tif ( env.isAndroid ) {\n\t\t\tthis.forceDisabled( 'noAndroidSupport' );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tif ( this._draggedRange ) {\n\t\t\tthis._draggedRange.detach();\n\t\t\tthis._draggedRange = null;\n\t\t}\n\n\t\tthis._updateDropMarkerThrottled.cancel();\n\t\tthis._removeDropMarkerDelayed.cancel();\n\t\tthis._clearDraggableAttributesDelayed.cancel();\n\n\t\treturn super.destroy();\n\t}\n\n\t/**\n\t * Drag and drop events handling.\n\t *\n\t * @private\n\t */\n\t_setupDragging() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst modelDocument = model.document;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t// The handler for the drag start; it is responsible for setting data transfer object.\n\t\tthis.listenTo( viewDocument, 'dragstart', ( evt, data ) => {\n\t\t\tconst selection = modelDocument.selection;\n\n\t\t\t// Don't drag the editable element itself.\n\t\t\tif ( data.target && data.target.is( 'editableElement' ) ) {\n\t\t\t\tdata.preventDefault();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// TODO we could clone this node somewhere and style it to match editing view but without handles,\n\t\t\t//  selection outline, WTA buttons, etc.\n\t\t\t// data.dataTransfer._native.setDragImage( data.domTarget, 0, 0 );\n\n\t\t\t// Check if this is dragstart over the widget (but not a nested editable).\n\t\t\tconst draggableWidget = data.target ? findDraggableWidget( data.target ) : null;\n\n\t\t\tif ( draggableWidget ) {\n\t\t\t\tconst modelElement = editor.editing.mapper.toModelElement( draggableWidget );\n\n\t\t\t\tthis._draggedRange = LiveRange.fromRange( model.createRangeOn( modelElement ) );\n\t\t\t}\n\n\t\t\t// If this was not a widget we should check if we need to drag some text content.\n\t\t\telse if ( !viewDocument.selection.isCollapsed ) {\n\t\t\t\tconst selectedElement = viewDocument.selection.getSelectedElement();\n\n\t\t\t\tif ( !selectedElement || !isWidget( selectedElement ) ) {\n\t\t\t\t\tthis._draggedRange = LiveRange.fromRange( selection.getFirstRange() );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !this._draggedRange ) {\n\t\t\t\tdata.preventDefault();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._draggingUid = uid();\n\n\t\t\tdata.dataTransfer.effectAllowed = this.isEnabled ? 'copyMove' : 'copy';\n\t\t\tdata.dataTransfer.setData( 'application/ckeditor5-dragging-uid', this._draggingUid );\n\n\t\t\tconst draggedSelection = model.createSelection( this._draggedRange.toRange() );\n\t\t\tconst content = editor.data.toView( model.getSelectedContent( draggedSelection ) );\n\n\t\t\tviewDocument.fire( 'clipboardOutput', { dataTransfer: data.dataTransfer, content, method: evt.name } );\n\n\t\t\tif ( !this.isEnabled ) {\n\t\t\t\tthis._draggedRange.detach();\n\t\t\t\tthis._draggedRange = null;\n\t\t\t\tthis._draggingUid = '';\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// The handler for finalizing drag and drop. It should always be triggered after dragging completes\n\t\t// even if it was completed in a different application.\n\t\t// Note: This is not fired if source text node got removed while downcasting a marker.\n\t\tthis.listenTo( viewDocument, 'dragend', ( evt, data ) => {\n\t\t\tthis._finalizeDragging( !data.dataTransfer.isCanceled && data.dataTransfer.dropEffect == 'move' );\n\t\t}, { priority: 'low' } );\n\n\t\t// Dragging over the editable.\n\t\tthis.listenTo( viewDocument, 'dragenter', () => {\n\t\t\tif ( !this.isEnabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tview.focus();\n\t\t} );\n\n\t\t// Dragging out of the editable.\n\t\tthis.listenTo( viewDocument, 'dragleave', () => {\n\t\t\t// We do not know if the mouse left the editor or just some element in it, so let us wait a few milliseconds\n\t\t\t// to check if 'dragover' is not fired.\n\t\t\tthis._removeDropMarkerDelayed();\n\t\t} );\n\n\t\t// Handler for moving dragged content over the target area.\n\t\tthis.listenTo( viewDocument, 'dragging', ( evt, data ) => {\n\t\t\tif ( !this.isEnabled ) {\n\t\t\t\tdata.dataTransfer.dropEffect = 'none';\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._removeDropMarkerDelayed.cancel();\n\n\t\t\tconst targetRange = findDropTargetRange( editor, data.targetRanges, data.target );\n\n\t\t\t// If this is content being dragged from another editor, moving out of current editor instance\n\t\t\t// is not possible until 'dragend' event case will be fixed.\n\t\t\tif ( !this._draggedRange ) {\n\t\t\t\tdata.dataTransfer.dropEffect = 'copy';\n\t\t\t}\n\n\t\t\t// In Firefox it is already set and effect allowed remains the same as originally set.\n\t\t\tif ( !env.isGecko ) {\n\t\t\t\tif ( data.dataTransfer.effectAllowed == 'copy' ) {\n\t\t\t\t\tdata.dataTransfer.dropEffect = 'copy';\n\t\t\t\t} else if ( [ 'all', 'copyMove' ].includes( data.dataTransfer.effectAllowed ) ) {\n\t\t\t\t\tdata.dataTransfer.dropEffect = 'move';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* istanbul ignore else */\n\t\t\tif ( targetRange ) {\n\t\t\t\tthis._updateDropMarkerThrottled( targetRange );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * Integration with the `clipboardInput` event.\n\t *\n\t * @private\n\t */\n\t_setupClipboardInputIntegration() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t// Update the event target ranges and abort dropping if dropping over itself.\n\t\tthis.listenTo( viewDocument, 'clipboardInput', ( evt, data ) => {\n\t\t\tif ( data.method != 'drop' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst targetRange = findDropTargetRange( editor, data.targetRanges, data.target );\n\n\t\t\t// The dragging markers must be removed after searching for the target range because sometimes\n\t\t\t// the target lands on the marker itself.\n\t\t\tthis._removeDropMarker();\n\n\t\t\t/* istanbul ignore if */\n\t\t\tif ( !targetRange ) {\n\t\t\t\tthis._finalizeDragging( false );\n\t\t\t\tevt.stop();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Since we cannot rely on the drag end event, we must check if the local drag range is from the current drag and drop\n\t\t\t// or it is from some previous not cleared one.\n\t\t\tif ( this._draggedRange && this._draggingUid != data.dataTransfer.getData( 'application/ckeditor5-dragging-uid' ) ) {\n\t\t\t\tthis._draggedRange.detach();\n\t\t\t\tthis._draggedRange = null;\n\t\t\t\tthis._draggingUid = '';\n\t\t\t}\n\n\t\t\t// Do not do anything if some content was dragged within the same document to the same position.\n\t\t\tconst isMove = getFinalDropEffect( data.dataTransfer ) == 'move';\n\n\t\t\tif ( isMove && this._draggedRange && this._draggedRange.containsRange( targetRange, true ) ) {\n\t\t\t\tthis._finalizeDragging( false );\n\t\t\t\tevt.stop();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Override the target ranges with the one adjusted to the best one for a drop.\n\t\t\tdata.targetRanges = [ editor.editing.mapper.toViewRange( targetRange ) ];\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Integration with the `contentInsertion` event of the clipboard pipeline.\n\t *\n\t * @private\n\t */\n\t_setupContentInsertionIntegration() {\n\t\tconst clipboardPipeline = this.editor.plugins.get( ClipboardPipeline );\n\n\t\tclipboardPipeline.on( 'contentInsertion', ( evt, data ) => {\n\t\t\tif ( !this.isEnabled || data.method !== 'drop' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the selection to the target range in the same change block to avoid selection post-fixing\n\t\t\t// and to be able to clone text attributes for plain text dropping.\n\t\t\tconst ranges = data.targetRanges.map( viewRange => this.editor.editing.mapper.toModelRange( viewRange ) );\n\n\t\t\tthis.editor.model.change( writer => writer.setSelection( ranges ) );\n\t\t}, { priority: 'high' } );\n\n\t\tclipboardPipeline.on( 'contentInsertion', ( evt, data ) => {\n\t\t\tif ( !this.isEnabled || data.method !== 'drop' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Remove dragged range content, remove markers, clean after dragging.\n\t\t\tconst isMove = getFinalDropEffect( data.dataTransfer ) == 'move';\n\n\t\t\t// Whether any content was inserted (insertion might fail if the schema is disallowing some elements\n\t\t\t// (for example an image caption allows only the content of a block but not blocks themselves.\n\t\t\t// Some integrations might not return valid range (i.e., table pasting).\n\t\t\tconst isSuccess = !data.resultRange || !data.resultRange.isCollapsed;\n\n\t\t\tthis._finalizeDragging( isSuccess && isMove );\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Adds listeners that add the `draggable` attribute to the elements while the mouse button is down so the dragging could start.\n\t *\n\t * @private\n\t */\n\t_setupDraggableAttributeHandling() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t// Add the 'draggable' attribute to the widget while pressing the selection handle.\n\t\t// This is required for widgets to be draggable. In Chrome it will enable dragging text nodes.\n\t\tthis.listenTo( viewDocument, 'mousedown', ( evt, data ) => {\n\t\t\t// The lack of data can be caused by editor tests firing fake mouse events. This should not occur\n\t\t\t// in real-life scenarios but this greatly simplifies editor tests that would otherwise fail a lot.\n\t\t\tif ( env.isAndroid || !data ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._clearDraggableAttributesDelayed.cancel();\n\n\t\t\t// Check if this is a mousedown over the widget (but not a nested editable).\n\t\t\tlet draggableElement = findDraggableWidget( data.target );\n\n\t\t\t// Note: There is a limitation that if more than a widget is selected (a widget and some text)\n\t\t\t// and dragging starts on the widget, then only the widget is dragged.\n\n\t\t\t// If this was not a widget then we should check if we need to drag some text content.\n\t\t\t// In Chrome set a 'draggable' attribute on closest editable to allow immediate dragging of the selected text range.\n\t\t\t// In Firefox this is not needed. In Safari it makes the whole editable draggable (not just textual content).\n\t\t\t// Disabled in read-only mode because draggable=\"true\" + contenteditable=\"false\" results\n\t\t\t// in not firing selectionchange event ever, which makes the selection stuck in read-only mode.\n\t\t\tif ( env.isBlink && !editor.isReadOnly && !draggableElement && !viewDocument.selection.isCollapsed ) {\n\t\t\t\tconst selectedElement = viewDocument.selection.getSelectedElement();\n\n\t\t\t\tif ( !selectedElement || !isWidget( selectedElement ) ) {\n\t\t\t\t\tdraggableElement = viewDocument.selection.editableElement;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( draggableElement ) {\n\t\t\t\tview.change( writer => {\n\t\t\t\t\twriter.setAttribute( 'draggable', 'true', draggableElement );\n\t\t\t\t} );\n\n\t\t\t\t// Keep the reference to the model element in case the view element gets removed while dragging.\n\t\t\t\tthis._draggableElement = editor.editing.mapper.toModelElement( draggableElement );\n\t\t\t}\n\t\t} );\n\n\t\t// Remove the draggable attribute in case no dragging started (only mousedown + mouseup).\n\t\tthis.listenTo( viewDocument, 'mouseup', () => {\n\t\t\tif ( !env.isAndroid ) {\n\t\t\t\tthis._clearDraggableAttributesDelayed();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Removes the `draggable` attribute from the element that was used for dragging.\n\t *\n\t * @private\n\t */\n\t_clearDraggableAttributes() {\n\t\tconst editing = this.editor.editing;\n\n\t\tediting.view.change( writer => {\n\t\t\t// Remove 'draggable' attribute.\n\t\t\tif ( this._draggableElement && this._draggableElement.root.rootName != '$graveyard' ) {\n\t\t\t\twriter.removeAttribute( 'draggable', editing.mapper.toViewElement( this._draggableElement ) );\n\t\t\t}\n\n\t\t\tthis._draggableElement = null;\n\t\t} );\n\t}\n\n\t/**\n\t * Creates downcast conversion for the drop target marker.\n\t *\n\t * @private\n\t */\n\t_setupDropMarker() {\n\t\tconst editor = this.editor;\n\n\t\t// Drop marker conversion for hovering over widgets.\n\t\teditor.conversion.for( 'editingDowncast' ).markerToHighlight( {\n\t\t\tmodel: 'drop-target',\n\t\t\tview: {\n\t\t\t\tclasses: [ 'ck-clipboard-drop-target-range' ]\n\t\t\t}\n\t\t} );\n\n\t\t// Drop marker conversion for in text drop target.\n\t\teditor.conversion.for( 'editingDowncast' ).markerToElement( {\n\t\t\tmodel: 'drop-target',\n\t\t\tview: ( data, { writer } ) => {\n\t\t\t\tconst inText = editor.model.schema.checkChild( data.markerRange.start, '$text' );\n\n\t\t\t\tif ( !inText ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn writer.createUIElement( 'span', { class: 'ck ck-clipboard-drop-target-position' }, function( domDocument ) {\n\t\t\t\t\tconst domElement = this.toDomElement( domDocument );\n\n\t\t\t\t\t// Using word joiner to make this marker as high as text and also making text not break on marker.\n\t\t\t\t\tdomElement.innerHTML = '&NoBreak;<span></span>&NoBreak;';\n\n\t\t\t\t\treturn domElement;\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the drop target marker to the provided range.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} targetRange The range to set the marker to.\n\t */\n\t_updateDropMarker( targetRange ) {\n\t\tconst editor = this.editor;\n\t\tconst markers = editor.model.markers;\n\n\t\teditor.model.change( writer => {\n\t\t\tif ( markers.has( 'drop-target' ) ) {\n\t\t\t\tif ( !markers.get( 'drop-target' ).getRange().isEqual( targetRange ) ) {\n\t\t\t\t\twriter.updateMarker( 'drop-target', { range: targetRange } );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twriter.addMarker( 'drop-target', {\n\t\t\t\t\trange: targetRange,\n\t\t\t\t\tusingOperation: false,\n\t\t\t\t\taffectsData: false\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Removes the drop target marker.\n\t *\n\t * @private\n\t */\n\t_removeDropMarker() {\n\t\tconst model = this.editor.model;\n\n\t\tthis._removeDropMarkerDelayed.cancel();\n\t\tthis._updateDropMarkerThrottled.cancel();\n\n\t\tif ( model.markers.has( 'drop-target' ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.removeMarker( 'drop-target' );\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Deletes the dragged content from its original range and clears the dragging state.\n\t *\n\t * @private\n\t * @param {Boolean} moved Whether the move succeeded.\n\t */\n\t_finalizeDragging( moved ) {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\tthis._removeDropMarker();\n\t\tthis._clearDraggableAttributes();\n\n\t\tthis._draggingUid = '';\n\n\t\tif ( !this._draggedRange ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Delete moved content.\n\t\tif ( moved && this.isEnabled ) {\n\t\t\tmodel.deleteContent( model.createSelection( this._draggedRange ), { doNotAutoparagraph: true } );\n\t\t}\n\n\t\tthis._draggedRange.detach();\n\t\tthis._draggedRange = null;\n\t}\n}\n\n// Returns fixed selection range for given position and target element.\n//\n// @param {module:core/editor/editor~Editor} editor\n// @param {Array.<module:engine/view/range~Range>} targetViewRanges\n// @param {module:engine/view/element~Element} targetViewElement\n// @returns {module:engine/model/range~Range|null}\nfunction findDropTargetRange( editor, targetViewRanges, targetViewElement ) {\n\tconst model = editor.model;\n\tconst mapper = editor.editing.mapper;\n\n\tlet range = null;\n\n\tconst targetViewPosition = targetViewRanges ? targetViewRanges[ 0 ].start : null;\n\n\t// A UIElement is not a valid drop element, use parent (this could be a drop marker or any other UIElement).\n\tif ( targetViewElement.is( 'uiElement' ) ) {\n\t\ttargetViewElement = targetViewElement.parent;\n\t}\n\n\t// Quick win if the target is a widget (but not a nested editable).\n\trange = findDropTargetRangeOnWidget( editor, targetViewElement );\n\n\tif ( range ) {\n\t\treturn range;\n\t}\n\n\t// The easiest part is over, now we need to move to the model space.\n\n\t// Find target model element and position.\n\tconst targetModelElement = getClosestMappedModelElement( editor, targetViewElement );\n\tconst targetModelPosition = targetViewPosition ? mapper.toModelPosition( targetViewPosition ) : null;\n\n\t// There is no target position while hovering over an empty table cell.\n\t// In Safari, target position can be empty while hovering over a widget (e.g., a page-break).\n\t// Find the drop position inside the element.\n\tif ( !targetModelPosition ) {\n\t\treturn findDropTargetRangeInElement( editor, targetModelElement );\n\t}\n\n\t// Check if target position is between blocks and adjust drop position to the next object.\n\t// This is because while hovering over a root element next to a widget the target position can jump in crazy places.\n\trange = findDropTargetRangeBetweenBlocks( editor, targetModelPosition, targetModelElement );\n\n\tif ( range ) {\n\t\treturn range;\n\t}\n\n\t// Try fixing selection position.\n\t// In Firefox, the target position lands before widgets but in other browsers it tends to land after a widget.\n\trange = model.schema.getNearestSelectionRange( targetModelPosition, env.isGecko ? 'forward' : 'backward' );\n\n\tif ( range ) {\n\t\treturn range;\n\t}\n\n\t// There is no valid selection position inside the current limit element so find a closest object ancestor.\n\t// This happens if the model position lands directly in the <table> element itself (view target element was a `<td>`\n\t// so a nested editable, but view target position was directly in the `<figure>` element).\n\treturn findDropTargetRangeOnAncestorObject( editor, targetModelPosition.parent );\n}\n\n// Returns fixed selection range for a given position and a target element if it is over the widget but not over its nested editable.\n//\n// @param {module:core/editor/editor~Editor} editor\n// @param {module:engine/view/element~Element} targetViewElement\n// @returns {module:engine/model/range~Range|null}\nfunction findDropTargetRangeOnWidget( editor, targetViewElement ) {\n\tconst model = editor.model;\n\tconst mapper = editor.editing.mapper;\n\n\t// Quick win if the target is a widget.\n\tif ( isWidget( targetViewElement ) ) {\n\t\treturn model.createRangeOn( mapper.toModelElement( targetViewElement ) );\n\t}\n\n\t// Check if we are deeper over a widget (but not over a nested editable).\n\tif ( !targetViewElement.is( 'editableElement' ) ) {\n\t\t// Find a closest ancestor that is either a widget or an editable element...\n\t\tconst ancestor = targetViewElement.findAncestor( node => isWidget( node ) || node.is( 'editableElement' ) );\n\n\t\t// ...and if the widget was closer then it is a drop target.\n\t\tif ( isWidget( ancestor ) ) {\n\t\t\treturn model.createRangeOn( mapper.toModelElement( ancestor ) );\n\t\t}\n\t}\n\n\treturn null;\n}\n\n// Returns fixed selection range inside a model element.\n//\n// @param {module:core/editor/editor~Editor} editor\n// @param {module:engine/model/element~Element} targetModelElement\n// @returns {module:engine/model/range~Range}\nfunction findDropTargetRangeInElement( editor, targetModelElement ) {\n\tconst model = editor.model;\n\tconst schema = model.schema;\n\n\tconst positionAtElementStart = model.createPositionAt( targetModelElement, 0 );\n\n\treturn schema.getNearestSelectionRange( positionAtElementStart, 'forward' );\n}\n\n// Returns fixed selection range for a given position and a target element if the drop is between blocks.\n//\n// @param {module:core/editor/editor~Editor} editor\n// @param {module:engine/model/position~Position} targetModelPosition\n// @param {module:engine/model/element~Element} targetModelElement\n// @returns {module:engine/model/range~Range|null}\nfunction findDropTargetRangeBetweenBlocks( editor, targetModelPosition, targetModelElement ) {\n\tconst model = editor.model;\n\n\t// Check if target is between blocks.\n\tif ( !model.schema.checkChild( targetModelElement, '$block' ) ) {\n\t\treturn null;\n\t}\n\n\t// Find position between blocks.\n\tconst positionAtElementStart = model.createPositionAt( targetModelElement, 0 );\n\n\t// Get the common part of the path (inside the target element and the target position).\n\tconst commonPath = targetModelPosition.path.slice( 0, positionAtElementStart.path.length );\n\n\t// Position between the blocks.\n\tconst betweenBlocksPosition = model.createPositionFromPath( targetModelPosition.root, commonPath );\n\tconst nodeAfter = betweenBlocksPosition.nodeAfter;\n\n\t// Adjust drop position to the next object.\n\t// This is because while hovering over a root element next to a widget the target position can jump in crazy places.\n\tif ( nodeAfter && model.schema.isObject( nodeAfter ) ) {\n\t\treturn model.createRangeOn( nodeAfter );\n\t}\n\n\treturn null;\n}\n\n// Returns a selection range on the ancestor object.\n//\n// @param {module:core/editor/editor~Editor} editor\n// @param {module:engine/model/element~Element} element\n// @returns {module:engine/model/range~Range}\nfunction findDropTargetRangeOnAncestorObject( editor, element ) {\n\tconst model = editor.model;\n\n\twhile ( element ) {\n\t\tif ( model.schema.isObject( element ) ) {\n\t\t\treturn model.createRangeOn( element );\n\t\t}\n\n\t\telement = element.parent;\n\t}\n}\n\n// Returns the closest model element for the specified view element.\n//\n// @param {module:core/editor/editor~Editor} editor\n// @param {module:engine/view/element~Element} element\n// @returns {module:engine/model/element~Element}\nfunction getClosestMappedModelElement( editor, element ) {\n\tconst mapper = editor.editing.mapper;\n\tconst view = editor.editing.view;\n\n\tconst targetModelElement = mapper.toModelElement( element );\n\n\tif ( targetModelElement ) {\n\t\treturn targetModelElement;\n\t}\n\n\t// Find mapped ancestor if the target is inside not mapped element (for example inline code element).\n\tconst viewPosition = view.createPositionBefore( element );\n\tconst viewElement = mapper.findMappedViewAncestor( viewPosition );\n\n\treturn mapper.toModelElement( viewElement );\n}\n\n// Returns the drop effect that should be a result of dragging the content.\n// This function is handling a quirk when checking the effect in the 'drop' DOM event.\nfunction getFinalDropEffect( dataTransfer ) {\n\tif ( env.isGecko ) {\n\t\treturn dataTransfer.dropEffect;\n\t}\n\n\treturn [ 'all', 'copyMove' ].includes( dataTransfer.effectAllowed ) ? 'move' : 'copy';\n}\n\n// Returns a function wrapper that will trigger a function after a specified wait time.\n// The timeout can be canceled by calling the cancel function on the returned wrapped function.\n//\n// @param {Function} func The function to wrap.\n// @param {Number} wait The timeout in ms.\n// @returns {Function}\nfunction delay( func, wait ) {\n\tlet timer;\n\n\tfunction delayed( ...args ) {\n\t\tdelayed.cancel();\n\t\ttimer = setTimeout( () => func( ...args ), wait );\n\t}\n\n\tdelayed.cancel = () => {\n\t\tclearTimeout( timer );\n\t};\n\n\treturn delayed;\n}\n\n// Returns a widget element that should be dragged.\n//\n// @param {module:engine/view/element~Element} target\n// @returns {module:engine/view/element~Element}\nfunction findDraggableWidget( target ) {\n\t// This is directly an editable so not a widget for sure.\n\tif ( target.is( 'editableElement' ) ) {\n\t\treturn null;\n\t}\n\n\t// TODO: Let's have a isWidgetSelectionHandleDomElement() helper in ckeditor5-widget utils.\n\tif ( target.hasClass( 'ck-widget__selection-handle' ) ) {\n\t\treturn target.findAncestor( isWidget );\n\t}\n\n\t// Direct hit on a widget.\n\tif ( isWidget( target ) ) {\n\t\treturn target;\n\t}\n\n\t// Find closest ancestor that is either a widget or an editable element...\n\tconst ancestor = target.findAncestor( node => isWidget( node ) || node.is( 'editableElement' ) );\n\n\t// ...and if closer was the widget then enable dragging it.\n\tif ( isWidget( ancestor ) ) {\n\t\treturn ancestor;\n\t}\n\n\treturn null;\n}\n"]}]}