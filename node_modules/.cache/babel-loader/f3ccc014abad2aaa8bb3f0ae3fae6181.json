{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-paragraph/src/paragraph.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-paragraph/src/paragraph.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKCi8qKgogKiBAbGljZW5zZSBDb3B5cmlnaHQgKGMpIDIwMDMtMjAyMSwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICogRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cHM6Ly9ja2VkaXRvci5jb20vbGVnYWwvY2tlZGl0b3Itb3NzLWxpY2Vuc2UKICovCgovKioKICogQG1vZHVsZSBwYXJhZ3JhcGgvcGFyYWdyYXBoCiAqLwppbXBvcnQgUGFyYWdyYXBoQ29tbWFuZCBmcm9tICcuL3BhcmFncmFwaGNvbW1hbmQnOwppbXBvcnQgSW5zZXJ0UGFyYWdyYXBoQ29tbWFuZCBmcm9tICcuL2luc2VydHBhcmFncmFwaGNvbW1hbmQnOwppbXBvcnQgUGx1Z2luIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtY29yZS9zcmMvcGx1Z2luJzsKLyoqCiAqIFRoZSBwYXJhZ3JhcGggZmVhdHVyZSBmb3IgdGhlIGVkaXRvci4KICoKICogSXQgaW50cm9kdWNlcyB0aGUgYDxwYXJhZ3JhcGg+YCBlbGVtZW50IGluIHRoZSBtb2RlbCB3aGljaCByZW5kZXJzIGFzIGEgYDxwPmAgZWxlbWVudCBpbiB0aGUgRE9NIGFuZCBkYXRhLgogKgogKiBJdCBhbHNvIGJyaW5ncyB0d28gZWRpdG9ycyBjb21tYW5kczoKICoKICogKiBUaGUge0BsaW5rIG1vZHVsZTpwYXJhZ3JhcGgvcGFyYWdyYXBoY29tbWFuZH5QYXJhZ3JhcGhDb21tYW5kIGAncGFyYWdyYXBoJ2B9IGNvbW1hbmQgdGhhdCBjb252ZXJ0cyBhbGwKICogYmxvY2tzIGluIHRoZSBtb2RlbCBzZWxlY3Rpb24gaW50byBwYXJhZ3JhcGhzLgogKiAqIFRoZSB7QGxpbmsgbW9kdWxlOnBhcmFncmFwaC9pbnNlcnRwYXJhZ3JhcGhjb21tYW5kfkluc2VydFBhcmFncmFwaENvbW1hbmQgYCdpbnNlcnRQYXJhZ3JhcGgnYH0gY29tbWFuZAogKiB0aGF0IGluc2VydHMgYSBuZXcgcGFyYWdyYXBoIGF0IGEgc3BlY2lmaWVkIGxvY2F0aW9uIGluIHRoZSBtb2RlbC4KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvcGx1Z2luflBsdWdpbgogKi8KCnZhciBQYXJhZ3JhcGggPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9QbHVnaW4pIHsKICBfaW5oZXJpdHMoUGFyYWdyYXBoLCBfUGx1Z2luKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihQYXJhZ3JhcGgpOwoKICBmdW5jdGlvbiBQYXJhZ3JhcGgoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGFyYWdyYXBoKTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUGFyYWdyYXBoLCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZToKICAgIC8qKgogICAgICogQGluaGVyaXREb2MKICAgICAqLwogICAgZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yOwogICAgICB2YXIgbW9kZWwgPSBlZGl0b3IubW9kZWw7CiAgICAgIGVkaXRvci5jb21tYW5kcy5hZGQoJ3BhcmFncmFwaCcsIG5ldyBQYXJhZ3JhcGhDb21tYW5kKGVkaXRvcikpOwogICAgICBlZGl0b3IuY29tbWFuZHMuYWRkKCdpbnNlcnRQYXJhZ3JhcGgnLCBuZXcgSW5zZXJ0UGFyYWdyYXBoQ29tbWFuZChlZGl0b3IpKTsgLy8gU2NoZW1hLgoKICAgICAgbW9kZWwuc2NoZW1hLnJlZ2lzdGVyKCdwYXJhZ3JhcGgnLCB7CiAgICAgICAgaW5oZXJpdEFsbEZyb206ICckYmxvY2snCiAgICAgIH0pOwogICAgICBlZGl0b3IuY29udmVyc2lvbi5lbGVtZW50VG9FbGVtZW50KHsKICAgICAgICBtb2RlbDogJ3BhcmFncmFwaCcsCiAgICAgICAgdmlldzogJ3AnCiAgICAgIH0pOyAvLyBDb252ZXJzaW9uIGZvciBwYXJhZ3JhcGgtbGlrZSBlbGVtZW50cyB3aGljaCBoYXMgbm90IGJlZW4gY29udmVydGVkIGJ5IGFueSBwbHVnaW4uCgogICAgICBlZGl0b3IuY29udmVyc2lvbi5mb3IoJ3VwY2FzdCcpLmVsZW1lbnRUb0VsZW1lbnQoewogICAgICAgIG1vZGVsOiBmdW5jdGlvbiBtb2RlbCh2aWV3RWxlbWVudCwgX3JlZikgewogICAgICAgICAgdmFyIHdyaXRlciA9IF9yZWYud3JpdGVyOwoKICAgICAgICAgIGlmICghUGFyYWdyYXBoLnBhcmFncmFwaExpa2VFbGVtZW50cy5oYXModmlld0VsZW1lbnQubmFtZSkpIHsKICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgICB9IC8vIERvIG5vdCBhdXRvLXBhcmFncmFwaCBlbXB0eSBlbGVtZW50cy4KCgogICAgICAgICAgaWYgKHZpZXdFbGVtZW50LmlzRW1wdHkpIHsKICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuIHdyaXRlci5jcmVhdGVFbGVtZW50KCdwYXJhZ3JhcGgnKTsKICAgICAgICB9LAogICAgICAgIHZpZXc6IC8uKy8sCiAgICAgICAgY29udmVydGVyUHJpb3JpdHk6ICdsb3cnCiAgICAgIH0pOwogICAgfQogIH1dLCBbewogICAga2V5OiAicGx1Z2luTmFtZSIsCiAgICBnZXQ6CiAgICAvKioKICAgICAqIEBpbmhlcml0RG9jCiAgICAgKi8KICAgIGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuICdQYXJhZ3JhcGgnOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFBhcmFncmFwaDsKfShQbHVnaW4pOwovKioKICogQSBsaXN0IG9mIGVsZW1lbnQgbmFtZXMgd2hpY2ggc2hvdWxkIGJlIHRyZWF0ZWQgYnkgdGhlIGF1dG9wYXJhZ3JhcGhpbmcgYWxnb3JpdGhtcyBhcwogKiBwYXJhZ3JhcGgtbGlrZS4gVGhpcyBtZWFucyB0aGF0IGUuZy4gdGhlIGZvbGxvd2luZyBjb250ZW50OgogKgogKgkJPGgxPkZvbzwvaDE+CiAqCQk8dGFibGU+CiAqCQkJPHRyPgogKgkJCQk8dGQ+WDwvdGQ+CiAqCQkJCTx0ZD4KICoJCQkJCTx1bD4KICoJCQkJCQk8bGk+WTwvbGk+CiAqCQkJCQkJPGxpPlo8L2xpPgogKgkJCQkJPC91bD4KICoJCQkJPC90ZD4KICoJCQk8L3RyPgogKgkJPC90YWJsZT4KICoKICogY29udGFpbnMgZml2ZSBwYXJhZ3JhcGgtbGlrZSBlbGVtZW50czogYDxoMT5gLCB0d28gYDx0ZD5gcyBhbmQgdHdvIGA8bGk+YHMuCiAqIEhlbmNlLCBpZiBub25lIG9mIHRoZSBmZWF0dXJlcyBpcyBnb2luZyB0byBjb252ZXJ0IHRob3NlIGVsZW1lbnRzIHRoZSBhYm92ZSBjb250ZW50IHdpbGwgYmUgYXV0b21hdGljYWxseSBoYW5kbGVkCiAqIGJ5IHRoZSBwYXJhZ3JhcGggZmVhdHVyZSBhbmQgY29udmVydGVkIHRvOgogKgogKgkJPHA+Rm9vPC9wPgogKgkJPHA+WDwvcD4KICoJCTxwPlk8L3A+CiAqCQk8cD5aPC9wPgogKgogKiBOb3RlOiBUaGUgYDx0ZD5gIGNvbnRhaW5pbmcgdHdvIGA8bGk+YCBlbGVtZW50cyB3YXMgaWdub3JlZCBhcyB0aGUgaW5uZXJtb3N0IHBhcmFncmFwaC1saWtlIGVsZW1lbnRzCiAqIGhhdmUgYSBwcmlvcml0eSB1cG9uIGNvbnZlcnNpb24uCiAqCiAqIEBtZW1iZXIge1NldC48U3RyaW5nPn0gbW9kdWxlOnBhcmFncmFwaC9wYXJhZ3JhcGh+UGFyYWdyYXBoLnBhcmFncmFwaExpa2VFbGVtZW50cwogKi8KCgpleHBvcnQgeyBQYXJhZ3JhcGggYXMgZGVmYXVsdCB9OwpQYXJhZ3JhcGgucGFyYWdyYXBoTGlrZUVsZW1lbnRzID0gbmV3IFNldChbJ2Jsb2NrcXVvdGUnLCAnZGQnLCAnZGl2JywgJ2R0JywgJ2gxJywgJ2gyJywgJ2gzJywgJ2g0JywgJ2g1JywgJ2g2JywgJ2xpJywgJ3AnLCAndGQnLCAndGgnXSk7"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-paragraph/src/paragraph.js"],"names":["ParagraphCommand","InsertParagraphCommand","Plugin","Paragraph","editor","model","commands","add","schema","register","inheritAllFrom","conversion","elementToElement","view","for","viewElement","writer","paragraphLikeElements","has","name","isEmpty","createElement","converterPriority","Set"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AAEA,OAAOC,MAAP,MAAmB,qCAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,S;;;;;;;;;;;;;;AAQpB;AACD;AACA;AACC,oBAAO;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AAEAD,MAAAA,MAAM,CAACE,QAAP,CAAgBC,GAAhB,CAAqB,WAArB,EAAkC,IAAIP,gBAAJ,CAAsBI,MAAtB,CAAlC;AACAA,MAAAA,MAAM,CAACE,QAAP,CAAgBC,GAAhB,CAAqB,iBAArB,EAAwC,IAAIN,sBAAJ,CAA4BG,MAA5B,CAAxC,EALM,CAON;;AACAC,MAAAA,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAuB,WAAvB,EAAoC;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OAApC;AAEAN,MAAAA,MAAM,CAACO,UAAP,CAAkBC,gBAAlB,CAAoC;AAAEP,QAAAA,KAAK,EAAE,WAAT;AAAsBQ,QAAAA,IAAI,EAAE;AAA5B,OAApC,EAVM,CAYN;;AACAT,MAAAA,MAAM,CAACO,UAAP,CAAkBG,GAAlB,CAAuB,QAAvB,EAAkCF,gBAAlC,CAAoD;AACnDP,QAAAA,KAAK,EAAE,eAAEU,WAAF,QAA+B;AAAA,cAAdC,MAAc,QAAdA,MAAc;;AACrC,cAAK,CAACb,SAAS,CAACc,qBAAV,CAAgCC,GAAhC,CAAqCH,WAAW,CAACI,IAAjD,CAAN,EAAgE;AAC/D,mBAAO,IAAP;AACA,WAHoC,CAKrC;;;AACA,cAAKJ,WAAW,CAACK,OAAjB,EAA2B;AAC1B,mBAAO,IAAP;AACA;;AAED,iBAAOJ,MAAM,CAACK,aAAP,CAAsB,WAAtB,CAAP;AACA,SAZkD;AAanDR,QAAAA,IAAI,EAAE,IAb6C;AAcnDS,QAAAA,iBAAiB,EAAE;AAdgC,OAApD;AAgBA;;;;AAvCD;AACD;AACA;AACC,mBAAwB;AACvB,aAAO,WAAP;AACA;;;;EANqCpB,M;AA2CvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SAzEqBC,S;AA0ErBA,SAAS,CAACc,qBAAV,GAAkC,IAAIM,GAAJ,CAAS,CAC1C,YAD0C,EAE1C,IAF0C,EAG1C,KAH0C,EAI1C,IAJ0C,EAK1C,IAL0C,EAM1C,IAN0C,EAO1C,IAP0C,EAQ1C,IAR0C,EAS1C,IAT0C,EAU1C,IAV0C,EAW1C,IAX0C,EAY1C,GAZ0C,EAa1C,IAb0C,EAc1C,IAd0C,CAAT,CAAlC","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paragraph/paragraph\n */\n\nimport ParagraphCommand from './paragraphcommand';\nimport InsertParagraphCommand from './insertparagraphcommand';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The paragraph feature for the editor.\n *\n * It introduces the `<paragraph>` element in the model which renders as a `<p>` element in the DOM and data.\n *\n * It also brings two editors commands:\n *\n * * The {@link module:paragraph/paragraphcommand~ParagraphCommand `'paragraph'`} command that converts all\n * blocks in the model selection into paragraphs.\n * * The {@link module:paragraph/insertparagraphcommand~InsertParagraphCommand `'insertParagraph'`} command\n * that inserts a new paragraph at a specified location in the model.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Paragraph extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Paragraph';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\teditor.commands.add( 'paragraph', new ParagraphCommand( editor ) );\n\t\teditor.commands.add( 'insertParagraph', new InsertParagraphCommand( editor ) );\n\n\t\t// Schema.\n\t\tmodel.schema.register( 'paragraph', { inheritAllFrom: '$block' } );\n\n\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'p' } );\n\n\t\t// Conversion for paragraph-like elements which has not been converted by any plugin.\n\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t\t\tmodel: ( viewElement, { writer } ) => {\n\t\t\t\tif ( !Paragraph.paragraphLikeElements.has( viewElement.name ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// Do not auto-paragraph empty elements.\n\t\t\t\tif ( viewElement.isEmpty ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn writer.createElement( 'paragraph' );\n\t\t\t},\n\t\t\tview: /.+/,\n\t\t\tconverterPriority: 'low'\n\t\t} );\n\t}\n}\n\n/**\n * A list of element names which should be treated by the autoparagraphing algorithms as\n * paragraph-like. This means that e.g. the following content:\n *\n *\t\t<h1>Foo</h1>\n *\t\t<table>\n *\t\t\t<tr>\n *\t\t\t\t<td>X</td>\n *\t\t\t\t<td>\n *\t\t\t\t\t<ul>\n *\t\t\t\t\t\t<li>Y</li>\n *\t\t\t\t\t\t<li>Z</li>\n *\t\t\t\t\t</ul>\n *\t\t\t\t</td>\n *\t\t\t</tr>\n *\t\t</table>\n *\n * contains five paragraph-like elements: `<h1>`, two `<td>`s and two `<li>`s.\n * Hence, if none of the features is going to convert those elements the above content will be automatically handled\n * by the paragraph feature and converted to:\n *\n *\t\t<p>Foo</p>\n *\t\t<p>X</p>\n *\t\t<p>Y</p>\n *\t\t<p>Z</p>\n *\n * Note: The `<td>` containing two `<li>` elements was ignored as the innermost paragraph-like elements\n * have a priority upon conversion.\n *\n * @member {Set.<String>} module:paragraph/paragraph~Paragraph.paragraphLikeElements\n */\nParagraph.paragraphLikeElements = new Set( [\n\t'blockquote',\n\t'dd',\n\t'div',\n\t'dt',\n\t'h1',\n\t'h2',\n\t'h3',\n\t'h4',\n\t'h5',\n\t'h6',\n\t'li',\n\t'p',\n\t'td',\n\t'th'\n] );\n"]}]}