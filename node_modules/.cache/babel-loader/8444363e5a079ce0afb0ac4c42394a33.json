{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/labeledfield/utils.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/labeledfield/utils.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDIxLCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHVpL2xhYmVsZWRmaWVsZC91dGlscwogKi8KaW1wb3J0IElucHV0VGV4dFZpZXcgZnJvbSAnLi4vaW5wdXR0ZXh0L2lucHV0dGV4dHZpZXcnOwppbXBvcnQgeyBjcmVhdGVEcm9wZG93biB9IGZyb20gJy4uL2Ryb3Bkb3duL3V0aWxzJzsKLyoqCiAqIEEgaGVscGVyIGZvciBjcmVhdGluZyBsYWJlbGVkIGlucHV0cy4KICoKICogSXQgY3JlYXRlcyBhbiBpbnN0YW5jZSBvZiBhIHtAbGluayBtb2R1bGU6dWkvaW5wdXR0ZXh0L2lucHV0dGV4dHZpZXd+SW5wdXRUZXh0VmlldyBpbnB1dCB0ZXh0fSB0aGF0IGlzCiAqIGxvZ2ljYWxseSByZWxhdGVkIHRvIGEge0BsaW5rIG1vZHVsZTp1aS9sYWJlbGVkZmllbGQvbGFiZWxlZGZpZWxkdmlld35MYWJlbGVkRmllbGRWaWV3IGxhYmVsZWQgdmlld30gaW4gRE9NLgogKgogKiBUaGUgaGVscGVyIGRvZXMgdGhlIGZvbGxvd2luZzoKICoKICogKiBJdCBzZXRzIGlucHV0J3MgYGlkYCBhbmQgYGFyaWFEZXNjcmliZWRCeUlkYCBhdHRyaWJ1dGVzLgogKiAqIEl0IGJpbmRzIGlucHV0J3MgYGlzUmVhZE9ubHlgIHRvIHRoZSBsYWJlbGVkIHZpZXcuCiAqICogSXQgYmluZHMgaW5wdXQncyBgaGFzRXJyb3JgIHRvIHRoZSBsYWJlbGVkIHZpZXcuCiAqICogSXQgZW5hYmxlcyBhIGxvZ2ljIHRoYXQgY2xlYW5zIHVwIHRoZSBlcnJvciB3aGVuIHVzZXIgc3RhcnRzIHR5cGluZyBpbiB0aGUgaW5wdXQuLgogKgogKiBVc2FnZToKICoKICoJCWNvbnN0IGxhYmVsZWRJbnB1dFZpZXcgPSBuZXcgTGFiZWxlZEZpZWxkVmlldyggbG9jYWxlLCBjcmVhdGVMYWJlbGVkRHJvcGRvd24gKTsKICoJCWNvbnNvbGUubG9nKCBsYWJlbGVkSW5wdXRWaWV3LnZpZXcgKTsgLy8gQW4gaW5wdXQgaW5zdGFuY2UuCiAqCiAqIEBwYXJhbSB7bW9kdWxlOnVpL2xhYmVsZWRmaWVsZC9sYWJlbGVkZmllbGR2aWV3fkxhYmVsZWRGaWVsZFZpZXd9IGxhYmVsZWRGaWVsZFZpZXcgVGhlIGluc3RhbmNlIG9mIHRoZSBsYWJlbGVkIGZpZWxkIHZpZXcuCiAqIEBwYXJhbSB7U3RyaW5nfSB2aWV3VWlkIEFuIFVJRCBzdHJpbmcgdGhhdCBhbGxvd3MgRE9NIGxvZ2ljYWwgY29ubmVjdGlvbiBiZXR3ZWVuIHRoZQogKiB7QGxpbmsgbW9kdWxlOnVpL2xhYmVsZWRmaWVsZC9sYWJlbGVkZmllbGR2aWV3fkxhYmVsZWRGaWVsZFZpZXcjbGFiZWxWaWV3IGxhYmVsZWQgdmlldydzIGxhYmVsfSBhbmQgdGhlIGlucHV0LgogKiBAcGFyYW0ge1N0cmluZ30gc3RhdHVzVWlkIEFuIFVJRCBzdHJpbmcgdGhhdCBhbGxvd3MgRE9NIGxvZ2ljYWwgY29ubmVjdGlvbiBiZXR3ZWVuIHRoZQogKiB7QGxpbmsgbW9kdWxlOnVpL2xhYmVsZWRmaWVsZC9sYWJlbGVkZmllbGR2aWV3fkxhYmVsZWRGaWVsZFZpZXcjc3RhdHVzVmlldyBsYWJlbGVkIHZpZXcncyBzdGF0dXN9IGFuZCB0aGUgaW5wdXQuCiAqIEByZXR1cm5zIHttb2R1bGU6dWkvaW5wdXR0ZXh0L2lucHV0dGV4dHZpZXd+SW5wdXRUZXh0Vmlld30gVGhlIGlucHV0IHRleHQgdmlldyBpbnN0YW5jZS4KICovCgpleHBvcnQgZnVuY3Rpb24gY3JlYXRlTGFiZWxlZElucHV0VGV4dChsYWJlbGVkRmllbGRWaWV3LCB2aWV3VWlkLCBzdGF0dXNVaWQpIHsKICB2YXIgaW5wdXRWaWV3ID0gbmV3IElucHV0VGV4dFZpZXcobGFiZWxlZEZpZWxkVmlldy5sb2NhbGUpOwogIGlucHV0Vmlldy5zZXQoewogICAgaWQ6IHZpZXdVaWQsCiAgICBhcmlhRGVzY3JpYmVkQnlJZDogc3RhdHVzVWlkCiAgfSk7CiAgaW5wdXRWaWV3LmJpbmQoJ2lzUmVhZE9ubHknKS50byhsYWJlbGVkRmllbGRWaWV3LCAnaXNFbmFibGVkJywgZnVuY3Rpb24gKHZhbHVlKSB7CiAgICByZXR1cm4gIXZhbHVlOwogIH0pOwogIGlucHV0Vmlldy5iaW5kKCdoYXNFcnJvcicpLnRvKGxhYmVsZWRGaWVsZFZpZXcsICdlcnJvclRleHQnLCBmdW5jdGlvbiAodmFsdWUpIHsKICAgIHJldHVybiAhIXZhbHVlOwogIH0pOwogIGlucHV0Vmlldy5vbignaW5wdXQnLCBmdW5jdGlvbiAoKSB7CiAgICAvLyBVWDogTWFrZSB0aGUgZXJyb3IgdGV4dCBkaXNhcHBlYXIgYW5kIGRpc2FibGUgdGhlIGVycm9yIGluZGljYXRvciBhcyB0aGUgdXNlcgogICAgLy8gc3RhcnRzIGZpeGluZyB0aGUgZXJyb3JzLgogICAgbGFiZWxlZEZpZWxkVmlldy5lcnJvclRleHQgPSBudWxsOwogIH0pOwogIGxhYmVsZWRGaWVsZFZpZXcuYmluZCgnaXNFbXB0eScsICdpc0ZvY3VzZWQnLCAncGxhY2Vob2xkZXInKS50byhpbnB1dFZpZXcpOwogIHJldHVybiBpbnB1dFZpZXc7Cn0KLyoqCiAqIEEgaGVscGVyIGZvciBjcmVhdGluZyBsYWJlbGVkIGRyb3Bkb3ducy4KICoKICogSXQgY3JlYXRlcyBhbiBpbnN0YW5jZSBvZiBhIHtAbGluayBtb2R1bGU6dWkvZHJvcGRvd24vZHJvcGRvd252aWV3fkRyb3Bkb3duVmlldyBkcm9wZG93bn0gdGhhdCBpcwogKiBsb2dpY2FsbHkgcmVsYXRlZCB0byBhIHtAbGluayBtb2R1bGU6dWkvbGFiZWxlZGZpZWxkL2xhYmVsZWRmaWVsZHZpZXd+TGFiZWxlZEZpZWxkVmlldyBsYWJlbGVkIGZpZWxkIHZpZXd9LgogKgogKiBUaGUgaGVscGVyIGRvZXMgdGhlIGZvbGxvd2luZzoKICoKICogKiBJdCBzZXRzIGRyb3Bkb3duJ3MgYGlkYCBhbmQgYGFyaWFEZXNjcmliZWRCeUlkYCBhdHRyaWJ1dGVzLgogKiAqIEl0IGJpbmRzIGlucHV0J3MgYGlzRW5hYmxlZGAgdG8gdGhlIGxhYmVsZWQgdmlldy4KICoKICogVXNhZ2U6CiAqCiAqCQljb25zdCBsYWJlbGVkSW5wdXRWaWV3ID0gbmV3IExhYmVsZWRGaWVsZFZpZXcoIGxvY2FsZSwgY3JlYXRlTGFiZWxlZERyb3Bkb3duICk7CiAqCQljb25zb2xlLmxvZyggbGFiZWxlZElucHV0Vmlldy52aWV3ICk7IC8vIEEgZHJvcGRvd24gaW5zdGFuY2UuCiAqCiAqIEBwYXJhbSB7bW9kdWxlOnVpL2xhYmVsZWRmaWVsZC9sYWJlbGVkZmllbGR2aWV3fkxhYmVsZWRGaWVsZFZpZXd9IGxhYmVsZWRGaWVsZFZpZXcgVGhlIGluc3RhbmNlIG9mIHRoZSBsYWJlbGVkIGZpZWxkIHZpZXcuCiAqIEBwYXJhbSB7U3RyaW5nfSB2aWV3VWlkIEFuIFVJRCBzdHJpbmcgdGhhdCBhbGxvd3MgRE9NIGxvZ2ljYWwgY29ubmVjdGlvbiBiZXR3ZWVuIHRoZQogKiB7QGxpbmsgbW9kdWxlOnVpL2xhYmVsZWRmaWVsZC9sYWJlbGVkZmllbGR2aWV3fkxhYmVsZWRGaWVsZFZpZXcjbGFiZWxWaWV3IGxhYmVsZWQgdmlldyBsYWJlbH0gYW5kIHRoZSBkcm9wZG93bi4KICogQHBhcmFtIHtTdHJpbmd9IHN0YXR1c1VpZCBBbiBVSUQgc3RyaW5nIHRoYXQgYWxsb3dzIERPTSBsb2dpY2FsIGNvbm5lY3Rpb24gYmV0d2VlbiB0aGUKICoge0BsaW5rIG1vZHVsZTp1aS9sYWJlbGVkZmllbGQvbGFiZWxlZGZpZWxkdmlld35MYWJlbGVkRmllbGRWaWV3I3N0YXR1c1ZpZXcgbGFiZWxlZCB2aWV3IHN0YXR1c30gYW5kIHRoZSBkcm9wZG93bi4KICogQHJldHVybnMge21vZHVsZTp1aS9kcm9wZG93bi9kcm9wZG93bnZpZXd+RHJvcGRvd25WaWV3fSBUaGUgZHJvcGRvd24gdmlldyBpbnN0YW5jZS4KICovCgpleHBvcnQgZnVuY3Rpb24gY3JlYXRlTGFiZWxlZERyb3Bkb3duKGxhYmVsZWRGaWVsZFZpZXcsIHZpZXdVaWQsIHN0YXR1c1VpZCkgewogIHZhciBkcm9wZG93blZpZXcgPSBjcmVhdGVEcm9wZG93bihsYWJlbGVkRmllbGRWaWV3LmxvY2FsZSk7CiAgZHJvcGRvd25WaWV3LnNldCh7CiAgICBpZDogdmlld1VpZCwKICAgIGFyaWFEZXNjcmliZWRCeUlkOiBzdGF0dXNVaWQKICB9KTsKICBkcm9wZG93blZpZXcuYmluZCgnaXNFbmFibGVkJykudG8obGFiZWxlZEZpZWxkVmlldyk7CiAgcmV0dXJuIGRyb3Bkb3duVmlldzsKfQ=="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/labeledfield/utils.js"],"names":["InputTextView","createDropdown","createLabeledInputText","labeledFieldView","viewUid","statusUid","inputView","locale","set","id","ariaDescribedById","bind","to","value","on","errorText","createLabeledDropdown","dropdownView"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,aAAP,MAA0B,4BAA1B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,sBAAT,CAAiCC,gBAAjC,EAAmDC,OAAnD,EAA4DC,SAA5D,EAAwE;AAC9E,MAAMC,SAAS,GAAG,IAAIN,aAAJ,CAAmBG,gBAAgB,CAACI,MAApC,CAAlB;AAEAD,EAAAA,SAAS,CAACE,GAAV,CAAe;AACdC,IAAAA,EAAE,EAAEL,OADU;AAEdM,IAAAA,iBAAiB,EAAEL;AAFL,GAAf;AAKAC,EAAAA,SAAS,CAACK,IAAV,CAAgB,YAAhB,EAA+BC,EAA/B,CAAmCT,gBAAnC,EAAqD,WAArD,EAAkE,UAAAU,KAAK;AAAA,WAAI,CAACA,KAAL;AAAA,GAAvE;AACAP,EAAAA,SAAS,CAACK,IAAV,CAAgB,UAAhB,EAA6BC,EAA7B,CAAiCT,gBAAjC,EAAmD,WAAnD,EAAgE,UAAAU,KAAK;AAAA,WAAI,CAAC,CAACA,KAAN;AAAA,GAArE;AAEAP,EAAAA,SAAS,CAACQ,EAAV,CAAc,OAAd,EAAuB,YAAM;AAC5B;AACA;AACAX,IAAAA,gBAAgB,CAACY,SAAjB,GAA6B,IAA7B;AACA,GAJD;AAMAZ,EAAAA,gBAAgB,CAACQ,IAAjB,CAAuB,SAAvB,EAAkC,WAAlC,EAA+C,aAA/C,EAA+DC,EAA/D,CAAmEN,SAAnE;AAEA,SAAOA,SAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASU,qBAAT,CAAgCb,gBAAhC,EAAkDC,OAAlD,EAA2DC,SAA3D,EAAuE;AAC7E,MAAMY,YAAY,GAAGhB,cAAc,CAAEE,gBAAgB,CAACI,MAAnB,CAAnC;AAEAU,EAAAA,YAAY,CAACT,GAAb,CAAkB;AACjBC,IAAAA,EAAE,EAAEL,OADa;AAEjBM,IAAAA,iBAAiB,EAAEL;AAFF,GAAlB;AAKAY,EAAAA,YAAY,CAACN,IAAb,CAAmB,WAAnB,EAAiCC,EAAjC,CAAqCT,gBAArC;AAEA,SAAOc,YAAP;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/labeledfield/utils\n */\n\nimport InputTextView from '../inputtext/inputtextview';\nimport { createDropdown } from '../dropdown/utils';\n\n/**\n * A helper for creating labeled inputs.\n *\n * It creates an instance of a {@link module:ui/inputtext/inputtextview~InputTextView input text} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled view} in DOM.\n *\n * The helper does the following:\n *\n * * It sets input's `id` and `ariaDescribedById` attributes.\n * * It binds input's `isReadOnly` to the labeled view.\n * * It binds input's `hasError` to the labeled view.\n * * It enables a logic that cleans up the error when user starts typing in the input..\n *\n * Usage:\n *\n *\t\tconst labeledInputView = new LabeledFieldView( locale, createLabeledDropdown );\n *\t\tconsole.log( labeledInputView.view ); // An input instance.\n *\n * @param {module:ui/labeledfield/labeledfieldview~LabeledFieldView} labeledFieldView The instance of the labeled field view.\n * @param {String} viewUid An UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view's label} and the input.\n * @param {String} statusUid An UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view's status} and the input.\n * @returns {module:ui/inputtext/inputtextview~InputTextView} The input text view instance.\n */\nexport function createLabeledInputText( labeledFieldView, viewUid, statusUid ) {\n\tconst inputView = new InputTextView( labeledFieldView.locale );\n\n\tinputView.set( {\n\t\tid: viewUid,\n\t\tariaDescribedById: statusUid\n\t} );\n\n\tinputView.bind( 'isReadOnly' ).to( labeledFieldView, 'isEnabled', value => !value );\n\tinputView.bind( 'hasError' ).to( labeledFieldView, 'errorText', value => !!value );\n\n\tinputView.on( 'input', () => {\n\t\t// UX: Make the error text disappear and disable the error indicator as the user\n\t\t// starts fixing the errors.\n\t\tlabeledFieldView.errorText = null;\n\t} );\n\n\tlabeledFieldView.bind( 'isEmpty', 'isFocused', 'placeholder' ).to( inputView );\n\n\treturn inputView;\n}\n\n/**\n * A helper for creating labeled dropdowns.\n *\n * It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled field view}.\n *\n * The helper does the following:\n *\n * * It sets dropdown's `id` and `ariaDescribedById` attributes.\n * * It binds input's `isEnabled` to the labeled view.\n *\n * Usage:\n *\n *\t\tconst labeledInputView = new LabeledFieldView( locale, createLabeledDropdown );\n *\t\tconsole.log( labeledInputView.view ); // A dropdown instance.\n *\n * @param {module:ui/labeledfield/labeledfieldview~LabeledFieldView} labeledFieldView The instance of the labeled field view.\n * @param {String} viewUid An UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view label} and the dropdown.\n * @param {String} statusUid An UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view status} and the dropdown.\n * @returns {module:ui/dropdown/dropdownview~DropdownView} The dropdown view instance.\n */\nexport function createLabeledDropdown( labeledFieldView, viewUid, statusUid ) {\n\tconst dropdownView = createDropdown( labeledFieldView.locale );\n\n\tdropdownView.set( {\n\t\tid: viewUid,\n\t\tariaDescribedById: statusUid\n\t} );\n\n\tdropdownView.bind( 'isEnabled' ).to( labeledFieldView );\n\n\treturn dropdownView;\n}\n"]}]}