{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLndlYWstc2V0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CgovKioKICogQGxpY2Vuc2UgQ29weXJpZ2h0IChjKSAyMDAzLTIwMjEsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIEZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHBzOi8vY2tlZGl0b3IuY29tL2xlZ2FsL2NrZWRpdG9yLW9zcy1saWNlbnNlCiAqLwoKLyoqCiAqIEBtb2R1bGUgdW5kby91bmRvZWRpdGluZwogKi8KaW1wb3J0IFBsdWdpbiBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LWNvcmUvc3JjL3BsdWdpbic7CmltcG9ydCBVbmRvQ29tbWFuZCBmcm9tICcuL3VuZG9jb21tYW5kJzsKaW1wb3J0IFJlZG9Db21tYW5kIGZyb20gJy4vcmVkb2NvbW1hbmQnOwovKioKICogVGhlIHVuZG8gZW5naW5lIGZlYXR1cmUuCiAqCiAqIEl0IGludHJvZHVjZXMgdGhlIGAndW5kbydgIGFuZCBgJ3JlZG8nYCBjb21tYW5kcyB0byB0aGUgZWRpdG9yLgogKgogKiBAZXh0ZW5kcyBtb2R1bGU6Y29yZS9wbHVnaW5+UGx1Z2luCiAqLwoKdmFyIFVuZG9FZGl0aW5nID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUGx1Z2luKSB7CiAgX2luaGVyaXRzKFVuZG9FZGl0aW5nLCBfUGx1Z2luKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihVbmRvRWRpdGluZyk7CgogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgZnVuY3Rpb24gVW5kb0VkaXRpbmcoZWRpdG9yKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVuZG9FZGl0aW5nKTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGVkaXRvcik7CiAgICAvKioKICAgICAqIFRoZSBjb21tYW5kIHRoYXQgbWFuYWdlcyB1bmRvIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL2JhdGNofkJhdGNoIGJhdGNoZXN9IHN0YWNrIChoaXN0b3J5KS4KICAgICAqIENyZWF0ZWQgYW5kIHJlZ2lzdGVyZWQgZHVyaW5nIHRoZSB7QGxpbmsgI2luaXQgZmVhdHVyZSBpbml0aWFsaXphdGlvbn0uCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBtZW1iZXIge21vZHVsZTp1bmRvL3VuZG9jb21tYW5kflVuZG9Db21tYW5kfSAjX3VuZG9Db21tYW5kCiAgICAgKi8KCiAgICAvKioKICAgICAqIFRoZSBjb21tYW5kIHRoYXQgbWFuYWdlcyByZWRvIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL2JhdGNofkJhdGNoIGJhdGNoZXN9IHN0YWNrIChoaXN0b3J5KS4KICAgICAqIENyZWF0ZWQgYW5kIHJlZ2lzdGVyZWQgZHVyaW5nIHRoZSB7QGxpbmsgI2luaXQgZmVhdHVyZSBpbml0aWFsaXphdGlvbn0uCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBtZW1iZXIge21vZHVsZTp1bmRvL3VuZG9jb21tYW5kflVuZG9Db21tYW5kfSAjX3JlZG9Db21tYW5kCiAgICAgKi8KCiAgICAvKioKICAgICAqIEtlZXBzIHRyYWNrIG9mIHdoaWNoIGJhdGNoZXMgd2VyZSByZWdpc3RlcmVkIGluIHVuZG8uCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBtZW1iZXIge1dlYWtTZXQuPG1vZHVsZTplbmdpbmUvbW9kZWwvYmF0Y2h+QmF0Y2g+fQogICAgICovCgogICAgX3RoaXMuX2JhdGNoUmVnaXN0cnkgPSBuZXcgV2Vha1NldCgpOwogICAgcmV0dXJuIF90aGlzOwogIH0KICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwoKCiAgX2NyZWF0ZUNsYXNzKFVuZG9FZGl0aW5nLCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7IC8vIENyZWF0ZSBjb21tYW5kcy4KCiAgICAgIHRoaXMuX3VuZG9Db21tYW5kID0gbmV3IFVuZG9Db21tYW5kKGVkaXRvcik7CiAgICAgIHRoaXMuX3JlZG9Db21tYW5kID0gbmV3IFJlZG9Db21tYW5kKGVkaXRvcik7IC8vIFJlZ2lzdGVyIGNvbW1hbmQgdG8gdGhlIGVkaXRvci4KCiAgICAgIGVkaXRvci5jb21tYW5kcy5hZGQoJ3VuZG8nLCB0aGlzLl91bmRvQ29tbWFuZCk7CiAgICAgIGVkaXRvci5jb21tYW5kcy5hZGQoJ3JlZG8nLCB0aGlzLl9yZWRvQ29tbWFuZCk7CiAgICAgIHRoaXMubGlzdGVuVG8oZWRpdG9yLm1vZGVsLCAnYXBwbHlPcGVyYXRpb24nLCBmdW5jdGlvbiAoZXZ0LCBhcmdzKSB7CiAgICAgICAgdmFyIG9wZXJhdGlvbiA9IGFyZ3NbMF07IC8vIERvIG5vdCByZWdpc3RlciBiYXRjaCBpZiB0aGUgb3BlcmF0aW9uIGlzIG5vdCBhIGRvY3VtZW50IG9wZXJhdGlvbi4KICAgICAgICAvLyBUaGlzIHByZXZlbnRzIGZyb20gY3JlYXRpbmcgZW1wdHkgdW5kbyBzdGVwcywgd2hlcmUgYWxsIG9wZXJhdGlvbnMgd2hlcmUgbm9uLWRvY3VtZW50IG9wZXJhdGlvbnMuCiAgICAgICAgLy8gTm9uLWRvY3VtZW50IG9wZXJhdGlvbnMgY3JlYXRlcyBhbmQgYWx0ZXJzIGNvbnRlbnQgaW4gZGV0YWNoZWQgdHJlZSBmcmFnbWVudHMgKGZvciBleGFtcGxlLCBkb2N1bWVudCBmcmFnbWVudHMpLgogICAgICAgIC8vIE1vc3Qgb2YgdGltZSB0aGlzIGlzIHByZXBhcmluZyBkYXRhIGJlZm9yZSBpdCBpcyBpbnNlcnRlZCBpbnRvIGFjdHVhbCB0cmVlIChmb3IgZXhhbXBsZSBkdXJpbmcgY29weSAmIHBhc3RlKS4KICAgICAgICAvLyBTdWNoIG9wZXJhdGlvbnMgc2hvdWxkIG5vdCBiZSByZXZlcnNlZC4KCiAgICAgICAgaWYgKCFvcGVyYXRpb24uaXNEb2N1bWVudE9wZXJhdGlvbikgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdmFyIGJhdGNoID0gb3BlcmF0aW9uLmJhdGNoOwoKICAgICAgICB2YXIgaXNSZWRvQmF0Y2ggPSBfdGhpczIuX3JlZG9Db21tYW5kLl9jcmVhdGVkQmF0Y2hlcy5oYXMoYmF0Y2gpOwoKICAgICAgICB2YXIgaXNVbmRvQmF0Y2ggPSBfdGhpczIuX3VuZG9Db21tYW5kLl9jcmVhdGVkQmF0Y2hlcy5oYXMoYmF0Y2gpOwoKICAgICAgICB2YXIgaXNSZWdpc3RlcmVkQmF0Y2ggPSBfdGhpczIuX2JhdGNoUmVnaXN0cnkuaGFzKGJhdGNoKTsgLy8gSWYgY2hhbmdlcyBhcmUgbm90IGEgcGFydCBvZiBhIGJhdGNoIG9yIHRoaXMgaXMgbm90IGEgbmV3IGJhdGNoLCBvbWl0IHRob3NlIGNoYW5nZXMuCgoKICAgICAgICBpZiAoaXNSZWdpc3RlcmVkQmF0Y2ggfHwgYmF0Y2gudHlwZSA9PSAndHJhbnNwYXJlbnQnICYmICFpc1JlZG9CYXRjaCAmJiAhaXNVbmRvQmF0Y2gpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaWYgKGlzUmVkb0JhdGNoKSB7CiAgICAgICAgICAgIC8vIElmIHRoaXMgYmF0Y2ggY29tZXMgZnJvbSBgcmVkb0NvbW1hbmRgLCBhZGQgaXQgdG8gYHVuZG9Db21tYW5kYCBzdGFjay4KICAgICAgICAgICAgX3RoaXMyLl91bmRvQ29tbWFuZC5hZGRCYXRjaChiYXRjaCk7CiAgICAgICAgICB9IGVsc2UgaWYgKCFpc1VuZG9CYXRjaCkgewogICAgICAgICAgICAvLyBBIGRlZmF1bHQgYmF0Y2ggLSB0aGVzZSBhcmUgbmV3IGNoYW5nZXMgaW4gdGhlIGRvY3VtZW50LCBub3QgaW50cm9kdWNlZCBieSB1bmRvIGZlYXR1cmUuCiAgICAgICAgICAgIC8vIEFkZCB0aGVtIHRvIGB1bmRvQ29tbWFuZGAgc3RhY2sgYW5kIGNsZWFyIGByZWRvQ29tbWFuZGAgc3RhY2suCiAgICAgICAgICAgIF90aGlzMi5fdW5kb0NvbW1hbmQuYWRkQmF0Y2goYmF0Y2gpOwoKICAgICAgICAgICAgX3RoaXMyLl9yZWRvQ29tbWFuZC5jbGVhclN0YWNrKCk7CiAgICAgICAgICB9CiAgICAgICAgfSAvLyBBZGQgdGhlIGJhdGNoIHRvIHRoZSByZWdpc3RyeSBzbyBpdCB3aWxsIG5vdCBiZSBwcm9jZXNzZWQgYWdhaW4uCgoKICAgICAgICBfdGhpczIuX2JhdGNoUmVnaXN0cnkuYWRkKGJhdGNoKTsKICAgICAgfSwgewogICAgICAgIHByaW9yaXR5OiAnaGlnaGVzdCcKICAgICAgfSk7CiAgICAgIHRoaXMubGlzdGVuVG8odGhpcy5fdW5kb0NvbW1hbmQsICdyZXZlcnQnLCBmdW5jdGlvbiAoZXZ0LCB1bmRvbmVCYXRjaCwgdW5kb2luZ0JhdGNoKSB7CiAgICAgICAgX3RoaXMyLl9yZWRvQ29tbWFuZC5hZGRCYXRjaCh1bmRvaW5nQmF0Y2gpOwogICAgICB9KTsKICAgICAgZWRpdG9yLmtleXN0cm9rZXMuc2V0KCdDVFJMK1onLCAndW5kbycpOwogICAgICBlZGl0b3Iua2V5c3Ryb2tlcy5zZXQoJ0NUUkwrWScsICdyZWRvJyk7CiAgICAgIGVkaXRvci5rZXlzdHJva2VzLnNldCgnQ1RSTCtTSElGVCtaJywgJ3JlZG8nKTsKICAgIH0KICB9XSwgW3sKICAgIGtleTogInBsdWdpbk5hbWUiLAogICAgZ2V0OgogICAgLyoqCiAgICAgKiBAaW5oZXJpdERvYwogICAgICovCiAgICBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiAnVW5kb0VkaXRpbmcnOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFVuZG9FZGl0aW5nOwp9KFBsdWdpbik7CgpleHBvcnQgeyBVbmRvRWRpdGluZyBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js"],"names":["Plugin","UndoCommand","RedoCommand","UndoEditing","editor","_batchRegistry","WeakSet","_undoCommand","_redoCommand","commands","add","listenTo","model","evt","args","operation","isDocumentOperation","batch","isRedoBatch","_createdBatches","has","isUndoBatch","isRegisteredBatch","type","addBatch","clearStack","priority","undoneBatch","undoingBatch","keystrokes","set"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undoediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoCommand from './undocommand';\nimport RedoCommand from './redocommand';\n\n/**\n * The undo engine feature.\n *\n * It introduces the `'undo'` and `'redo'` commands to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UndoEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'UndoEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The command that manages undo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:undo/undocommand~UndoCommand} #_undoCommand\n\t\t */\n\n\t\t/**\n\t\t * The command that manages redo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:undo/undocommand~UndoCommand} #_redoCommand\n\t\t */\n\n\t\t/**\n\t\t * Keeps track of which batches were registered in undo.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>}\n\t\t */\n\t\tthis._batchRegistry = new WeakSet();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Create commands.\n\t\tthis._undoCommand = new UndoCommand( editor );\n\t\tthis._redoCommand = new RedoCommand( editor );\n\n\t\t// Register command to the editor.\n\t\teditor.commands.add( 'undo', this._undoCommand );\n\t\teditor.commands.add( 'redo', this._redoCommand );\n\n\t\tthis.listenTo( editor.model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\t// Do not register batch if the operation is not a document operation.\n\t\t\t// This prevents from creating empty undo steps, where all operations where non-document operations.\n\t\t\t// Non-document operations creates and alters content in detached tree fragments (for example, document fragments).\n\t\t\t// Most of time this is preparing data before it is inserted into actual tree (for example during copy & paste).\n\t\t\t// Such operations should not be reversed.\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst batch = operation.batch;\n\n\t\t\tconst isRedoBatch = this._redoCommand._createdBatches.has( batch );\n\t\t\tconst isUndoBatch = this._undoCommand._createdBatches.has( batch );\n\t\t\tconst isRegisteredBatch = this._batchRegistry.has( batch );\n\n\t\t\t// If changes are not a part of a batch or this is not a new batch, omit those changes.\n\t\t\tif ( isRegisteredBatch || ( batch.type == 'transparent' && !isRedoBatch && !isUndoBatch ) ) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tif ( isRedoBatch ) {\n\t\t\t\t\t// If this batch comes from `redoCommand`, add it to `undoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t} else if ( !isUndoBatch ) {\n\t\t\t\t\t// A default batch - these are new changes in the document, not introduced by undo feature.\n\t\t\t\t\t// Add them to `undoCommand` stack and clear `redoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t\tthis._redoCommand.clearStack();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the batch to the registry so it will not be processed again.\n\t\t\tthis._batchRegistry.add( batch );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( this._undoCommand, 'revert', ( evt, undoneBatch, undoingBatch ) => {\n\t\t\tthis._redoCommand.addBatch( undoingBatch );\n\t\t} );\n\n\t\teditor.keystrokes.set( 'CTRL+Z', 'undo' );\n\t\teditor.keystrokes.set( 'CTRL+Y', 'redo' );\n\t\teditor.keystrokes.set( 'CTRL+SHIFT+Z', 'redo' );\n\t}\n}\n"]}]}