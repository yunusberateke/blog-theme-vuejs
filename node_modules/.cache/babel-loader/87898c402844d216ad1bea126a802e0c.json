{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-link/src/linkediting.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-link/src/linkediting.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-link/src/linkediting.js"],"names":["Plugin","MouseObserver","Input","TwoStepCaretMovement","inlineHighlight","findAttributeRange","ClipboardPipeline","keyCodes","LinkCommand","UnlinkCommand","ManualDecorator","createLinkElement","ensureSafeUrl","getLocalizedDecorators","normalizeDecorators","HIGHLIGHT_CLASS","DECORATOR_AUTOMATIC","DECORATOR_MANUAL","EXTERNAL_LINKS_REGEXP","LinkEditing","editor","config","define","addTargetToExternalLinks","model","schema","extend","allowAttributes","conversion","for","attributeToElement","view","href","conversionApi","elementToAttribute","name","attributes","key","value","viewElement","getAttribute","commands","add","linkDecorators","t","get","_enableAutomaticDecorators","filter","item","mode","_enableManualDecorators","twoStepCaretMovementPlugin","plugins","registerAttribute","_enableInsertContentSelectionAttributesFixer","_enableClickingAfterLink","_enableTypingOverLink","_handleDeleteContentAfterLink","automaticDecoratorDefinitions","command","automaticDecorators","id","callback","url","test","target","rel","length","getDispatcher","manualDecoratorDefinitions","manualDecorators","forEach","decorator","manualDecoratorName","writer","element","createAttributeElement","priority","setCustomProperty","selection","document","linkCommand","listenTo","nodeBefore","anchor","nodeAfter","hasAttribute","change","removeLinkAttributesFromSelection","editing","addObserver","clicked","isCollapsed","position","getFirstPosition","linkRange","isTouching","start","end","selectionAttributes","deletedContent","isTyping","shouldCopyAttributes","getAttributes","evt","attribute","setAttribute","shouldPreserveAttributes","hasBackspacePressed","data","domEvent","keyCode","backspace","linkHref","containsPosition","isEqual","enqueueChange","removeSelectionAttribute","firstPosition","lastPosition","getLastPosition","nodeAtFirstPosition","is","nodeAtLastPosition","textNode","containsRange","createRange","input","isInput","batch"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/linkediting\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { MouseObserver } from 'ckeditor5/src/engine';\nimport { Input, TwoStepCaretMovement, inlineHighlight, findAttributeRange } from 'ckeditor5/src/typing';\nimport { ClipboardPipeline } from 'ckeditor5/src/clipboard';\nimport { keyCodes } from 'ckeditor5/src/utils';\n\nimport LinkCommand from './linkcommand';\nimport UnlinkCommand from './unlinkcommand';\nimport ManualDecorator from './utils/manualdecorator';\nimport { createLinkElement, ensureSafeUrl, getLocalizedDecorators, normalizeDecorators } from './utils';\n\nimport '../theme/link.css';\n\nconst HIGHLIGHT_CLASS = 'ck-link_selected';\nconst DECORATOR_AUTOMATIC = 'automatic';\nconst DECORATOR_MANUAL = 'manual';\nconst EXTERNAL_LINKS_REGEXP = /^(https?:)?\\/\\//;\n\n/**\n * The link engine feature.\n *\n * It introduces the `linkHref=\"url\"` attribute in the model which renders to the view as a `<a href=\"url\">` element\n * as well as `'link'` and `'unlink'` commands.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class LinkEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'LinkEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\t// Clipboard is required for handling cut and paste events while typing over the link.\n\t\treturn [ TwoStepCaretMovement, Input, ClipboardPipeline ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'link', {\n\t\t\taddTargetToExternalLinks: false\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Allow link attribute on all inline nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: 'linkHref' } );\n\n\t\teditor.conversion.for( 'dataDowncast' )\n\t\t\t.attributeToElement( { model: 'linkHref', view: createLinkElement } );\n\n\t\teditor.conversion.for( 'editingDowncast' )\n\t\t\t.attributeToElement( { model: 'linkHref', view: ( href, conversionApi ) => {\n\t\t\t\treturn createLinkElement( ensureSafeUrl( href ), conversionApi );\n\t\t\t} } );\n\n\t\teditor.conversion.for( 'upcast' )\n\t\t\t.elementToAttribute( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'a',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\thref: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmodel: {\n\t\t\t\t\tkey: 'linkHref',\n\t\t\t\t\tvalue: viewElement => viewElement.getAttribute( 'href' )\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// Create linking commands.\n\t\teditor.commands.add( 'link', new LinkCommand( editor ) );\n\t\teditor.commands.add( 'unlink', new UnlinkCommand( editor ) );\n\n\t\tconst linkDecorators = getLocalizedDecorators( editor.t, normalizeDecorators( editor.config.get( 'link.decorators' ) ) );\n\n\t\tthis._enableAutomaticDecorators( linkDecorators.filter( item => item.mode === DECORATOR_AUTOMATIC ) );\n\t\tthis._enableManualDecorators( linkDecorators.filter( item => item.mode === DECORATOR_MANUAL ) );\n\n\t\t// Enable two-step caret movement for `linkHref` attribute.\n\t\tconst twoStepCaretMovementPlugin = editor.plugins.get( TwoStepCaretMovement );\n\t\ttwoStepCaretMovementPlugin.registerAttribute( 'linkHref' );\n\n\t\t// Setup highlight over selected link.\n\t\tinlineHighlight( editor, 'linkHref', 'a', HIGHLIGHT_CLASS );\n\n\t\t// Change the attributes of the selection in certain situations after the link was inserted into the document.\n\t\tthis._enableInsertContentSelectionAttributesFixer();\n\n\t\t// Handle a click at the beginning/end of a link element.\n\t\tthis._enableClickingAfterLink();\n\n\t\t// Handle typing over the link.\n\t\tthis._enableTypingOverLink();\n\n\t\t// Handle removing the content after the link element.\n\t\tthis._handleDeleteContentAfterLink();\n\t}\n\n\t/**\n\t * Processes an array of configured {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}\n\t * and registers a {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher downcast dispatcher}\n\t * for each one of them. Downcast dispatchers are obtained using the\n\t * {@link module:link/utils~AutomaticDecorators#getDispatcher} method.\n\t *\n\t * **Note**: This method also activates the automatic external link decorator if enabled with\n\t * {@link module:link/link~LinkConfig#addTargetToExternalLinks `config.link.addTargetToExternalLinks`}.\n\t *\n\t * @private\n\t * @param {Array.<module:link/link~LinkDecoratorAutomaticDefinition>} automaticDecoratorDefinitions\n\t */\n\t_enableAutomaticDecorators( automaticDecoratorDefinitions ) {\n\t\tconst editor = this.editor;\n\t\t// Store automatic decorators in the command instance as we do the same with manual decorators.\n\t\t// Thanks to that, `LinkImageEditing` plugin can re-use the same definitions.\n\t\tconst command = editor.commands.get( 'link' );\n\t\tconst automaticDecorators = command.automaticDecorators;\n\n\t\t// Adds a default decorator for external links.\n\t\tif ( editor.config.get( 'link.addTargetToExternalLinks' ) ) {\n\t\t\tautomaticDecorators.add( {\n\t\t\t\tid: 'linkIsExternal',\n\t\t\t\tmode: DECORATOR_AUTOMATIC,\n\t\t\t\tcallback: url => EXTERNAL_LINKS_REGEXP.test( url ),\n\t\t\t\tattributes: {\n\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\trel: 'noopener noreferrer'\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tautomaticDecorators.add( automaticDecoratorDefinitions );\n\n\t\tif ( automaticDecorators.length ) {\n\t\t\teditor.conversion.for( 'downcast' ).add( automaticDecorators.getDispatcher() );\n\t\t}\n\t}\n\n\t/**\n\t * Processes an array of configured {@link module:link/link~LinkDecoratorManualDefinition manual decorators},\n\t * transforms them into {@link module:link/utils~ManualDecorator} instances and stores them in the\n\t * {@link module:link/linkcommand~LinkCommand#manualDecorators} collection (a model for manual decorators state).\n\t *\n\t * Also registers an {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement attribute-to-element}\n\t * converter for each manual decorator and extends the {@link module:engine/model/schema~Schema model's schema}\n\t * with adequate model attributes.\n\t *\n\t * @private\n\t * @param {Array.<module:link/link~LinkDecoratorManualDefinition>} manualDecoratorDefinitions\n\t */\n\t_enableManualDecorators( manualDecoratorDefinitions ) {\n\t\tif ( !manualDecoratorDefinitions.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( 'link' );\n\t\tconst manualDecorators = command.manualDecorators;\n\n\t\tmanualDecoratorDefinitions.forEach( decorator => {\n\t\t\teditor.model.schema.extend( '$text', { allowAttributes: decorator.id } );\n\n\t\t\t// Keeps reference to manual decorator to decode its name to attributes during downcast.\n\t\t\tmanualDecorators.add( new ManualDecorator( decorator ) );\n\n\t\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\t\tmodel: decorator.id,\n\t\t\t\tview: ( manualDecoratorName, { writer } ) => {\n\t\t\t\t\tif ( manualDecoratorName ) {\n\t\t\t\t\t\tconst attributes = manualDecorators.get( decorator.id ).attributes;\n\t\t\t\t\t\tconst element = writer.createAttributeElement( 'a', attributes, { priority: 5 } );\n\t\t\t\t\t\twriter.setCustomProperty( 'link', true, element );\n\n\t\t\t\t\t\treturn element;\n\t\t\t\t\t}\n\t\t\t\t} } );\n\n\t\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'a',\n\t\t\t\t\tattributes: manualDecorators.get( decorator.id ).attributes\n\t\t\t\t},\n\t\t\t\tmodel: {\n\t\t\t\t\tkey: decorator.id\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * Starts listening to {@link module:engine/model/model~Model#event:insertContent} and corrects the model\n\t * selection attributes if the selection is at the end of a link after inserting the content.\n\t *\n\t * The purpose of this action is to improve the overall UX because the user is no longer \"trapped\" by the\n\t * `linkHref` attribute of the selection and they can type a \"clean\" (`linkHref`–less) text right away.\n\t *\n\t * See https://github.com/ckeditor/ckeditor5/issues/6053.\n\t *\n\t * @private\n\t */\n\t_enableInsertContentSelectionAttributesFixer() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\n\t\tthis.listenTo( model, 'insertContent', () => {\n\t\t\tconst nodeBefore = selection.anchor.nodeBefore;\n\t\t\tconst nodeAfter = selection.anchor.nodeAfter;\n\n\t\t\t// NOTE: ↰ and ↱ represent the gravity of the selection.\n\n\t\t\t// The only truly valid case is:\n\t\t\t//\n\t\t\t//\t\t                                 ↰\n\t\t\t//\t\t...<$text linkHref=\"foo\">INSERTED[]</$text>\n\t\t\t//\n\t\t\t// If the selection is not \"trapped\" by the `linkHref` attribute after inserting, there's nothing\n\t\t\t// to fix there.\n\t\t\tif ( !selection.hasAttribute( 'linkHref' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Filter out the following case where a link with the same href (e.g. <a href=\"foo\">INSERTED</a>) is inserted\n\t\t\t// in the middle of an existing link:\n\t\t\t//\n\t\t\t// Before insertion:\n\t\t\t//\t\t                       ↰\n\t\t\t//\t\t<$text linkHref=\"foo\">l[]ink</$text>\n\t\t\t//\n\t\t\t// Expected after insertion:\n\t\t\t//\t\t                               ↰\n\t\t\t//\t\t<$text linkHref=\"foo\">lINSERTED[]ink</$text>\n\t\t\t//\n\t\t\tif ( !nodeBefore ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Filter out the following case where the selection has the \"linkHref\" attribute because the\n\t\t\t// gravity is overridden and some text with another attribute (e.g. <b>INSERTED</b>) is inserted:\n\t\t\t//\n\t\t\t// Before insertion:\n\t\t\t//\n\t\t\t//\t\t                       ↱\n\t\t\t//\t\t<$text linkHref=\"foo\">[]link</$text>\n\t\t\t//\n\t\t\t// Expected after insertion:\n\t\t\t//\n\t\t\t//\t\t                                                          ↱\n\t\t\t//\t\t<$text bold=\"true\">INSERTED</$text><$text linkHref=\"foo\">[]link</$text>\n\t\t\t//\n\t\t\tif ( !nodeBefore.hasAttribute( 'linkHref' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Filter out the following case where a link is a inserted in the middle (or before) another link\n\t\t\t// (different URLs, so they will not merge). In this (let's say weird) case, we can leave the selection\n\t\t\t// attributes as they are because the user will end up writing in one link or another anyway.\n\t\t\t//\n\t\t\t// Before insertion:\n\t\t\t//\n\t\t\t//\t\t                       ↰\n\t\t\t//\t\t<$text linkHref=\"foo\">l[]ink</$text>\n\t\t\t//\n\t\t\t// Expected after insertion:\n\t\t\t//\n\t\t\t//\t\t                                                             ↰\n\t\t\t//\t\t<$text linkHref=\"foo\">l</$text><$text linkHref=\"bar\">INSERTED[]</$text><$text linkHref=\"foo\">ink</$text>\n\t\t\t//\n\t\t\tif ( nodeAfter && nodeAfter.hasAttribute( 'linkHref' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmodel.change( writer => {\n\t\t\t\tremoveLinkAttributesFromSelection( writer, linkCommand.manualDecorators );\n\t\t\t} );\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * Starts listening to {@link module:engine/view/document~Document#event:mousedown} and\n\t * {@link module:engine/view/document~Document#event:selectionChange} and puts the selection before/after a link node\n\t * if clicked at the beginning/ending of the link.\n\t *\n\t * The purpose of this action is to allow typing around the link node directly after a click.\n\t *\n\t * See https://github.com/ckeditor/ckeditor5/issues/1016.\n\t *\n\t * @private\n\t */\n\t_enableClickingAfterLink() {\n\t\tconst editor = this.editor;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\n\t\teditor.editing.view.addObserver( MouseObserver );\n\n\t\tlet clicked = false;\n\n\t\t// Detect the click.\n\t\tthis.listenTo( editor.editing.view.document, 'mousedown', () => {\n\t\t\tclicked = true;\n\t\t} );\n\n\t\t// When the selection has changed...\n\t\tthis.listenTo( editor.editing.view.document, 'selectionChange', () => {\n\t\t\tif ( !clicked ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// ...and it was caused by the click...\n\t\t\tclicked = false;\n\n\t\t\tconst selection = editor.model.document.selection;\n\n\t\t\t// ...and no text is selected...\n\t\t\tif ( !selection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// ...and clicked text is the link...\n\t\t\tif ( !selection.hasAttribute( 'linkHref' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst position = selection.getFirstPosition();\n\t\t\tconst linkRange = findAttributeRange( position, 'linkHref', selection.getAttribute( 'linkHref' ), editor.model );\n\n\t\t\t// ...check whether clicked start/end boundary of the link.\n\t\t\t// If so, remove the `linkHref` attribute.\n\t\t\tif ( position.isTouching( linkRange.start ) || position.isTouching( linkRange.end ) ) {\n\t\t\t\teditor.model.change( writer => {\n\t\t\t\t\tremoveLinkAttributesFromSelection( writer, linkCommand.manualDecorators );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Starts listening to {@link module:engine/model/model~Model#deleteContent} and {@link module:engine/model/model~Model#insertContent}\n\t * and checks whether typing over the link. If so, attributes of removed text are preserved and applied to the inserted text.\n\t *\n\t * The purpose of this action is to allow modifying a text without loosing the `linkHref` attribute (and other).\n\t *\n\t * See https://github.com/ckeditor/ckeditor5/issues/4762.\n\t *\n\t * @private\n\t */\n\t_enableTypingOverLink() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\n\t\t// Selection attributes when started typing over the link.\n\t\tlet selectionAttributes;\n\n\t\t// Whether pressed `Backspace` or `Delete`. If so, attributes should not be preserved.\n\t\tlet deletedContent;\n\n\t\t// Detect pressing `Backspace` / `Delete`.\n\t\tthis.listenTo( view.document, 'delete', () => {\n\t\t\tdeletedContent = true;\n\t\t}, { priority: 'high' } );\n\n\t\t// Listening to `model#deleteContent` allows detecting whether selected content was a link.\n\t\t// If so, before removing the element, we will copy its attributes.\n\t\tthis.listenTo( editor.model, 'deleteContent', () => {\n\t\t\tconst selection = editor.model.document.selection;\n\n\t\t\t// Copy attributes only if anything is selected.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// When the content was deleted, do not preserve attributes.\n\t\t\tif ( deletedContent ) {\n\t\t\t\tdeletedContent = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Enabled only when typing.\n\t\t\tif ( !isTyping( editor ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( shouldCopyAttributes( editor.model ) ) {\n\t\t\t\tselectionAttributes = selection.getAttributes();\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\n\t\t// Listening to `model#insertContent` allows detecting the content insertion.\n\t\t// We want to apply attributes that were removed while typing over the link.\n\t\tthis.listenTo( editor.model, 'insertContent', ( evt, [ element ] ) => {\n\t\t\tdeletedContent = false;\n\n\t\t\t// Enabled only when typing.\n\t\t\tif ( !isTyping( editor ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( !selectionAttributes ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.model.change( writer => {\n\t\t\t\tfor ( const [ attribute, value ] of selectionAttributes ) {\n\t\t\t\t\twriter.setAttribute( attribute, value, element );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tselectionAttributes = null;\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Starts listening to {@link module:engine/model/model~Model#deleteContent} and checks whether\n\t * removing a content right after the \"linkHref\" attribute.\n\t *\n\t * If so, the selection should not preserve the `linkHref` attribute. However, if\n\t * the {@link module:typing/twostepcaretmovement~TwoStepCaretMovement} plugin is active and\n\t * the selection has the \"linkHref\" attribute due to overriden gravity (at the end), the `linkHref` attribute should stay untouched.\n\t *\n\t * The purpose of this action is to allow removing the link text and keep the selection outside the link.\n\t *\n\t * See https://github.com/ckeditor/ckeditor5/issues/7521.\n\t *\n\t * @private\n\t */\n\t_handleDeleteContentAfterLink() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst view = editor.editing.view;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\n\t\t// A flag whether attributes `linkHref` attribute should be preserved.\n\t\tlet shouldPreserveAttributes = false;\n\n\t\t// A flag whether the `Backspace` key was pressed.\n\t\tlet hasBackspacePressed = false;\n\n\t\t// Detect pressing `Backspace`.\n\t\tthis.listenTo( view.document, 'delete', ( evt, data ) => {\n\t\t\thasBackspacePressed = data.domEvent.keyCode === keyCodes.backspace;\n\t\t}, { priority: 'high' } );\n\n\t\t// Before removing the content, check whether the selection is inside a link or at the end of link but with 2-SCM enabled.\n\t\t// If so, we want to preserve link attributes.\n\t\tthis.listenTo( model, 'deleteContent', () => {\n\t\t\t// Reset the state.\n\t\t\tshouldPreserveAttributes = false;\n\n\t\t\tconst position = selection.getFirstPosition();\n\t\t\tconst linkHref = selection.getAttribute( 'linkHref' );\n\n\t\t\tif ( !linkHref ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst linkRange = findAttributeRange( position, 'linkHref', linkHref, model );\n\n\t\t\t// Preserve `linkHref` attribute if the selection is in the middle of the link or\n\t\t\t// the selection is at the end of the link and 2-SCM is activated.\n\t\t\tshouldPreserveAttributes = linkRange.containsPosition( position ) || linkRange.end.isEqual( position );\n\t\t}, { priority: 'high' } );\n\n\t\t// After removing the content, check whether the current selection should preserve the `linkHref` attribute.\n\t\tthis.listenTo( model, 'deleteContent', () => {\n\t\t\t// If didn't press `Backspace`.\n\t\t\tif ( !hasBackspacePressed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thasBackspacePressed = false;\n\n\t\t\t// Disable the mechanism if inside a link (`<$text url=\"foo\">F[]oo</$text>` or <$text url=\"foo\">Foo[]</$text>`).\n\t\t\tif ( shouldPreserveAttributes ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use `model.enqueueChange()` in order to execute the callback at the end of the changes process.\n\t\t\teditor.model.enqueueChange( writer => {\n\t\t\t\tremoveLinkAttributesFromSelection( writer, linkCommand.manualDecorators );\n\t\t\t} );\n\t\t}, { priority: 'low' } );\n\t}\n}\n\n// Make the selection free of link-related model attributes.\n// All link-related model attributes start with \"link\". That includes not only \"linkHref\"\n// but also all decorator attributes (they have dynamic names).\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:utils/collection~Collection} manualDecorators\nfunction removeLinkAttributesFromSelection( writer, manualDecorators ) {\n\twriter.removeSelectionAttribute( 'linkHref' );\n\n\tfor ( const decorator of manualDecorators ) {\n\t\twriter.removeSelectionAttribute( decorator.id );\n\t}\n}\n\n// Checks whether selection's attributes should be copied to the new inserted text.\n//\n// @param {module:engine/model/model~Model} model\n// @returns {Boolean}\nfunction shouldCopyAttributes( model ) {\n\tconst selection = model.document.selection;\n\tconst firstPosition = selection.getFirstPosition();\n\tconst lastPosition = selection.getLastPosition();\n\tconst nodeAtFirstPosition = firstPosition.nodeAfter;\n\n\t// The text link node does not exist...\n\tif ( !nodeAtFirstPosition ) {\n\t\treturn false;\n\t}\n\n\t// ...or it isn't the text node...\n\tif ( !nodeAtFirstPosition.is( '$text' ) ) {\n\t\treturn false;\n\t}\n\n\t// ...or isn't the link.\n\tif ( !nodeAtFirstPosition.hasAttribute( 'linkHref' ) ) {\n\t\treturn false;\n\t}\n\n\t// `textNode` = the position is inside the link element.\n\t// `nodeBefore` = the position is at the end of the link element.\n\tconst nodeAtLastPosition = lastPosition.textNode || lastPosition.nodeBefore;\n\n\t// If both references the same node selection contains a single text node.\n\tif ( nodeAtFirstPosition === nodeAtLastPosition ) {\n\t\treturn true;\n\t}\n\n\t// If nodes are not equal, maybe the link nodes has defined additional attributes inside.\n\t// First, we need to find the entire link range.\n\tconst linkRange = findAttributeRange( firstPosition, 'linkHref', nodeAtFirstPosition.getAttribute( 'linkHref' ), model );\n\n\t// Then we can check whether selected range is inside the found link range. If so, attributes should be preserved.\n\treturn linkRange.containsRange( model.createRange( firstPosition, lastPosition ), true );\n}\n\n// Checks whether provided changes were caused by typing.\n//\n// @params {module:core/editor/editor~Editor} editor\n// @returns {Boolean}\nfunction isTyping( editor ) {\n\tconst input = editor.plugins.get( 'Input' );\n\n\treturn input.isInput( editor.model.change( writer => writer.batch ) );\n}\n"]}]}