{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/rooteditableelement.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/rooteditableelement.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwoKLyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDIxLCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGVuZ2luZS92aWV3L3Jvb3RlZGl0YWJsZWVsZW1lbnQKICovCmltcG9ydCBFZGl0YWJsZUVsZW1lbnQgZnJvbSAnLi9lZGl0YWJsZWVsZW1lbnQnOwp2YXIgcm9vdE5hbWVTeW1ib2wgPSBTeW1ib2woJ3Jvb3ROYW1lJyk7Ci8qKgogKiBDbGFzcyByZXByZXNlbnRpbmcgYSBzaW5nbGUgcm9vdCBpbiB0aGUgZGF0YSB2aWV3LiBBIHJvb3QgY2FuIGJlIGVpdGhlciB7QGxpbmsgflJvb3RFZGl0YWJsZUVsZW1lbnQjaXNSZWFkT25seSBlZGl0YWJsZSBvciByZWFkLW9ubHl9LAogKiBidXQgaW4gYm90aCBjYXNlcyBpdCBpcyBjYWxsZWQgImFuIGVkaXRhYmxlIi4gUm9vdHMgY2FuIGNvbnRhaW4gb3RoZXIge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy9lZGl0YWJsZWVsZW1lbnR+RWRpdGFibGVFbGVtZW50CiAqIGVkaXRhYmxlIGVsZW1lbnRzfSBtYWtpbmcgdGhlbSAibmVzdGVkIGVkaXRhYmxlcyIuCiAqCiAqIEBleHRlbmRzIG1vZHVsZTplbmdpbmUvdmlldy9lZGl0YWJsZWVsZW1lbnR+RWRpdGFibGVFbGVtZW50CiAqLwoKdmFyIFJvb3RFZGl0YWJsZUVsZW1lbnQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9FZGl0YWJsZUVsZW1lbnQpIHsKICBfaW5oZXJpdHMoUm9vdEVkaXRhYmxlRWxlbWVudCwgX0VkaXRhYmxlRWxlbWVudCk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoUm9vdEVkaXRhYmxlRWxlbWVudCk7CgogIC8qKgogICAqIENyZWF0ZXMgcm9vdCBlZGl0YWJsZSBlbGVtZW50LgogICAqCiAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL3ZpZXcvZG9jdW1lbnR+RG9jdW1lbnR9IGRvY3VtZW50IFRoZSBkb2N1bWVudCBpbnN0YW5jZSB0byB3aGljaCB0aGlzIGVsZW1lbnQgYmVsb25ncy4KICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBOb2RlIG5hbWUuCiAgICovCiAgZnVuY3Rpb24gUm9vdEVkaXRhYmxlRWxlbWVudChkb2N1bWVudCwgbmFtZSkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSb290RWRpdGFibGVFbGVtZW50KTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGRvY3VtZW50LCBuYW1lKTsKICAgIC8qKgogICAgICogTmFtZSBvZiB0aGlzIHJvb3QgaW5zaWRlIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvZG9jdW1lbnR+RG9jdW1lbnR9IHRoYXQgaXMgYW4gb3duZXIgb2YgdGhpcyByb290LiBJZiBubwogICAgICogb3RoZXIgbmFtZSBpcyBzZXQsIGBtYWluYCBuYW1lIGlzIHVzZWQuCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAbWVtYmVyIHtTdHJpbmd9CiAgICAgKi8KCiAgICBfdGhpcy5yb290TmFtZSA9ICdtYWluJzsKICAgIHJldHVybiBfdGhpczsKICB9CiAgLyoqCiAgICogQ2hlY2tzIHdoZXRoZXIgdGhpcyBvYmplY3QgaXMgb2YgdGhlIGdpdmVuLgogICAqCiAgICoJCXJvb3RFZGl0YWJsZUVsZW1lbnQuaXMoICdyb290RWxlbWVudCcgKTsgLy8gLT4gdHJ1ZQogICAqCQlyb290RWRpdGFibGVFbGVtZW50LmlzKCAnZWRpdGFibGVFbGVtZW50JyApOyAvLyAtPiB0cnVlCiAgICoJCXJvb3RFZGl0YWJsZUVsZW1lbnQuaXMoICdlbGVtZW50JyApOyAvLyAtPiB0cnVlCiAgICoJCXJvb3RFZGl0YWJsZUVsZW1lbnQuaXMoICdub2RlJyApOyAvLyAtPiB0cnVlCiAgICoJCXJvb3RFZGl0YWJsZUVsZW1lbnQuaXMoICd2aWV3OmVkaXRhYmxlRWxlbWVudCcgKTsgLy8gLT4gdHJ1ZQogICAqCQlyb290RWRpdGFibGVFbGVtZW50LmlzKCAndmlldzplbGVtZW50JyApOyAvLyAtPiB0cnVlCiAgICoJCXJvb3RFZGl0YWJsZUVsZW1lbnQuaXMoICd2aWV3Om5vZGUnICk7IC8vIC0+IHRydWUKICAgKgogICAqCQlyb290RWRpdGFibGVFbGVtZW50LmlzKCAnbW9kZWw6ZWxlbWVudCcgKTsgLy8gLT4gZmFsc2UKICAgKgkJcm9vdEVkaXRhYmxlRWxlbWVudC5pcyggJ2RvY3VtZW50RnJhZ21lbnQnICk7IC8vIC0+IGZhbHNlCiAgICoKICAgKiBBc3N1bWluZyB0aGF0IHRoZSBvYmplY3QgYmVpbmcgY2hlY2tlZCBpcyBhIHJvb3QgZWRpdGFibGUgZWxlbWVudCwgeW91IGNhbiBhbHNvIGNoZWNrIGl0cwogICAqIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvcm9vdGVkaXRhYmxlZWxlbWVudH5Sb290RWRpdGFibGVFbGVtZW50I25hbWUgbmFtZX06CiAgICoKICAgKgkJcm9vdEVkaXRhYmxlRWxlbWVudC5pcyggJ2VsZW1lbnQnLCAnZGl2JyApOyAvLyAtPiB0cnVlIGlmIHRoaXMgaXMgYSBkaXYgcm9vdCBlZGl0YWJsZSBlbGVtZW50CiAgICoJCXJvb3RFZGl0YWJsZUVsZW1lbnQuaXMoICdyb290RWxlbWVudCcsICdkaXYnICk7IC8vIC0+IHNhbWUgYXMgYWJvdmUKICAgKgkJdGV4dC5pcyggJ2VsZW1lbnQnLCAnZGl2JyApOyAtPiBmYWxzZQogICAqCiAgICoge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy9ub2Rlfk5vZGUjaXMgQ2hlY2sgdGhlIGVudGlyZSBsaXN0IG9mIHZpZXcgb2JqZWN0c30gd2hpY2ggaW1wbGVtZW50IHRoZSBgaXMoKWAgbWV0aG9kLgogICAqCiAgICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgVHlwZSB0byBjaGVjay4KICAgKiBAcGFyYW0ge1N0cmluZ30gW25hbWVdIEVsZW1lbnQgbmFtZS4KICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0KICAgKi8KCgogIF9jcmVhdGVDbGFzcyhSb290RWRpdGFibGVFbGVtZW50LCBbewogICAga2V5OiAiaXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlzKHR5cGUpIHsKICAgICAgdmFyIG5hbWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IG51bGw7CgogICAgICBpZiAoIW5hbWUpIHsKICAgICAgICByZXR1cm4gdHlwZSA9PT0gJ3Jvb3RFbGVtZW50JyB8fCB0eXBlID09PSAndmlldzpyb290RWxlbWVudCcgfHwgLy8gRnJvbSBzdXBlci5pcygpLiBUaGlzIGlzIGhpZ2hseSB1dGlsaXNlZCBtZXRob2QgYW5kIGNhbm5vdCBjYWxsIHN1cGVyLiBTZWUgY2tlZGl0b3IvY2tlZGl0b3I1IzY1MjkuCiAgICAgICAgdHlwZSA9PT0gJ2VkaXRhYmxlRWxlbWVudCcgfHwgdHlwZSA9PT0gJ3ZpZXc6ZWRpdGFibGVFbGVtZW50JyB8fCB0eXBlID09PSAnY29udGFpbmVyRWxlbWVudCcgfHwgdHlwZSA9PT0gJ3ZpZXc6Y29udGFpbmVyRWxlbWVudCcgfHwgdHlwZSA9PT0gJ2VsZW1lbnQnIHx8IHR5cGUgPT09ICd2aWV3OmVsZW1lbnQnIHx8IHR5cGUgPT09ICdub2RlJyB8fCB0eXBlID09PSAndmlldzpub2RlJzsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gbmFtZSA9PT0gdGhpcy5uYW1lICYmICh0eXBlID09PSAncm9vdEVsZW1lbnQnIHx8IHR5cGUgPT09ICd2aWV3OnJvb3RFbGVtZW50JyB8fCAvLyBGcm9tIHN1cGVyLmlzKCkuIFRoaXMgaXMgaGlnaGx5IHV0aWxpc2VkIG1ldGhvZCBhbmQgY2Fubm90IGNhbGwgc3VwZXIuIFNlZSBja2VkaXRvci9ja2VkaXRvcjUjNjUyOS4KICAgICAgICB0eXBlID09PSAnZWRpdGFibGVFbGVtZW50JyB8fCB0eXBlID09PSAndmlldzplZGl0YWJsZUVsZW1lbnQnIHx8IHR5cGUgPT09ICdjb250YWluZXJFbGVtZW50JyB8fCB0eXBlID09PSAndmlldzpjb250YWluZXJFbGVtZW50JyB8fCB0eXBlID09PSAnZWxlbWVudCcgfHwgdHlwZSA9PT0gJ3ZpZXc6ZWxlbWVudCcpOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAicm9vdE5hbWUiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLmdldEN1c3RvbVByb3BlcnR5KHJvb3ROYW1lU3ltYm9sKTsKICAgIH0sCiAgICBzZXQ6IGZ1bmN0aW9uIHNldChyb290TmFtZSkgewogICAgICB0aGlzLl9zZXRDdXN0b21Qcm9wZXJ0eShyb290TmFtZVN5bWJvbCwgcm9vdE5hbWUpOwogICAgfQogICAgLyoqCiAgICAgKiBPdmVycmlkZXMgb2xkIGVsZW1lbnQgbmFtZSBhbmQgc2V0cyBuZXcgb25lLgogICAgICogVGhpcyBpcyBuZWVkZWQgYmVjYXVzZSB2aWV3IHJvb3RzIGFyZSBjcmVhdGVkIGJlZm9yZSB0aGV5IGFyZSBhdHRhY2hlZCB0byB0aGUgRE9NLgogICAgICogVGhlIG5hbWUgb2YgdGhlIHJvb3QgZWxlbWVudCBpcyB0ZW1wb3JhcnkgYXQgdGhpcyBzdGFnZS4gSXQgaGFzIHRvIGJlIGNoYW5nZWQgd2hlbiB0aGUKICAgICAqIHZpZXcgcm9vdCBlbGVtZW50IGlzIGF0dGFjaGVkIHRvIHRoZSBET00gZWxlbWVudC4KICAgICAqCiAgICAgKiBAcHJvdGVjdGVkCiAgICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBUaGUgbmV3IG5hbWUgb2YgZWxlbWVudC4KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfbmFtZSIsCiAgICBzZXQ6IGZ1bmN0aW9uIHNldChuYW1lKSB7CiAgICAgIHRoaXMubmFtZSA9IG5hbWU7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUm9vdEVkaXRhYmxlRWxlbWVudDsKfShFZGl0YWJsZUVsZW1lbnQpOwoKZXhwb3J0IHsgUm9vdEVkaXRhYmxlRWxlbWVudCBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/rooteditableelement.js"],"names":["EditableElement","rootNameSymbol","Symbol","RootEditableElement","document","name","rootName","type","getCustomProperty","_setCustomProperty"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,eAAP,MAA4B,mBAA5B;AAEA,IAAMC,cAAc,GAAGC,MAAM,CAAE,UAAF,CAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,mB;;;;;AACpB;AACD;AACA;AACA;AACA;AACA;AACC,+BAAaC,QAAb,EAAuBC,IAAvB,EAA8B;AAAA;;AAAA;;AAC7B,8BAAOD,QAAP,EAAiBC,IAAjB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,UAAKC,QAAL,GAAgB,MAAhB;AAV6B;AAW7B;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACC,YAAIC,IAAJ,EAAwB;AAAA,UAAdF,IAAc,uEAAP,IAAO;;AACvB,UAAK,CAACA,IAAN,EAAa;AACZ,eAAOE,IAAI,KAAK,aAAT,IAA0BA,IAAI,KAAK,kBAAnC,IACN;AACAA,QAAAA,IAAI,KAAK,iBAFH,IAEwBA,IAAI,KAAK,sBAFjC,IAGNA,IAAI,KAAK,kBAHH,IAGyBA,IAAI,KAAK,uBAHlC,IAINA,IAAI,KAAK,SAJH,IAIgBA,IAAI,KAAK,cAJzB,IAKNA,IAAI,KAAK,MALH,IAKaA,IAAI,KAAK,WAL7B;AAMA,OAPD,MAOO;AACN,eAAOF,IAAI,KAAK,KAAKA,IAAd,KACNE,IAAI,KAAK,aAAT,IAA0BA,IAAI,KAAK,kBAAnC,IACA;AACAA,QAAAA,IAAI,KAAK,iBAFT,IAE8BA,IAAI,KAAK,sBAFvC,IAGAA,IAAI,KAAK,kBAHT,IAG+BA,IAAI,KAAK,uBAHxC,IAIAA,IAAI,KAAK,SAJT,IAIsBA,IAAI,KAAK,cALzB,CAAP;AAOA;AACD;;;SAED,eAAe;AACd,aAAO,KAAKC,iBAAL,CAAwBP,cAAxB,CAAP;AACA,K;SAED,aAAcK,QAAd,EAAyB;AACxB,WAAKG,kBAAL,CAAyBR,cAAzB,EAAyCK,QAAzC;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;SACC,aAAWD,IAAX,EAAkB;AACjB,WAAKA,IAAL,GAAYA,IAAZ;AACA;;;;EArF+CL,e;;SAA5BG,mB","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/rooteditableelement\n */\n\nimport EditableElement from './editableelement';\n\nconst rootNameSymbol = Symbol( 'rootName' );\n\n/**\n * Class representing a single root in the data view. A root can be either {@link ~RootEditableElement#isReadOnly editable or read-only},\n * but in both cases it is called \"an editable\". Roots can contain other {@link module:engine/view/editableelement~EditableElement\n * editable elements} making them \"nested editables\".\n *\n * @extends module:engine/view/editableelement~EditableElement\n */\nexport default class RootEditableElement extends EditableElement {\n\t/**\n\t * Creates root editable element.\n\t *\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t */\n\tconstructor( document, name ) {\n\t\tsuper( document, name );\n\n\t\t/**\n\t\t * Name of this root inside {@link module:engine/view/document~Document} that is an owner of this root. If no\n\t\t * other name is set, `main` name is used.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.rootName = 'main';\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\trootEditableElement.is( 'rootElement' ); // -> true\n\t *\t\trootEditableElement.is( 'editableElement' ); // -> true\n\t *\t\trootEditableElement.is( 'element' ); // -> true\n\t *\t\trootEditableElement.is( 'node' ); // -> true\n\t *\t\trootEditableElement.is( 'view:editableElement' ); // -> true\n\t *\t\trootEditableElement.is( 'view:element' ); // -> true\n\t *\t\trootEditableElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\trootEditableElement.is( 'model:element' ); // -> false\n\t *\t\trootEditableElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is a root editable element, you can also check its\n\t * {@link module:engine/view/rooteditableelement~RootEditableElement#name name}:\n\t *\n\t *\t\trootEditableElement.is( 'element', 'div' ); // -> true if this is a div root editable element\n\t *\t\trootEditableElement.is( 'rootElement', 'div' ); // -> same as above\n\t *\t\ttext.is( 'element', 'div' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'rootElement' || type === 'view:rootElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'rootElement' || type === 'view:rootElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\tget rootName() {\n\t\treturn this.getCustomProperty( rootNameSymbol );\n\t}\n\n\tset rootName( rootName ) {\n\t\tthis._setCustomProperty( rootNameSymbol, rootName );\n\t}\n\n\t/**\n\t * Overrides old element name and sets new one.\n\t * This is needed because view roots are created before they are attached to the DOM.\n\t * The name of the root element is temporary at this stage. It has to be changed when the\n\t * view root element is attached to the DOM element.\n\t *\n\t * @protected\n\t * @param {String} name The new name of element.\n\t */\n\tset _name( name ) {\n\t\tthis.name = name;\n\t}\n}\n"]}]}