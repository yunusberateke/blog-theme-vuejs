{"remainingRequest":"/home/eke/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/eke/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/eslint-loader/index.js??ref--13-0!/home/eke/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/src/store/modules/AccountModule/mutations.js","dependencies":[{"path":"/home/eke/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/src/store/modules/AccountModule/mutations.js","mtime":1621792405612},{"path":"/home/eke/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/eke/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/eke/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9la2UvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Cgp2YXIgX211dGF0aW9uczsKCmltcG9ydCB7IENMRUFSX1NUQVRFLCBTRVRfVVNFUiwgU0VUX0FDQ0VTU19LRVkgfSBmcm9tICcuL211dGF0aW9uX3R5cGVzJzsKaW1wb3J0IGRlZmF1bHRTdGF0ZSBmcm9tICcuL3N0YXRlJzsKdmFyIG11dGF0aW9ucyA9IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfVVNFUiwgZnVuY3Rpb24gKHN0YXRlLCB1c2VyKSB7CiAgc3RhdGUudXNlciA9IHVzZXI7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgQ0xFQVJfU1RBVEUsIGZ1bmN0aW9uIChzdGF0ZSkgewogIE9iamVjdC5hc3NpZ24oc3RhdGUsIGRlZmF1bHRTdGF0ZSgpKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfQUNDRVNTX0tFWSwgZnVuY3Rpb24gKHN0YXRlLCBhY2Nlc3Nfa2V5KSB7CiAgc3RhdGUuYWNjZXNzX2tleSA9IGFjY2Vzc19rZXk7Cn0pLCBfbXV0YXRpb25zKTsKZXhwb3J0IGRlZmF1bHQgbXV0YXRpb25zOw=="},{"version":3,"sources":["/home/eke/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/src/store/modules/AccountModule/mutations.js"],"names":["CLEAR_STATE","SET_USER","SET_ACCESS_KEY","defaultState","mutations","state","user","Object","assign","access_key"],"mappings":";;;;AAAA,SACIA,WADJ,EAEIC,QAFJ,EAGIC,cAHJ,QAIO,kBAJP;AAKA,OAAOC,YAAP,MAAyB,SAAzB;AAEA,IAAMC,SAAS,iDAEVH,QAFU,YAEAI,KAFA,EAEMC,IAFN,EAEW;AAClBD,EAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACH,CAJU,+BAMVN,WANU,YAMGK,KANH,EAMS;AAChBE,EAAAA,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqBF,YAAY,EAAjC;AACH,CARU,+BAUVD,cAVU,YAUMG,KAVN,EAUaI,UAVb,EAUwB;AAC/BJ,EAAAA,KAAK,CAACI,UAAN,GAAmBA,UAAnB;AACH,CAZU,cAAf;AAeA,eAAeL,SAAf","sourcesContent":["import {\n    CLEAR_STATE,\n    SET_USER,\n    SET_ACCESS_KEY,\n} from './mutation_types';\nimport defaultState from './state'\n\nconst mutations = {\n\n    [SET_USER](state,user){\n        state.user = user;\n    },\n\n    [CLEAR_STATE](state){\n        Object.assign(state, defaultState())\n    },\n\n    [SET_ACCESS_KEY](state, access_key){\n        state.access_key = access_key;\n    },\n}\n\nexport default mutations;\n"]}]}