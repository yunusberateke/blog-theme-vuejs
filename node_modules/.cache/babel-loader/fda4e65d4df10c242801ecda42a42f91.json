{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-link/src/linkui.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-link/src/linkui.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-link/src/linkui.js"],"names":["Plugin","ClickObserver","ButtonView","ContextualBalloon","clickOutsideHandler","LinkFormView","LinkActionsView","addLinkProtocolIfApplicable","isLinkElement","LINK_KEYSTROKE","linkIcon","VISUAL_SELECTION_MARKER_NAME","LinkUI","editor","editing","view","addObserver","actionsView","_createActionsView","formView","_createFormView","_balloon","plugins","get","_createToolbarLinkButton","_enableUserBalloonInteractions","conversion","for","markerToHighlight","model","classes","markerToElement","name","destroy","locale","linkCommand","commands","unlinkCommand","bind","to","editButtonView","unlinkButtonView","listenTo","_addFormView","execute","_hideUI","keystrokes","set","data","cancel","defaultProtocol","config","urlInputView","fieldView","value","saveButtonView","element","parsedUrl","getDecoratorSwitchesState","_closeFormView","t","keyEvtData","isEnabled","_showUI","ui","componentFactory","add","button","label","icon","keystroke","tooltip","isToggleable","viewDocument","document","parentLink","_getSelectedLinkElement","_areActionsVisible","focusTracker","isFocused","focus","priority","_isUIVisible","emitter","activator","_isUIInPanel","contextElements","callback","_areActionsInPanel","position","_getBalloonPositionData","_isFormInPanel","disableCssTransitions","visibleView","select","enableCssTransitions","restoreManualDecoratorStates","undefined","_removeFormView","remove","_hideFakeVisualSelection","forceVisible","_showFakeVisualSelection","_addActionsView","showStack","_startUpdatingUI","stopListening","prevSelectedLink","prevSelectionParent","getSelectionParent","update","selectedLink","selectionParent","updatePosition","selection","getAncestors","reverse","find","node","is","hasView","target","markers","has","markerViewElements","Array","from","mapper","markerNameToElements","newRange","createRange","createPositionBefore","createPositionAfter","length","domConverter","viewRangeToDom","targetLink","range","getFirstRange","mapViewToDom","isCollapsed","findLinkElementAncestor","getFirstPosition","getTrimmed","startLink","start","endLink","end","createRangeIn","isEqual","change","writer","updateMarker","isAtEnd","startPosition","getLastMatchingPosition","item","schema","isContent","boundaries","addMarker","usingOperation","affectsData","removeMarker","ancestor"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/linkui\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { ClickObserver } from 'ckeditor5/src/engine';\nimport { ButtonView, ContextualBalloon, clickOutsideHandler } from 'ckeditor5/src/ui';\n\nimport LinkFormView from './ui/linkformview';\nimport LinkActionsView from './ui/linkactionsview';\nimport { addLinkProtocolIfApplicable, isLinkElement, LINK_KEYSTROKE } from './utils';\n\nimport linkIcon from '../theme/icons/link.svg';\n\nconst VISUAL_SELECTION_MARKER_NAME = 'link-ui';\n\n/**\n * The link UI plugin. It introduces the `'link'` and `'unlink'` buttons and support for the <kbd>Ctrl+K</kbd> keystroke.\n *\n * It uses the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class LinkUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ContextualBalloon ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'LinkUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\teditor.editing.view.addObserver( ClickObserver );\n\n\t\t/**\n\t\t * The actions view displayed inside of the balloon.\n\t\t *\n\t\t * @member {module:link/ui/linkactionsview~LinkActionsView}\n\t\t */\n\t\tthis.actionsView = this._createActionsView();\n\n\t\t/**\n\t\t * The form view displayed inside the balloon.\n\t\t *\n\t\t * @member {module:link/ui/linkformview~LinkFormView}\n\t\t */\n\t\tthis.formView = this._createFormView();\n\n\t\t/**\n\t\t * The contextual balloon plugin instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n\t\t */\n\t\tthis._balloon = editor.plugins.get( ContextualBalloon );\n\n\t\t// Create toolbar buttons.\n\t\tthis._createToolbarLinkButton();\n\n\t\t// Attach lifecycle actions to the the balloon.\n\t\tthis._enableUserBalloonInteractions();\n\n\t\t// Renders a fake visual selection marker on an expanded selection.\n\t\teditor.conversion.for( 'editingDowncast' ).markerToHighlight( {\n\t\t\tmodel: VISUAL_SELECTION_MARKER_NAME,\n\t\t\tview: {\n\t\t\t\tclasses: [ 'ck-fake-link-selection' ]\n\t\t\t}\n\t\t} );\n\n\t\t// Renders a fake visual selection marker on a collapsed selection.\n\t\teditor.conversion.for( 'editingDowncast' ).markerToElement( {\n\t\t\tmodel: VISUAL_SELECTION_MARKER_NAME,\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tclasses: [ 'ck-fake-link-selection', 'ck-fake-link-selection_collapsed' ]\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\t// Destroy created UI components as they are not automatically destroyed (see ckeditor5#1341).\n\t\tthis.formView.destroy();\n\t}\n\n\t/**\n\t * Creates the {@link module:link/ui/linkactionsview~LinkActionsView} instance.\n\t *\n\t * @private\n\t * @returns {module:link/ui/linkactionsview~LinkActionsView} The link actions view instance.\n\t */\n\t_createActionsView() {\n\t\tconst editor = this.editor;\n\t\tconst actionsView = new LinkActionsView( editor.locale );\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\t\tconst unlinkCommand = editor.commands.get( 'unlink' );\n\n\t\tactionsView.bind( 'href' ).to( linkCommand, 'value' );\n\t\tactionsView.editButtonView.bind( 'isEnabled' ).to( linkCommand );\n\t\tactionsView.unlinkButtonView.bind( 'isEnabled' ).to( unlinkCommand );\n\n\t\t// Execute unlink command after clicking on the \"Edit\" button.\n\t\tthis.listenTo( actionsView, 'edit', () => {\n\t\t\tthis._addFormView();\n\t\t} );\n\n\t\t// Execute unlink command after clicking on the \"Unlink\" button.\n\t\tthis.listenTo( actionsView, 'unlink', () => {\n\t\t\teditor.execute( 'unlink' );\n\t\t\tthis._hideUI();\n\t\t} );\n\n\t\t// Close the panel on esc key press when the **actions have focus**.\n\t\tactionsView.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._hideUI();\n\t\t\tcancel();\n\t\t} );\n\n\t\t// Open the form view on Ctrl+K when the **actions have focus**..\n\t\tactionsView.keystrokes.set( LINK_KEYSTROKE, ( data, cancel ) => {\n\t\t\tthis._addFormView();\n\t\t\tcancel();\n\t\t} );\n\n\t\treturn actionsView;\n\t}\n\n\t/**\n\t * Creates the {@link module:link/ui/linkformview~LinkFormView} instance.\n\t *\n\t * @private\n\t * @returns {module:link/ui/linkformview~LinkFormView} The link form view instance.\n\t */\n\t_createFormView() {\n\t\tconst editor = this.editor;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\t\tconst defaultProtocol = editor.config.get( 'link.defaultProtocol' );\n\n\t\tconst formView = new LinkFormView( editor.locale, linkCommand );\n\n\t\tformView.urlInputView.fieldView.bind( 'value' ).to( linkCommand, 'value' );\n\n\t\t// Form elements should be read-only when corresponding commands are disabled.\n\t\tformView.urlInputView.bind( 'isReadOnly' ).to( linkCommand, 'isEnabled', value => !value );\n\t\tformView.saveButtonView.bind( 'isEnabled' ).to( linkCommand );\n\n\t\t// Execute link command after clicking the \"Save\" button.\n\t\tthis.listenTo( formView, 'submit', () => {\n\t\t\tconst { value } = formView.urlInputView.fieldView.element;\n\t\t\tconst parsedUrl = addLinkProtocolIfApplicable( value, defaultProtocol );\n\t\t\teditor.execute( 'link', parsedUrl, formView.getDecoratorSwitchesState() );\n\t\t\tthis._closeFormView();\n\t\t} );\n\n\t\t// Hide the panel after clicking the \"Cancel\" button.\n\t\tthis.listenTo( formView, 'cancel', () => {\n\t\t\tthis._closeFormView();\n\t\t} );\n\n\t\t// Close the panel on esc key press when the **form has focus**.\n\t\tformView.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._closeFormView();\n\t\t\tcancel();\n\t\t} );\n\n\t\treturn formView;\n\t}\n\n\t/**\n\t * Creates a toolbar Link button. Clicking this button will show\n\t * a {@link #_balloon} attached to the selection.\n\t *\n\t * @private\n\t */\n\t_createToolbarLinkButton() {\n\t\tconst editor = this.editor;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\t\tconst t = editor.t;\n\n\t\t// Handle the `Ctrl+K` keystroke and show the panel.\n\t\teditor.keystrokes.set( LINK_KEYSTROKE, ( keyEvtData, cancel ) => {\n\t\t\t// Prevent focusing the search bar in FF, Chrome and Edge. See https://github.com/ckeditor/ckeditor5/issues/4811.\n\t\t\tcancel();\n\n\t\t\tif ( linkCommand.isEnabled ) {\n\t\t\t\tthis._showUI( true );\n\t\t\t}\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'link', locale => {\n\t\t\tconst button = new ButtonView( locale );\n\n\t\t\tbutton.isEnabled = true;\n\t\t\tbutton.label = t( 'Link' );\n\t\t\tbutton.icon = linkIcon;\n\t\t\tbutton.keystroke = LINK_KEYSTROKE;\n\t\t\tbutton.tooltip = true;\n\t\t\tbutton.isToggleable = true;\n\n\t\t\t// Bind button to the command.\n\t\t\tbutton.bind( 'isEnabled' ).to( linkCommand, 'isEnabled' );\n\t\t\tbutton.bind( 'isOn' ).to( linkCommand, 'value', value => !!value );\n\n\t\t\t// Show the panel on button click.\n\t\t\tthis.listenTo( button, 'execute', () => this._showUI( true ) );\n\n\t\t\treturn button;\n\t\t} );\n\t}\n\n\t/**\n\t * Attaches actions that control whether the balloon panel containing the\n\t * {@link #formView} is visible or not.\n\t *\n\t * @private\n\t */\n\t_enableUserBalloonInteractions() {\n\t\tconst viewDocument = this.editor.editing.view.document;\n\n\t\t// Handle click on view document and show panel when selection is placed inside the link element.\n\t\t// Keep panel open until selection will be inside the same link element.\n\t\tthis.listenTo( viewDocument, 'click', () => {\n\t\t\tconst parentLink = this._getSelectedLinkElement();\n\n\t\t\tif ( parentLink ) {\n\t\t\t\t// Then show panel but keep focus inside editor editable.\n\t\t\t\tthis._showUI();\n\t\t\t}\n\t\t} );\n\n\t\t// Focus the form if the balloon is visible and the Tab key has been pressed.\n\t\tthis.editor.keystrokes.set( 'Tab', ( data, cancel ) => {\n\t\t\tif ( this._areActionsVisible && !this.actionsView.focusTracker.isFocused ) {\n\t\t\t\tthis.actionsView.focus();\n\t\t\t\tcancel();\n\t\t\t}\n\t\t}, {\n\t\t\t// Use the high priority because the link UI navigation is more important\n\t\t\t// than other feature's actions, e.g. list indentation.\n\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/146\n\t\t\tpriority: 'high'\n\t\t} );\n\n\t\t// Close the panel on the Esc key press when the editable has focus and the balloon is visible.\n\t\tthis.editor.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tif ( this._isUIVisible ) {\n\t\t\t\tthis._hideUI();\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close on click outside of balloon panel element.\n\t\tclickOutsideHandler( {\n\t\t\temitter: this.formView,\n\t\t\tactivator: () => this._isUIInPanel,\n\t\t\tcontextElements: [ this._balloon.view.element ],\n\t\t\tcallback: () => this._hideUI()\n\t\t} );\n\t}\n\n\t/**\n\t * Adds the {@link #actionsView} to the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n\t_addActionsView() {\n\t\tif ( this._areActionsInPanel ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._balloon.add( {\n\t\t\tview: this.actionsView,\n\t\t\tposition: this._getBalloonPositionData()\n\t\t} );\n\t}\n\n\t/**\n\t * Adds the {@link #formView} to the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n\t_addFormView() {\n\t\tif ( this._isFormInPanel ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\n\t\tthis.formView.disableCssTransitions();\n\n\t\tthis._balloon.add( {\n\t\t\tview: this.formView,\n\t\t\tposition: this._getBalloonPositionData()\n\t\t} );\n\n\t\t// Select input when form view is currently visible.\n\t\tif ( this._balloon.visibleView === this.formView ) {\n\t\t\tthis.formView.urlInputView.fieldView.select();\n\t\t}\n\n\t\tthis.formView.enableCssTransitions();\n\n\t\t// Make sure that each time the panel shows up, the URL field remains in sync with the value of\n\t\t// the command. If the user typed in the input, then canceled the balloon (`urlInputView.fieldView#value` stays\n\t\t// unaltered) and re-opened it without changing the value of the link command (e.g. because they\n\t\t// clicked the same link), they would see the old value instead of the actual value of the command.\n\t\t// https://github.com/ckeditor/ckeditor5-link/issues/78\n\t\t// https://github.com/ckeditor/ckeditor5-link/issues/123\n\t\tthis.formView.urlInputView.fieldView.element.value = linkCommand.value || '';\n\t}\n\n\t/**\n\t * Closes the form view. Decides whether the balloon should be hidden completely or if the action view should be shown. This is\n\t * decided upon the link command value (which has a value if the document selection is in the link).\n\t *\n\t * Additionally, if any {@link module:link/link~LinkConfig#decorators} are defined in the editor configuration, the state of\n\t * switch buttons responsible for manual decorator handling is restored.\n\t *\n\t * @private\n\t */\n\t_closeFormView() {\n\t\tconst linkCommand = this.editor.commands.get( 'link' );\n\n\t\t// Restore manual decorator states to represent the current model state. This case is important to reset the switch buttons\n\t\t// when the user cancels the editing form.\n\t\tlinkCommand.restoreManualDecoratorStates();\n\n\t\tif ( linkCommand.value !== undefined ) {\n\t\t\tthis._removeFormView();\n\t\t} else {\n\t\t\tthis._hideUI();\n\t\t}\n\t}\n\n\t/**\n\t * Removes the {@link #formView} from the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n\t_removeFormView() {\n\t\tif ( this._isFormInPanel ) {\n\t\t\t// Blur the input element before removing it from DOM to prevent issues in some browsers.\n\t\t\t// See https://github.com/ckeditor/ckeditor5/issues/1501.\n\t\t\tthis.formView.saveButtonView.focus();\n\n\t\t\tthis._balloon.remove( this.formView );\n\n\t\t\t// Because the form has an input which has focus, the focus must be brought back\n\t\t\t// to the editor. Otherwise, it would be lost.\n\t\t\tthis.editor.editing.view.focus();\n\n\t\t\tthis._hideFakeVisualSelection();\n\t\t}\n\t}\n\n\t/**\n\t * Shows the correct UI type. It is either {@link #formView} or {@link #actionsView}.\n\t *\n\t * @param {Boolean} forceVisible\n\t * @private\n\t */\n\t_showUI( forceVisible = false ) {\n\t\t// When there's no link under the selection, go straight to the editing UI.\n\t\tif ( !this._getSelectedLinkElement() ) {\n\t\t\t// Show visual selection on a text without a link when the contextual balloon is displayed.\n\t\t\t// See https://github.com/ckeditor/ckeditor5/issues/4721.\n\t\t\tthis._showFakeVisualSelection();\n\n\t\t\tthis._addActionsView();\n\n\t\t\t// Be sure panel with link is visible.\n\t\t\tif ( forceVisible ) {\n\t\t\t\tthis._balloon.showStack( 'main' );\n\t\t\t}\n\n\t\t\tthis._addFormView();\n\t\t}\n\t\t// If there's a link under the selection...\n\t\telse {\n\t\t\t// Go to the editing UI if actions are already visible.\n\t\t\tif ( this._areActionsVisible ) {\n\t\t\t\tthis._addFormView();\n\t\t\t}\n\t\t\t// Otherwise display just the actions UI.\n\t\t\telse {\n\t\t\t\tthis._addActionsView();\n\t\t\t}\n\n\t\t\t// Be sure panel with link is visible.\n\t\t\tif ( forceVisible ) {\n\t\t\t\tthis._balloon.showStack( 'main' );\n\t\t\t}\n\t\t}\n\n\t\t// Begin responding to ui#update once the UI is added.\n\t\tthis._startUpdatingUI();\n\t}\n\n\t/**\n\t * Removes the {@link #formView} from the {@link #_balloon}.\n\t *\n\t * See {@link #_addFormView}, {@link #_addActionsView}.\n\t *\n\t * @protected\n\t */\n\t_hideUI() {\n\t\tif ( !this._isUIInPanel ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\n\t\tthis.stopListening( editor.ui, 'update' );\n\t\tthis.stopListening( this._balloon, 'change:visibleView' );\n\n\t\t// Make sure the focus always gets back to the editable _before_ removing the focused form view.\n\t\t// Doing otherwise causes issues in some browsers. See https://github.com/ckeditor/ckeditor5-link/issues/193.\n\t\teditor.editing.view.focus();\n\n\t\t// Remove form first because it's on top of the stack.\n\t\tthis._removeFormView();\n\n\t\t// Then remove the actions view because it's beneath the form.\n\t\tthis._balloon.remove( this.actionsView );\n\n\t\tthis._hideFakeVisualSelection();\n\t}\n\n\t/**\n\t * Makes the UI react to the {@link module:core/editor/editorui~EditorUI#event:update} event to\n\t * reposition itself when the editor UI should be refreshed.\n\t *\n\t * See: {@link #_hideUI} to learn when the UI stops reacting to the `update` event.\n\t *\n\t * @protected\n\t */\n\t_startUpdatingUI() {\n\t\tconst editor = this.editor;\n\t\tconst viewDocument = editor.editing.view.document;\n\n\t\tlet prevSelectedLink = this._getSelectedLinkElement();\n\t\tlet prevSelectionParent = getSelectionParent();\n\n\t\tconst update = () => {\n\t\t\tconst selectedLink = this._getSelectedLinkElement();\n\t\t\tconst selectionParent = getSelectionParent();\n\n\t\t\t// Hide the panel if:\n\t\t\t//\n\t\t\t// * the selection went out of the EXISTING link element. E.g. user moved the caret out\n\t\t\t//   of the link,\n\t\t\t// * the selection went to a different parent when creating a NEW link. E.g. someone\n\t\t\t//   else modified the document.\n\t\t\t// * the selection has expanded (e.g. displaying link actions then pressing SHIFT+Right arrow).\n\t\t\t//\n\t\t\t// Note: #_getSelectedLinkElement will return a link for a non-collapsed selection only\n\t\t\t// when fully selected.\n\t\t\tif ( ( prevSelectedLink && !selectedLink ) ||\n\t\t\t\t( !prevSelectedLink && selectionParent !== prevSelectionParent ) ) {\n\t\t\t\tthis._hideUI();\n\t\t\t}\n\t\t\t// Update the position of the panel when:\n\t\t\t//  * link panel is in the visible stack\n\t\t\t//  * the selection remains in the original link element,\n\t\t\t//  * there was no link element in the first place, i.e. creating a new link\n\t\t\telse if ( this._isUIVisible ) {\n\t\t\t\t// If still in a link element, simply update the position of the balloon.\n\t\t\t\t// If there was no link (e.g. inserting one), the balloon must be moved\n\t\t\t\t// to the new position in the editing view (a new native DOM range).\n\t\t\t\tthis._balloon.updatePosition( this._getBalloonPositionData() );\n\t\t\t}\n\n\t\t\tprevSelectedLink = selectedLink;\n\t\t\tprevSelectionParent = selectionParent;\n\t\t};\n\n\t\tfunction getSelectionParent() {\n\t\t\treturn viewDocument.selection.focus.getAncestors()\n\t\t\t\t.reverse()\n\t\t\t\t.find( node => node.is( 'element' ) );\n\t\t}\n\n\t\tthis.listenTo( editor.ui, 'update', update );\n\t\tthis.listenTo( this._balloon, 'change:visibleView', update );\n\t}\n\n\t/**\n\t * Returns `true` when {@link #formView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _isFormInPanel() {\n\t\treturn this._balloon.hasView( this.formView );\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _areActionsInPanel() {\n\t\treturn this._balloon.hasView( this.actionsView );\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} is in the {@link #_balloon} and it is\n\t * currently visible.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _areActionsVisible() {\n\t\treturn this._balloon.visibleView === this.actionsView;\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _isUIInPanel() {\n\t\treturn this._isFormInPanel || this._areActionsInPanel;\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon} and it is\n\t * currently visible.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _isUIVisible() {\n\t\tconst visibleView = this._balloon.visibleView;\n\n\t\treturn visibleView == this.formView || this._areActionsVisible;\n\t}\n\n\t/**\n\t * Returns positioning options for the {@link #_balloon}. They control the way the balloon is attached\n\t * to the target element or selection.\n\t *\n\t * If the selection is collapsed and inside a link element, the panel will be attached to the\n\t * entire link element. Otherwise, it will be attached to the selection.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n\t_getBalloonPositionData() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst model = this.editor.model;\n\t\tconst viewDocument = view.document;\n\t\tlet target = null;\n\n\t\tif ( model.markers.has( VISUAL_SELECTION_MARKER_NAME ) ) {\n\t\t\t// There are cases when we highlight selection using a marker (#7705, #4721).\n\t\t\tconst markerViewElements = Array.from( this.editor.editing.mapper.markerNameToElements( VISUAL_SELECTION_MARKER_NAME ) );\n\t\t\tconst newRange = view.createRange(\n\t\t\t\tview.createPositionBefore( markerViewElements[ 0 ] ),\n\t\t\t\tview.createPositionAfter( markerViewElements[ markerViewElements.length - 1 ] )\n\t\t\t);\n\n\t\t\ttarget = view.domConverter.viewRangeToDom( newRange );\n\t\t} else {\n\t\t\tconst targetLink = this._getSelectedLinkElement();\n\t\t\tconst range = viewDocument.selection.getFirstRange();\n\n\t\t\ttarget = targetLink ?\n\t\t\t\t// When selection is inside link element, then attach panel to this element.\n\t\t\t\tview.domConverter.mapViewToDom( targetLink ) :\n\t\t\t\t// Otherwise attach panel to the selection.\n\t\t\t\tview.domConverter.viewRangeToDom( range );\n\t\t}\n\n\t\treturn { target };\n\t}\n\n\t/**\n\t * Returns the link {@link module:engine/view/attributeelement~AttributeElement} under\n\t * the {@link module:engine/view/document~Document editing view's} selection or `null`\n\t * if there is none.\n\t *\n\t * **Note**: For a non–collapsed selection, the link element is only returned when **fully**\n\t * selected and the **only** element within the selection boundaries.\n\t *\n\t * @private\n\t * @returns {module:engine/view/attributeelement~AttributeElement|null}\n\t */\n\t_getSelectedLinkElement() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst selection = view.document.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn findLinkElementAncestor( selection.getFirstPosition() );\n\t\t} else {\n\t\t\t// The range for fully selected link is usually anchored in adjacent text nodes.\n\t\t\t// Trim it to get closer to the actual link element.\n\t\t\tconst range = selection.getFirstRange().getTrimmed();\n\t\t\tconst startLink = findLinkElementAncestor( range.start );\n\t\t\tconst endLink = findLinkElementAncestor( range.end );\n\n\t\t\tif ( !startLink || startLink != endLink ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Check if the link element is fully selected.\n\t\t\tif ( view.createRangeIn( startLink ).getTrimmed().isEqual( range ) ) {\n\t\t\t\treturn startLink;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Displays a fake visual selection when the contextual balloon is displayed.\n\t *\n\t * This adds a 'link-ui' marker into the document that is rendered as a highlight on selected text fragment.\n\t *\n\t * @private\n\t */\n\t_showFakeVisualSelection() {\n\t\tconst model = this.editor.model;\n\n\t\tmodel.change( writer => {\n\t\t\tconst range = model.document.selection.getFirstRange();\n\n\t\t\tif ( model.markers.has( VISUAL_SELECTION_MARKER_NAME ) ) {\n\t\t\t\twriter.updateMarker( VISUAL_SELECTION_MARKER_NAME, { range } );\n\t\t\t} else {\n\t\t\t\tif ( range.start.isAtEnd ) {\n\t\t\t\t\tconst startPosition = range.start.getLastMatchingPosition(\n\t\t\t\t\t\t( { item } ) => !model.schema.isContent( item ),\n\t\t\t\t\t\t{ boundaries: range }\n\t\t\t\t\t);\n\n\t\t\t\t\twriter.addMarker( VISUAL_SELECTION_MARKER_NAME, {\n\t\t\t\t\t\tusingOperation: false,\n\t\t\t\t\t\taffectsData: false,\n\t\t\t\t\t\trange: writer.createRange( startPosition, range.end )\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\twriter.addMarker( VISUAL_SELECTION_MARKER_NAME, {\n\t\t\t\t\t\tusingOperation: false,\n\t\t\t\t\t\taffectsData: false,\n\t\t\t\t\t\trange\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Hides the fake visual selection created in {@link #_showFakeVisualSelection}.\n\t *\n\t * @private\n\t */\n\t_hideFakeVisualSelection() {\n\t\tconst model = this.editor.model;\n\n\t\tif ( model.markers.has( VISUAL_SELECTION_MARKER_NAME ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.removeMarker( VISUAL_SELECTION_MARKER_NAME );\n\t\t\t} );\n\t\t}\n\t}\n}\n\n// Returns a link element if there's one among the ancestors of the provided `Position`.\n//\n// @private\n// @param {module:engine/view/position~Position} View position to analyze.\n// @returns {module:engine/view/attributeelement~AttributeElement|null} Link element at the position or null.\nfunction findLinkElementAncestor( position ) {\n\treturn position.getAncestors().find( ancestor => isLinkElement( ancestor ) );\n}\n"]}]}