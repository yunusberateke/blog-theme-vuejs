{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/viewcollection.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/viewcollection.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/viewcollection.js"],"names":["CKEditorError","Collection","ViewCollection","initialItems","idProperty","on","evt","view","index","_renderViewIntoCollectionParent","element","_parentElement","remove","map","destroy","elementOrDocFragment","events","length","isStringArray","to","dest","evtName","delegate","stopDelegating","isRendered","render","insertBefore","children","arr","every","a"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/viewcollection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\n/**\n * Collects {@link module:ui/view~View} instances.\n *\n *\t\tconst parentView = new ParentView( locale );\n *\t\tconst collection = new ViewCollection( locale );\n *\n *\t\tcollection.setParent( parentView.element );\n *\n *\t\tconst viewA = new ChildView( locale );\n *\t\tconst viewB = new ChildView( locale );\n *\n * View collection renders and manages view {@link module:ui/view~View#element elements}:\n *\n *\t\tcollection.add( viewA );\n *\t\tcollection.add( viewB );\n *\n *\t\tconsole.log( parentView.element.firsChild ); // -> viewA.element\n *\t\tconsole.log( parentView.element.lastChild ); // -> viewB.element\n *\n * It {@link module:ui/viewcollection~ViewCollection#delegate propagates} DOM events too:\n *\n *\t\t// Delegate #click and #keydown events from viewA and viewB to the parentView.\n *\t\tcollection.delegate( 'click' ).to( parentView );\n *\n *\t\tparentView.on( 'click', ( evt ) => {\n *\t\t\tconsole.log( `${ evt.source } has been clicked.` );\n *\t\t} );\n *\n *\t\t// This event will be delegated to the parentView.\n *\t\tviewB.fire( 'click' );\n *\n * **Note**: A view collection can be used directly in the {@link module:ui/template~TemplateDefinition definition}\n * of a {@link module:ui/template~Template template}.\n *\n * @extends module:utils/collection~Collection\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class ViewCollection extends Collection {\n\t/**\n\t * Creates a new instance of the {@link module:ui/viewcollection~ViewCollection}.\n\t *\n\t * @param {Iterable.<module:ui/view~View>} [initialItems] The initial items of the collection.\n\t */\n\tconstructor( initialItems = [] ) {\n\t\tsuper( initialItems, {\n\t\t\t// An #id Number attribute should be legal and not break the `ViewCollection` instance.\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/93\n\t\t\tidProperty: 'viewUid'\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\n\t\tthis.on( 'add', ( evt, view, index ) => {\n\t\t\tthis._renderViewIntoCollectionParent( view, index );\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\n\t\tthis.on( 'remove', ( evt, view ) => {\n\t\t\tif ( view.element && this._parentElement ) {\n\t\t\t\tview.element.remove();\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A parent element within which child views are rendered and managed in DOM.\n\t\t *\n\t\t * @protected\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis._parentElement = null;\n\t}\n\n\t/**\n\t * Destroys the view collection along with child views.\n\t * See the view {@link module:ui/view~View#destroy} method.\n\t */\n\tdestroy() {\n\t\tthis.map( view => view.destroy() );\n\t}\n\n\t/**\n\t * Sets the parent HTML element of this collection. When parent is set, {@link #add adding} and\n\t * {@link #remove removing} views in the collection synchronizes their\n\t * {@link module:ui/view~View#element elements} in the parent element.\n\t *\n\t * @param {HTMLElement} element A new parent element.\n\t */\n\tsetParent( elementOrDocFragment ) {\n\t\tthis._parentElement = elementOrDocFragment;\n\n\t\t// Take care of the initial collection items passed to the constructor.\n\t\tfor ( const view of this ) {\n\t\t\tthis._renderViewIntoCollectionParent( view );\n\t\t}\n\t}\n\n\t/**\n\t * Delegates selected events coming from within views in the collection to any\n\t * {@link module:utils/emittermixin~Emitter}.\n\t *\n\t * For the following views and collection:\n\t *\n\t *\t\tconst viewA = new View();\n\t *\t\tconst viewB = new View();\n\t *\t\tconst viewC = new View();\n\t *\n\t *\t\tconst views = parentView.createCollection();\n\t *\n\t *\t\tviews.delegate( 'eventX' ).to( viewB );\n\t *\t\tviews.delegate( 'eventX', 'eventY' ).to( viewC );\n\t *\n\t *\t\tviews.add( viewA );\n\t *\n\t * the `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\n\t *\n\t *\t\tviewA.fire( 'eventX', customData );\n\t *\n\t * and `eventY` is delegated (fired by) `viewC` along with `customData`:\n\t *\n\t *\t\tviewA.fire( 'eventY', customData );\n\t *\n\t * See {@link module:utils/emittermixin~Emitter#delegate}.\n\t *\n\t * @param {...String} events {@link module:ui/view~View} event names to be delegated to another\n\t * {@link module:utils/emittermixin~Emitter}.\n\t * @returns {Object}\n\t * @returns {Function} return.to A function which accepts the destination of\n\t * {@link module:utils/emittermixin~Emitter#delegate delegated} events.\n\t */\n\tdelegate( ...events ) {\n\t\tif ( !events.length || !isStringArray( events ) ) {\n\t\t\t/**\n\t\t\t * All event names must be strings.\n\t\t\t *\n\t\t\t * @error ui-viewcollection-delegate-wrong-events\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-viewcollection-delegate-wrong-events',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Selects destination for {@link module:utils/emittermixin~Emitter#delegate} events.\n\t\t\t *\n\t\t\t * @memberOf module:ui/viewcollection~ViewCollection#delegate\n\t\t\t * @function module:ui/viewcollection~ViewCollection#delegate.to\n\t\t\t * @param {module:utils/emittermixin~Emitter} dest An `Emitter` instance which is\n\t\t\t * the destination for delegated events.\n\t\t\t */\n\t\t\tto: dest => {\n\t\t\t\t// Activate delegating on existing views in this collection.\n\t\t\t\tfor ( const view of this ) {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Activate delegating on future views in this collection.\n\t\t\t\tthis.on( 'add', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t// Deactivate delegating when view is removed from this collection.\n\t\t\t\tthis.on( 'remove', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.stopDelegating( evtName, dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * This method {@link module:ui/view~View#render renders} a new view added to the collection.\n\t *\n\t * If the {@link #_parentElement parent element} of the collection is set, this method also adds\n\t * the view's {@link module:ui/view~View#element} as a child of the parent in DOM at a specified index.\n\t *\n\t * **Note**: If index is not specified, the view's element is pushed as the last child\n\t * of the parent element.\n\t *\n\t * @private\n\t * @param {module:ui/view~View} view A new view added to the collection.\n\t * @param {Number} [index] An index the view holds in the collection. When not specified,\n\t * the view is added at the end.\n\t */\n\t_renderViewIntoCollectionParent( view, index ) {\n\t\tif ( !view.isRendered ) {\n\t\t\tview.render();\n\t\t}\n\n\t\tif ( view.element && this._parentElement ) {\n\t\t\tthis._parentElement.insertBefore( view.element, this._parentElement.children[ index ] );\n\t\t}\n\t}\n\n\t/**\n\t * Removes a child view from the collection. If the {@link #setParent parent element} of the\n\t * collection has been set, the {@link module:ui/view~View#element element} of the view is also removed\n\t * in DOM, reflecting the order of the collection.\n\t *\n\t * See the {@link #add} method.\n\t *\n\t * @method #remove\n\t * @param {module:ui/view~View|Number|String} subject The view to remove, its id or index in the collection.\n\t * @returns {Object} The removed view.\n\t */\n}\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray( arr ) {\n\treturn arr.every( a => typeof a == 'string' );\n}\n"]}]}