{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js"],"names":["documentPlaceholders","WeakMap","enablePlaceholder","options","view","element","text","isDirectHost","keepOnFocus","doc","document","has","set","Map","registerPostFixer","writer","updateDocumentPlaceholders","get","hostElement","change","disablePlaceholder","placeholders","config","removeAttribute","hidePlaceholder","delete","showPlaceholder","hasClass","addClass","removeClass","needsPlaceholder","isAttached","hasContent","Array","from","getChildren","some","is","isFocused","viewSelection","selection","selectionAnchor","anchor","parent","directHostElements","wasViewModified","push","updatePlaceholder","getChildPlaceholderHostSubstitute","includes","getAttribute","setAttribute","isOnlyChild","childCount","firstChild","getChild"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/placeholder\n */\n\nimport '../../theme/placeholder.css';\n\n// Each document stores information about its placeholder elements and check functions.\nconst documentPlaceholders = new WeakMap();\n\n/**\n * A helper that enables a placeholder on the provided view element (also updates its visibility).\n * The placeholder is a CSS pseudo–element (with a text content) attached to the element.\n *\n * To change the placeholder text, simply call this method again with new options.\n *\n * To disable the placeholder, use {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} helper.\n *\n * @param {Object} [options] Configuration options of the placeholder.\n * @param {module:engine/view/view~View} options.view Editing view instance.\n * @param {module:engine/view/element~Element} options.element Element that will gain a placeholder.\n * See `options.isDirectHost` to learn more.\n * @param {String} options.text Placeholder text.\n * @param {Boolean} [options.isDirectHost=true] If set `false`, the placeholder will not be enabled directly\n * in the passed `element` but in one of its children (selected automatically, i.e. a first empty child element).\n * Useful when attaching placeholders to elements that can host other elements (not just text), for instance,\n * editable root elements.\n * @param {Boolean} [options.keepOnFocus=false] If set `true`, the placeholder stay visible when the host element is focused.\n */\nexport function enablePlaceholder( options ) {\n\tconst { view, element, text, isDirectHost = true, keepOnFocus = false } = options;\n\tconst doc = view.document;\n\n\t// Use a single a single post fixer per—document to update all placeholders.\n\tif ( !documentPlaceholders.has( doc ) ) {\n\t\tdocumentPlaceholders.set( doc, new Map() );\n\n\t\t// If a post-fixer callback makes a change, it should return `true` so other post–fixers\n\t\t// can re–evaluate the document again.\n\t\tdoc.registerPostFixer( writer => updateDocumentPlaceholders( doc, writer ) );\n\t}\n\n\t// Store information about the element placeholder under its document.\n\tdocumentPlaceholders.get( doc ).set( element, {\n\t\ttext,\n\t\tisDirectHost,\n\t\tkeepOnFocus,\n\t\thostElement: isDirectHost ? element : null\n\t} );\n\n\t// Update the placeholders right away.\n\tview.change( writer => updateDocumentPlaceholders( doc, writer ) );\n}\n\n/**\n * Disables the placeholder functionality from a given element.\n *\n * See {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} to learn more.\n *\n * @param {module:engine/view/view~View} view\n * @param {module:engine/view/element~Element} element\n */\nexport function disablePlaceholder( view, element ) {\n\tconst doc = element.document;\n\n\tview.change( writer => {\n\t\tif ( !documentPlaceholders.has( doc ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst placeholders = documentPlaceholders.get( doc );\n\t\tconst config = placeholders.get( element );\n\n\t\twriter.removeAttribute( 'data-placeholder', config.hostElement );\n\t\thidePlaceholder( writer, config.hostElement );\n\n\t\tplaceholders.delete( element );\n\t} );\n}\n\n/**\n * Shows a placeholder in the provided element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * **Note**: This helper will blindly show the placeholder directly in the root editable element if\n * one is passed, which could result in a visual clash if the editable element has some children\n * (for instance, an empty paragraph). Use {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`}\n * in that case or make sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function showPlaceholder( writer, element ) {\n\tif ( !element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.addClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Hides a placeholder in the element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function hidePlaceholder( writer, element ) {\n\tif ( element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.removeClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Checks if a placeholder should be displayed in the element.\n *\n * **Note**: This helper will blindly check the possibility of showing a placeholder directly in the\n * root editable element if one is passed, which may not be the expected result. If an element can\n * host other elements (not just text), most likely one of its children should be checked instead\n * because it will be the final host for the placeholder. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} in that case or make\n * sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/element~Element} element Element that holds the placeholder.\n * @param {Boolean} keepOnFocus Focusing the element will keep the placeholder visible.\n * @returns {Boolean}\n */\nexport function needsPlaceholder( element, keepOnFocus ) {\n\tif ( !element.isAttached() ) {\n\t\treturn false;\n\t}\n\n\t// Anything but uiElement(s) counts as content.\n\tconst hasContent = Array.from( element.getChildren() )\n\t\t.some( element => !element.is( 'uiElement' ) );\n\n\tif ( hasContent ) {\n\t\treturn false;\n\t}\n\n\t// Skip the focus check and make the placeholder visible already regardless of document focus state.\n\tif ( keepOnFocus ) {\n\t\treturn true;\n\t}\n\n\tconst doc = element.document;\n\n\t// If the document is blurred.\n\tif ( !doc.isFocused ) {\n\t\treturn true;\n\t}\n\n\tconst viewSelection = doc.selection;\n\tconst selectionAnchor = viewSelection.anchor;\n\n\t// If document is focused and the element is empty but the selection is not anchored inside it.\n\treturn selectionAnchor && selectionAnchor.parent !== element;\n}\n\n// Updates all placeholders associated with a document in a post–fixer callback.\n//\n// @private\n// @param { module:engine/view/document~Document} doc\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updateDocumentPlaceholders( doc, writer ) {\n\tconst placeholders = documentPlaceholders.get( doc );\n\tconst directHostElements = [];\n\tlet wasViewModified = false;\n\n\t// First set placeholders on the direct hosts.\n\tfor ( const [ element, config ] of placeholders ) {\n\t\tif ( config.isDirectHost ) {\n\t\t\tdirectHostElements.push( element );\n\n\t\t\tif ( updatePlaceholder( writer, element, config ) ) {\n\t\t\t\twasViewModified = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then set placeholders on the indirect hosts but only on those that does not already have an direct host placeholder.\n\tfor ( const [ element, config ] of placeholders ) {\n\t\tif ( config.isDirectHost ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst hostElement = getChildPlaceholderHostSubstitute( element );\n\n\t\t// When not a direct host, it could happen that there is no child element\n\t\t// capable of displaying a placeholder.\n\t\tif ( !hostElement ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Don't override placeholder if the host element already has some direct placeholder.\n\t\tif ( directHostElements.includes( hostElement ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Update the host element (used for setting and removing the placeholder).\n\t\tconfig.hostElement = hostElement;\n\n\t\tif ( updatePlaceholder( writer, element, config ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t}\n\n\treturn wasViewModified;\n}\n\n// Updates a single placeholder in a post–fixer callback.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:engine/view/element~Element} element\n// @param {Object} config Configuration of the placeholder\n// @param {String} config.text\n// @param {Boolean} config.isDirectHost\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updatePlaceholder( writer, element, config ) {\n\tconst { text, isDirectHost, hostElement } = config;\n\n\tlet wasViewModified = false;\n\n\t// This may be necessary when updating the placeholder text to something else.\n\tif ( hostElement.getAttribute( 'data-placeholder' ) !== text ) {\n\t\twriter.setAttribute( 'data-placeholder', text, hostElement );\n\t\twasViewModified = true;\n\t}\n\n\t// If the host element is not a direct host then placeholder is needed only when there is only one element.\n\tconst isOnlyChild = isDirectHost || element.childCount == 1;\n\n\tif ( isOnlyChild && needsPlaceholder( hostElement, config.keepOnFocus ) ) {\n\t\tif ( showPlaceholder( writer, hostElement ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t} else if ( hidePlaceholder( writer, hostElement ) ) {\n\t\twasViewModified = true;\n\t}\n\n\treturn wasViewModified;\n}\n\n// Gets a child element capable of displaying a placeholder if a parent element can host more\n// than just text (for instance, when it is a root editable element). The child element\n// can then be used in other placeholder helpers as a substitute of its parent.\n//\n// @private\n// @param {module:engine/view/element~Element} parent\n// @returns {module:engine/view/element~Element|null}\nfunction getChildPlaceholderHostSubstitute( parent ) {\n\tif ( parent.childCount ) {\n\t\tconst firstChild = parent.getChild( 0 );\n\n\t\tif ( firstChild.is( 'element' ) && !firstChild.is( 'uiElement' ) ) {\n\t\t\treturn firstChild;\n\t\t}\n\t}\n\n\treturn null;\n}\n"]}]}