{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/diff.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/diff.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwoKLyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDIxLCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHV0aWxzL2RpZmYKICovCmltcG9ydCBmYXN0RGlmZiBmcm9tICcuLi9zcmMvZmFzdGRpZmYnOyAvLyBUaGUgZm9sbG93aW5nIGNvZGUgaXMgYmFzZWQgb24gdGhlICJPKE5QKSBTZXF1ZW5jZSBDb21wYXJpc29uIEFsZ29yaXRobSIKLy8gYnkgU3VuIFd1LCBVZGkgTWFuYmVyLCBHZW5lIE15ZXJzLCBXZWJiIE1pbGxlci4KCi8qKgogKiBDYWxjdWxhdGVzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdHdvIGFycmF5cyBvciBzdHJpbmdzIHByb2R1Y2luZyBhbiBhcnJheSBjb250YWluaW5nIGEgbGlzdCBvZiBjaGFuZ2VzCiAqIG5lY2Vzc2FyeSB0byB0cmFuc2Zvcm0gaW5wdXQgaW50byBvdXRwdXQuCiAqCiAqCQlkaWZmKCAnYWJhJywgJ2FjY2EnICk7IC8vIFsgJ2VxdWFsJywgJ2luc2VydCcsICdpbnNlcnQnLCAnZGVsZXRlJywgJ2VxdWFsJyBdCiAqCiAqIFRoaXMgZnVuY3Rpb24gaXMgYmFzZWQgb24gdGhlICJPKE5QKSBTZXF1ZW5jZSBDb21wYXJpc29uIEFsZ29yaXRobSIgYnkgU3VuIFd1LCBVZGkgTWFuYmVyLCBHZW5lIE15ZXJzLCBXZWJiIE1pbGxlci4KICogVW5mb3J0dW5hdGVseSwgd2hpbGUgaXQgZ2l2ZXMgdGhlIG1vc3QgcHJlY2lzZSByZXN1bHRzLCBpdHMgdG8gY29tcGxleCBmb3IgbG9uZ2VyIHN0cmluZ3MvYXJyb3cgKGFib3ZlIDIwMCBpdGVtcykuCiAqIFRoZXJlZm9yZSwgYGRpZmYoKWAgYXV0b21hdGljYWxseSBzd2l0Y2hlcyB0byB7QGxpbmsgbW9kdWxlOnV0aWxzL2Zhc3RkaWZmfmZhc3REaWZmIGBmYXN0RGlmZigpYH0gd2hlbiBkZXRlY3RpbmcKICogc3VjaCBhIHNjZW5hcmlvLiBUaGUgcmV0dXJuIGZvcm1hdHMgb2YgYm90aCBmdW5jdGlvbnMgYXJlIGlkZW50aWNhbC4KICoKICogQHBhcmFtIHtBcnJheXxTdHJpbmd9IGEgSW5wdXQgYXJyYXkgb3Igc3RyaW5nLgogKiBAcGFyYW0ge0FycmF5fFN0cmluZ30gYiBPdXRwdXQgYXJyYXkgb3Igc3RyaW5nLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY21wXSBPcHRpb25hbCBmdW5jdGlvbiB1c2VkIHRvIGNvbXBhcmUgYXJyYXkgdmFsdWVzLCBieSBkZWZhdWx0ID09PSBpcyB1c2VkLgogKiBAcmV0dXJucyB7QXJyYXl9IEFycmF5IG9mIGNoYW5nZXMuCiAqLwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGlmZihhLCBiLCBjbXApIHsKICAvLyBTZXQgdGhlIGNvbXBhcmF0b3IgZnVuY3Rpb24uCiAgY21wID0gY21wIHx8IGZ1bmN0aW9uIChhLCBiKSB7CiAgICByZXR1cm4gYSA9PT0gYjsKICB9OwoKICB2YXIgYUxlbmd0aCA9IGEubGVuZ3RoOwogIHZhciBiTGVuZ3RoID0gYi5sZW5ndGg7IC8vIFBlcmZvcm0gYGZhc3REaWZmYCBmb3IgbG9uZ2VyIHN0cmluZ3MvYXJyYXlzIChzZWUgIzI2OSkuCgogIGlmIChhTGVuZ3RoID4gMjAwIHx8IGJMZW5ndGggPiAyMDAgfHwgYUxlbmd0aCArIGJMZW5ndGggPiAzMDApIHsKICAgIHJldHVybiBkaWZmLmZhc3REaWZmKGEsIGIsIGNtcCwgdHJ1ZSk7CiAgfSAvLyBUZW1wb3JhcnkgYWN0aW9uIHR5cGUgc3RhdGljcy4KCgogIHZhciBfaW5zZXJ0LCBfZGVsZXRlOyAvLyBTd2FwcGVkIHRoZSBhcnJheXMgdG8gdXNlIHRoZSBzaG9ydGVyIG9uZSBhcyB0aGUgZmlyc3Qgb25lLgoKCiAgaWYgKGJMZW5ndGggPCBhTGVuZ3RoKSB7CiAgICB2YXIgdG1wID0gYTsKICAgIGEgPSBiOwogICAgYiA9IHRtcDsgLy8gV2Ugc3dhcCB0aGUgYWN0aW9uIHR5cGVzIGFzIHdlbGwuCgogICAgX2luc2VydCA9ICdkZWxldGUnOwogICAgX2RlbGV0ZSA9ICdpbnNlcnQnOwogIH0gZWxzZSB7CiAgICBfaW5zZXJ0ID0gJ2luc2VydCc7CiAgICBfZGVsZXRlID0gJ2RlbGV0ZSc7CiAgfQoKICB2YXIgbSA9IGEubGVuZ3RoOwogIHZhciBuID0gYi5sZW5ndGg7CiAgdmFyIGRlbHRhID0gbiAtIG07IC8vIEVkaXQgc2NyaXB0cywgZm9yIGVhY2ggZGlhZ29uYWwuCgogIHZhciBlcyA9IHt9OyAvLyBGdXJ0aGVzdCBwb2ludHMsIHRoZSBmdXJ0aGVzdCB5IHdlIGNhbiBnZXQgb24gZWFjaCBkaWFnb25hbC4KCiAgdmFyIGZwID0ge307CgogIGZ1bmN0aW9uIHNuYWtlKGspIHsKICAgIC8vIFdlIHVzZSAtMSBhcyBhbiBhbHRlcm5hdGl2ZSBiZWxvdyB0byBoYW5kbGUgaW5pdGlhbCB2YWx1ZXMgKCBpbnN0ZWFkIG9mIGZpbGxpbmcgdGhlIGZwIHdpdGggLTEgZmlyc3QgKS4KICAgIC8vIEZ1cnRoZXN0IHBvaW50cyAoeSkgb24gdGhlIGRpYWdvbmFsIGJlbG93IGsuCiAgICB2YXIgeTEgPSAoZnBbayAtIDFdICE9PSB1bmRlZmluZWQgPyBmcFtrIC0gMV0gOiAtMSkgKyAxOyAvLyBGdXJ0aGVzdCBwb2ludHMgKHkpIG9uIHRoZSBkaWFnb25hbCBhYm92ZSBrLgoKICAgIHZhciB5MiA9IGZwW2sgKyAxXSAhPT0gdW5kZWZpbmVkID8gZnBbayArIDFdIDogLTE7IC8vIFRoZSB3YXkgd2Ugc2hvdWxkIGdvIHRvIGdldCBmdXJ0aGVyLgoKICAgIHZhciBkaXIgPSB5MSA+IHkyID8gLTEgOiAxOyAvLyBDbG9uZSBwcmV2aW91cyBjaGFuZ2VzIGFycmF5IChpZiBhbnkpLgoKICAgIGlmIChlc1trICsgZGlyXSkgewogICAgICBlc1trXSA9IGVzW2sgKyBkaXJdLnNsaWNlKDApOwogICAgfSAvLyBDcmVhdGUgY2hhbmdlcyBhcnJheS4KCgogICAgaWYgKCFlc1trXSkgewogICAgICBlc1trXSA9IFtdOwogICAgfSAvLyBQdXNoIHRoZSBhY3Rpb24uCgoKICAgIGVzW2tdLnB1c2goeTEgPiB5MiA/IF9pbnNlcnQgOiBfZGVsZXRlKTsgLy8gU2V0IHRoZSBiZWdpbm5pbmcgY29vcmRpbmF0ZXMuCgogICAgdmFyIHkgPSBNYXRoLm1heCh5MSwgeTIpOwogICAgdmFyIHggPSB5IC0gazsgLy8gVHJhdmVyc2UgdGhlIGRpYWdvbmFsIGFzIGxvbmcgYXMgdGhlIHZhbHVlcyBtYXRjaC4KCiAgICB3aGlsZSAoeCA8IG0gJiYgeSA8IG4gJiYgY21wKGFbeF0sIGJbeV0pKSB7CiAgICAgIHgrKzsKICAgICAgeSsrOyAvLyBQdXNoIG5vIGNoYW5nZSBhY3Rpb24uCgogICAgICBlc1trXS5wdXNoKCdlcXVhbCcpOwogICAgfQoKICAgIHJldHVybiB5OwogIH0KCiAgdmFyIHAgPSAwOwogIHZhciBrOyAvLyBUcmF2ZXJzZSB0aGUgZ3JhcGggdW50aWwgd2UgcmVhY2ggdGhlIGVuZCBvZiB0aGUgbG9uZ2VyIHN0cmluZy4KCiAgZG8gewogICAgLy8gVXBkYXRlcyBmdXJ0aGVzdCBwb2ludHMgYW5kIGVkaXQgc2NyaXB0cyBmb3IgZGlhZ29uYWxzIGJlbG93IGRlbHRhLgogICAgZm9yIChrID0gLXA7IGsgPCBkZWx0YTsgaysrKSB7CiAgICAgIGZwW2tdID0gc25ha2Uoayk7CiAgICB9IC8vIFVwZGF0ZXMgZnVydGhlc3QgcG9pbnRzIGFuZCBlZGl0IHNjcmlwdHMgZm9yIGRpYWdvbmFscyBhYm92ZSBkZWx0YS4KCgogICAgZm9yIChrID0gZGVsdGEgKyBwOyBrID4gZGVsdGE7IGstLSkgewogICAgICBmcFtrXSA9IHNuYWtlKGspOwogICAgfSAvLyBVcGRhdGVzIGZ1cnRoZXN0IHBvaW50IGFuZCBlZGl0IHNjcmlwdCBmb3IgdGhlIGRlbHRhIGRpYWdvbmFsLgogICAgLy8gbm90ZSB0aGF0IHRoZSBkZWx0YSBkaWFnb25hbCBpcyB0aGUgb25lIHdoaWNoIGdvZXMgdGhyb3VnaCB0aGUgc2luayAobSwgbikuCgoKICAgIGZwW2RlbHRhXSA9IHNuYWtlKGRlbHRhKTsKICAgIHArKzsKICB9IHdoaWxlIChmcFtkZWx0YV0gIT09IG4pOyAvLyBSZXR1cm4gdGhlIGZpbmFsIGxpc3Qgb2YgZWRpdCBjaGFuZ2VzLgogIC8vIFdlIHJlbW92ZSB0aGUgZmlyc3QgaXRlbSB0aGF0IHJlcHJlc2VudHMgdGhlIGFjdGlvbiBmb3IgdGhlIGluamVjdGVkIG51bGxzLgoKCiAgcmV0dXJuIGVzW2RlbHRhXS5zbGljZSgxKTsKfSAvLyBTdG9yZSB0aGUgQVBJIGluIHN0YXRpYyBwcm9wZXJ0eSB0byBlYXNpbHkgb3ZlcndyaXRlIGl0IGluIHRlc3RzLgovLyBUb28gYmFkIGRlcGVuZGVuY3kgaW5qZWN0aW9uIGRvZXMgbm90IHdvcmsgaW4gV2VicGFjayArIEVTIDYgKGNvbnN0KSArIEJhYmVsLgoKZGlmZi5mYXN0RGlmZiA9IGZhc3REaWZmOw=="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/diff.js"],"names":["fastDiff","diff","a","b","cmp","aLength","length","bLength","_insert","_delete","tmp","m","n","delta","es","fp","snake","k","y1","undefined","y2","dir","slice","push","y","Math","max","x","p"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/diff\n */\n\nimport fastDiff from '../src/fastdiff';\n\n// The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n\n/**\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\n * necessary to transform input into output.\n *\n *\t\tdiff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\n *\n * This function is based on the \"O(NP) Sequence Comparison Algorithm\" by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n * Unfortunately, while it gives the most precise results, its to complex for longer strings/arrow (above 200 items).\n * Therefore, `diff()` automatically switches to {@link module:utils/fastdiff~fastDiff `fastDiff()`} when detecting\n * such a scenario. The return formats of both functions are identical.\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Output array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default === is used.\n * @returns {Array} Array of changes.\n */\nexport default function diff( a, b, cmp ) {\n\t// Set the comparator function.\n\tcmp = cmp || function( a, b ) {\n\t\treturn a === b;\n\t};\n\n\tconst aLength = a.length;\n\tconst bLength = b.length;\n\n\t// Perform `fastDiff` for longer strings/arrays (see #269).\n\tif ( aLength > 200 || bLength > 200 || aLength + bLength > 300 ) {\n\t\treturn diff.fastDiff( a, b, cmp, true );\n\t}\n\n\t// Temporary action type statics.\n\tlet _insert, _delete;\n\n\t// Swapped the arrays to use the shorter one as the first one.\n\tif ( bLength < aLength ) {\n\t\tconst tmp = a;\n\n\t\ta = b;\n\t\tb = tmp;\n\n\t\t// We swap the action types as well.\n\t\t_insert = 'delete';\n\t\t_delete = 'insert';\n\t} else {\n\t\t_insert = 'insert';\n\t\t_delete = 'delete';\n\t}\n\n\tconst m = a.length;\n\tconst n = b.length;\n\tconst delta = n - m;\n\n\t// Edit scripts, for each diagonal.\n\tconst es = {};\n\t// Furthest points, the furthest y we can get on each diagonal.\n\tconst fp = {};\n\n\tfunction snake( k ) {\n\t\t// We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\n\t\t// Furthest points (y) on the diagonal below k.\n\t\tconst y1 = ( fp[ k - 1 ] !== undefined ? fp[ k - 1 ] : -1 ) + 1;\n\t\t// Furthest points (y) on the diagonal above k.\n\t\tconst y2 = fp[ k + 1 ] !== undefined ? fp[ k + 1 ] : -1;\n\t\t// The way we should go to get further.\n\t\tconst dir = y1 > y2 ? -1 : 1;\n\n\t\t// Clone previous changes array (if any).\n\t\tif ( es[ k + dir ] ) {\n\t\t\tes[ k ] = es[ k + dir ].slice( 0 );\n\t\t}\n\n\t\t// Create changes array.\n\t\tif ( !es[ k ] ) {\n\t\t\tes[ k ] = [];\n\t\t}\n\n\t\t// Push the action.\n\t\tes[ k ].push( y1 > y2 ? _insert : _delete );\n\n\t\t// Set the beginning coordinates.\n\t\tlet y = Math.max( y1, y2 );\n\t\tlet x = y - k;\n\n\t\t// Traverse the diagonal as long as the values match.\n\t\twhile ( x < m && y < n && cmp( a[ x ], b[ y ] ) ) {\n\t\t\tx++;\n\t\t\ty++;\n\t\t\t// Push no change action.\n\t\t\tes[ k ].push( 'equal' );\n\t\t}\n\n\t\treturn y;\n\t}\n\n\tlet p = 0;\n\tlet k;\n\n\t// Traverse the graph until we reach the end of the longer string.\n\tdo {\n\t\t// Updates furthest points and edit scripts for diagonals below delta.\n\t\tfor ( k = -p; k < delta; k++ ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest points and edit scripts for diagonals above delta.\n\t\tfor ( k = delta + p; k > delta; k-- ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest point and edit script for the delta diagonal.\n\t\t// note that the delta diagonal is the one which goes through the sink (m, n).\n\t\tfp[ delta ] = snake( delta );\n\n\t\tp++;\n\t} while ( fp[ delta ] !== n );\n\n\t// Return the final list of edit changes.\n\t// We remove the first item that represents the action for the injected nulls.\n\treturn es[ delta ].slice( 1 );\n}\n\n// Store the API in static property to easily overwrite it in tests.\n// Too bad dependency injection does not work in Webpack + ES 6 (const) + Babel.\ndiff.fastDiff = fastDiff;\n"]}]}