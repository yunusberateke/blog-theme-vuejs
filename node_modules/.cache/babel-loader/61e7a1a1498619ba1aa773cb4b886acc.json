{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/eslint-loader/index.js??ref--13-0!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/src/store/modules/TagModule/mutations.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/src/store/modules/TagModule/mutations.js","mtime":1622983264424},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCnZhciBfbXV0YXRpb25zOwoKaW1wb3J0IHsgQ0xFQVJfU1RBVEUsIFNFVF9DT1VOVCwgU0VUX1RBR1MgfSBmcm9tICcuL211dGF0aW9uX3R5cGVzJzsKaW1wb3J0IGRlZmF1bHRTdGF0ZSBmcm9tICcuL3N0YXRlJzsKdmFyIG11dGF0aW9ucyA9IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfVEFHUywgZnVuY3Rpb24gKHN0YXRlLCB0YWdzKSB7CiAgc3RhdGUudGFncyA9IHRhZ3M7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgQ0xFQVJfU1RBVEUsIGZ1bmN0aW9uIChzdGF0ZSkgewogIE9iamVjdC5hc3NpZ24oc3RhdGUsIGRlZmF1bHRTdGF0ZSgpKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfQ09VTlQsIGZ1bmN0aW9uIChzdGF0ZSwgY291bnQpIHsKICBzdGF0ZS5jb3VudCA9IGNvdW50Owp9KSwgX211dGF0aW9ucyk7CmV4cG9ydCBkZWZhdWx0IG11dGF0aW9uczs="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/src/store/modules/TagModule/mutations.js"],"names":["CLEAR_STATE","SET_COUNT","SET_TAGS","defaultState","mutations","state","tags","Object","assign","count"],"mappings":";;;;AAAA,SACIA,WADJ,EAEIC,SAFJ,EAGIC,QAHJ,QAIO,kBAJP;AAKA,OAAOC,YAAP,MAAyB,SAAzB;AAEA,IAAMC,SAAS,iDAEVF,QAFU,YAEAG,KAFA,EAEMC,IAFN,EAEW;AAClBD,EAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACH,CAJU,+BAMVN,WANU,YAMGK,KANH,EAMS;AAChBE,EAAAA,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqBF,YAAY,EAAjC;AACH,CARU,+BAUVF,SAVU,YAUCI,KAVD,EAUOI,KAVP,EAUa;AACpBJ,EAAAA,KAAK,CAACI,KAAN,GAAcA,KAAd;AACH,CAZU,cAAf;AAeA,eAAeL,SAAf","sourcesContent":["import {\n    CLEAR_STATE,\n    SET_COUNT,\n    SET_TAGS,\n} from './mutation_types';\nimport defaultState from './state'\n\nconst mutations = {\n\n    [SET_TAGS](state,tags){\n        state.tags = tags;\n    },\n\n    [CLEAR_STATE](state){\n        Object.assign(state, defaultState())\n    },\n\n    [SET_COUNT](state,count){\n        state.count = count;\n    }\n}\n\nexport default mutations;\n"]}]}