{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/fakeselectionobserver.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/fakeselectionobserver.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9nZXQgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXQiOwppbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwoKLyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDIxLCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGVuZ2luZS92aWV3L29ic2VydmVyL2Zha2VzZWxlY3Rpb25vYnNlcnZlcgogKi8KaW1wb3J0IE9ic2VydmVyIGZyb20gJy4vb2JzZXJ2ZXInOwppbXBvcnQgVmlld1NlbGVjdGlvbiBmcm9tICcuLi9zZWxlY3Rpb24nOwppbXBvcnQgeyBrZXlDb2RlcyB9IGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2tleWJvYXJkJzsKaW1wb3J0IHsgZGVib3VuY2UgfSBmcm9tICdsb2Rhc2gtZXMnOwovKioKICogRmFrZSBzZWxlY3Rpb24gb2JzZXJ2ZXIgY2xhc3MuIElmIHZpZXcgc2VsZWN0aW9uIGlzIGZha2UgaXQgaXMgcGxhY2VkIGluIGR1bW15IERPTSBjb250YWluZXIuIFRoaXMgb2JzZXJ2ZXIgbGlzdGVucwogKiBvbiB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L2RvY3VtZW50fkRvY3VtZW50I2V2ZW50OmtleWRvd24ga2V5ZG93bn0gZXZlbnRzIGFuZCBoYW5kbGVzIG1vdmluZyBmYWtlIHZpZXcgc2VsZWN0aW9uIHRvIHRoZSBjb3JyZWN0IHBsYWNlCiAqIGlmIGFycm93IGtleXMgYXJlIHByZXNzZWQuCiAqIEZpcmVzIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvZG9jdW1lbnR+RG9jdW1lbnQjZXZlbnQ6c2VsZWN0aW9uQ2hhbmdlIHNlbGVjdGlvbkNoYW5nZSBldmVudH0gc2ltdWxhdGluZyBuYXR1cmFsIGJlaGF2aW91ciBvZgogKiB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L29ic2VydmVyL3NlbGVjdGlvbm9ic2VydmVyflNlbGVjdGlvbk9ic2VydmVyIFNlbGVjdGlvbk9ic2VydmVyfS4KICoKICogQGV4dGVuZHMgbW9kdWxlOmVuZ2luZS92aWV3L29ic2VydmVyL29ic2VydmVyfk9ic2VydmVyCiAqLwoKdmFyIEZha2VTZWxlY3Rpb25PYnNlcnZlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX09ic2VydmVyKSB7CiAgX2luaGVyaXRzKEZha2VTZWxlY3Rpb25PYnNlcnZlciwgX09ic2VydmVyKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihGYWtlU2VsZWN0aW9uT2JzZXJ2ZXIpOwoKICAvKioKICAgKiBDcmVhdGVzIG5ldyBGYWtlU2VsZWN0aW9uT2JzZXJ2ZXIgaW5zdGFuY2UuCiAgICoKICAgKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvdmlldy92aWV3flZpZXd9IHZpZXcKICAgKi8KICBmdW5jdGlvbiBGYWtlU2VsZWN0aW9uT2JzZXJ2ZXIodmlldykgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGYWtlU2VsZWN0aW9uT2JzZXJ2ZXIpOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgdmlldyk7CiAgICAvKioKICAgICAqIEZpcmVzIGRlYm91bmNlZCBldmVudCBgc2VsZWN0aW9uQ2hhbmdlRG9uZWAuIEl0IHVzZXMgYGxvZGFzaCNkZWJvdW5jZWAgbWV0aG9kIHRvIGRlbGF5IGZ1bmN0aW9uIGNhbGwuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIFNlbGVjdGlvbiBjaGFuZ2UgZGF0YS4KICAgICAqIEBtZXRob2QgI19maXJlU2VsZWN0aW9uQ2hhbmdlRG9uZURlYm91bmNlZAogICAgICovCgogICAgX3RoaXMuX2ZpcmVTZWxlY3Rpb25DaGFuZ2VEb25lRGVib3VuY2VkID0gZGVib3VuY2UoZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgcmV0dXJuIF90aGlzLmRvY3VtZW50LmZpcmUoJ3NlbGVjdGlvbkNoYW5nZURvbmUnLCBkYXRhKTsKICAgIH0sIDIwMCk7CiAgICByZXR1cm4gX3RoaXM7CiAgfQogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCgoKICBfY3JlYXRlQ2xhc3MoRmFrZVNlbGVjdGlvbk9ic2VydmVyLCBbewogICAga2V5OiAib2JzZXJ2ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb2JzZXJ2ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgZG9jdW1lbnQgPSB0aGlzLmRvY3VtZW50OwogICAgICBkb2N1bWVudC5vbignYXJyb3dLZXknLCBmdW5jdGlvbiAoZXZlbnRJbmZvLCBkYXRhKSB7CiAgICAgICAgdmFyIHNlbGVjdGlvbiA9IGRvY3VtZW50LnNlbGVjdGlvbjsKCiAgICAgICAgaWYgKHNlbGVjdGlvbi5pc0Zha2UgJiYgX3RoaXMyLmlzRW5hYmxlZCkgewogICAgICAgICAgLy8gUHJldmVudHMgZGVmYXVsdCBrZXkgZG93biBoYW5kbGluZyAtIG5vIHNlbGVjdGlvbiBjaGFuZ2Ugd2lsbCBvY2N1ci4KICAgICAgICAgIGRhdGEucHJldmVudERlZmF1bHQoKTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICBjb250ZXh0OiAnJGNhcHR1cmUnCiAgICAgIH0pOwogICAgICBkb2N1bWVudC5vbignYXJyb3dLZXknLCBmdW5jdGlvbiAoZXZlbnRJbmZvLCBkYXRhKSB7CiAgICAgICAgdmFyIHNlbGVjdGlvbiA9IGRvY3VtZW50LnNlbGVjdGlvbjsKCiAgICAgICAgaWYgKHNlbGVjdGlvbi5pc0Zha2UgJiYgX3RoaXMyLmlzRW5hYmxlZCkgewogICAgICAgICAgX3RoaXMyLl9oYW5kbGVTZWxlY3Rpb25Nb3ZlKGRhdGEua2V5Q29kZSk7CiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgcHJpb3JpdHk6ICdsb3dlc3QnCiAgICAgIH0pOwogICAgfQogICAgLyoqCiAgICAgKiBAaW5oZXJpdERvYwogICAgICovCgogIH0sIHsKICAgIGtleTogImRlc3Ryb3kiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRlc3Ryb3koKSB7CiAgICAgIF9nZXQoX2dldFByb3RvdHlwZU9mKEZha2VTZWxlY3Rpb25PYnNlcnZlci5wcm90b3R5cGUpLCAiZGVzdHJveSIsIHRoaXMpLmNhbGwodGhpcyk7CgogICAgICB0aGlzLl9maXJlU2VsZWN0aW9uQ2hhbmdlRG9uZURlYm91bmNlZC5jYW5jZWwoKTsKICAgIH0KICAgIC8qKgogICAgICogSGFuZGxlcyBjb2xsYXBzaW5nIHZpZXcgc2VsZWN0aW9uIGFjY29yZGluZyB0byBnaXZlbiBrZXkgY29kZS4gSWYgbGVmdCBvciB1cCBrZXkgaXMgcHJvdmlkZWQgLSBuZXcgc2VsZWN0aW9uIHdpbGwgYmUKICAgICAqIGNvbGxhcHNlZCB0byBsZWZ0LiBJZiByaWdodCBvciBkb3duIGtleSBpcyBwcmVzc2VkIC0gbmV3IHNlbGVjdGlvbiB3aWxsIGJlIGNvbGxhcHNlZCB0byByaWdodC4KICAgICAqCiAgICAgKiBUaGlzIG1ldGhvZCBmaXJlcyB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L2RvY3VtZW50fkRvY3VtZW50I2V2ZW50OnNlbGVjdGlvbkNoYW5nZX0gYW5kCiAgICAgKiB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L2RvY3VtZW50fkRvY3VtZW50I2V2ZW50OnNlbGVjdGlvbkNoYW5nZURvbmV9IGV2ZW50cyBpbWl0YXRpbmcgYmVoYXZpb3VyIG9mCiAgICAgKiB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L29ic2VydmVyL3NlbGVjdGlvbm9ic2VydmVyflNlbGVjdGlvbk9ic2VydmVyfS4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQHBhcmFtIHtOdW1iZXJ9IGtleUNvZGUKICAgICAqIEBmaXJlcyBtb2R1bGU6ZW5naW5lL3ZpZXcvZG9jdW1lbnR+RG9jdW1lbnQjZXZlbnQ6c2VsZWN0aW9uQ2hhbmdlCiAgICAgKiBAZmlyZXMgbW9kdWxlOmVuZ2luZS92aWV3L2RvY3VtZW50fkRvY3VtZW50I2V2ZW50OnNlbGVjdGlvbkNoYW5nZURvbmUKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfaGFuZGxlU2VsZWN0aW9uTW92ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2hhbmRsZVNlbGVjdGlvbk1vdmUoa2V5Q29kZSkgewogICAgICB2YXIgc2VsZWN0aW9uID0gdGhpcy5kb2N1bWVudC5zZWxlY3Rpb247CiAgICAgIHZhciBuZXdTZWxlY3Rpb24gPSBuZXcgVmlld1NlbGVjdGlvbihzZWxlY3Rpb24uZ2V0UmFuZ2VzKCksIHsKICAgICAgICBiYWNrd2FyZDogc2VsZWN0aW9uLmlzQmFja3dhcmQsCiAgICAgICAgZmFrZTogZmFsc2UKICAgICAgfSk7IC8vIExlZnQgb3IgdXAgYXJyb3cgcHJlc3NlZCAtIG1vdmUgc2VsZWN0aW9uIHRvIHN0YXJ0LgoKICAgICAgaWYgKGtleUNvZGUgPT0ga2V5Q29kZXMuYXJyb3dsZWZ0IHx8IGtleUNvZGUgPT0ga2V5Q29kZXMuYXJyb3d1cCkgewogICAgICAgIG5ld1NlbGVjdGlvbi5zZXRUbyhuZXdTZWxlY3Rpb24uZ2V0Rmlyc3RQb3NpdGlvbigpKTsKICAgICAgfSAvLyBSaWdodCBvciBkb3duIGFycm93IHByZXNzZWQgLSBtb3ZlIHNlbGVjdGlvbiB0byBlbmQuCgoKICAgICAgaWYgKGtleUNvZGUgPT0ga2V5Q29kZXMuYXJyb3dyaWdodCB8fCBrZXlDb2RlID09IGtleUNvZGVzLmFycm93ZG93bikgewogICAgICAgIG5ld1NlbGVjdGlvbi5zZXRUbyhuZXdTZWxlY3Rpb24uZ2V0TGFzdFBvc2l0aW9uKCkpOwogICAgICB9CgogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICBvbGRTZWxlY3Rpb246IHNlbGVjdGlvbiwKICAgICAgICBuZXdTZWxlY3Rpb246IG5ld1NlbGVjdGlvbiwKICAgICAgICBkb21TZWxlY3Rpb246IG51bGwKICAgICAgfTsgLy8gRmlyZSBkdW1teSBzZWxlY3Rpb24gY2hhbmdlIGV2ZW50LgoKICAgICAgdGhpcy5kb2N1bWVudC5maXJlKCdzZWxlY3Rpb25DaGFuZ2UnLCBkYXRhKTsgLy8gQ2FsbGAgI19maXJlU2VsZWN0aW9uQ2hhbmdlRG9uZURlYm91bmNlZGAgZXZlcnkgdGltZSB3aGVuIGBzZWxlY3Rpb25DaGFuZ2VgIGV2ZW50IGlzIGZpcmVkLgogICAgICAvLyBUaGlzIGZ1bmN0aW9uIGlzIGRlYm91bmNlZCB3aGF0IG1lYW5zIHRoYXQgYHNlbGVjdGlvbkNoYW5nZURvbmVgIGV2ZW50IHdpbGwgYmUgZmlyZWQgb25seSB3aGVuCiAgICAgIC8vIGRlZmluZWQgaW50IHRoZSBmdW5jdGlvbiB0aW1lIHdpbGwgZWxhcHNlIHNpbmNlIHRoZSBsYXN0IHRpbWUgdGhlIGZ1bmN0aW9uIHdhcyBjYWxsZWQuCiAgICAgIC8vIFNvIGBzZWxlY3Rpb25DaGFuZ2VEb25lYCB3aWxsIGJlIGZpcmVkIHdoZW4gc2VsZWN0aW9uIHdpbGwgc3RvcCBjaGFuZ2luZy4KCiAgICAgIHRoaXMuX2ZpcmVTZWxlY3Rpb25DaGFuZ2VEb25lRGVib3VuY2VkKGRhdGEpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEZha2VTZWxlY3Rpb25PYnNlcnZlcjsKfShPYnNlcnZlcik7CgpleHBvcnQgeyBGYWtlU2VsZWN0aW9uT2JzZXJ2ZXIgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/fakeselectionobserver.js"],"names":["Observer","ViewSelection","keyCodes","debounce","FakeSelectionObserver","view","_fireSelectionChangeDoneDebounced","data","document","fire","on","eventInfo","selection","isFake","isEnabled","preventDefault","context","_handleSelectionMove","keyCode","priority","cancel","newSelection","getRanges","backward","isBackward","fake","arrowleft","arrowup","setTo","getFirstPosition","arrowright","arrowdown","getLastPosition","oldSelection","domSelection"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,cAA1B;AACA,SAASC,QAAT,QAAyB,wCAAzB;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,qB;;;;;AACpB;AACD;AACA;AACA;AACA;AACC,iCAAaC,IAAb,EAAoB;AAAA;;AAAA;;AACnB,8BAAOA,IAAP;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,UAAKC,iCAAL,GAAyCH,QAAQ,CAAE,UAAAI,IAAI;AAAA,aAAI,MAAKC,QAAL,CAAcC,IAAd,CAAoB,qBAApB,EAA2CF,IAA3C,CAAJ;AAAA,KAAN,EAA6D,GAA7D,CAAjD;AAVmB;AAWnB;AAED;AACD;AACA;;;;;WACC,mBAAU;AAAA;;AACT,UAAMC,QAAQ,GAAG,KAAKA,QAAtB;AAEAA,MAAAA,QAAQ,CAACE,EAAT,CAAa,UAAb,EAAyB,UAAEC,SAAF,EAAaJ,IAAb,EAAuB;AAC/C,YAAMK,SAAS,GAAGJ,QAAQ,CAACI,SAA3B;;AAEA,YAAKA,SAAS,CAACC,MAAV,IAAoB,MAAI,CAACC,SAA9B,EAA0C;AACzC;AACAP,UAAAA,IAAI,CAACQ,cAAL;AACA;AACD,OAPD,EAOG;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAPH;AASAR,MAAAA,QAAQ,CAACE,EAAT,CAAa,UAAb,EAAyB,UAAEC,SAAF,EAAaJ,IAAb,EAAuB;AAC/C,YAAMK,SAAS,GAAGJ,QAAQ,CAACI,SAA3B;;AAEA,YAAKA,SAAS,CAACC,MAAV,IAAoB,MAAI,CAACC,SAA9B,EAA0C;AACzC,UAAA,MAAI,CAACG,oBAAL,CAA2BV,IAAI,CAACW,OAAhC;AACA;AACD,OAND,EAMG;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OANH;AAOA;AAED;AACD;AACA;;;;WACC,mBAAU;AACT;;AAEA,WAAKb,iCAAL,CAAuCc,MAAvC;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,8BAAsBF,OAAtB,EAAgC;AAC/B,UAAMN,SAAS,GAAG,KAAKJ,QAAL,CAAcI,SAAhC;AACA,UAAMS,YAAY,GAAG,IAAIpB,aAAJ,CAAmBW,SAAS,CAACU,SAAV,EAAnB,EAA0C;AAAEC,QAAAA,QAAQ,EAAEX,SAAS,CAACY,UAAtB;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAA1C,CAArB,CAF+B,CAI/B;;AACA,UAAKP,OAAO,IAAIhB,QAAQ,CAACwB,SAApB,IAAiCR,OAAO,IAAIhB,QAAQ,CAACyB,OAA1D,EAAoE;AACnEN,QAAAA,YAAY,CAACO,KAAb,CAAoBP,YAAY,CAACQ,gBAAb,EAApB;AACA,OAP8B,CAS/B;;;AACA,UAAKX,OAAO,IAAIhB,QAAQ,CAAC4B,UAApB,IAAkCZ,OAAO,IAAIhB,QAAQ,CAAC6B,SAA3D,EAAuE;AACtEV,QAAAA,YAAY,CAACO,KAAb,CAAoBP,YAAY,CAACW,eAAb,EAApB;AACA;;AAED,UAAMzB,IAAI,GAAG;AACZ0B,QAAAA,YAAY,EAAErB,SADF;AAEZS,QAAAA,YAAY,EAAZA,YAFY;AAGZa,QAAAA,YAAY,EAAE;AAHF,OAAb,CAd+B,CAoB/B;;AACA,WAAK1B,QAAL,CAAcC,IAAd,CAAoB,iBAApB,EAAuCF,IAAvC,EArB+B,CAuB/B;AACA;AACA;AACA;;AACA,WAAKD,iCAAL,CAAwCC,IAAxC;AACA;;;;EA7FiDP,Q;;SAA9BI,qB","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/fakeselectionobserver\n */\n\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport { debounce } from 'lodash-es';\n\n/**\n * Fake selection observer class. If view selection is fake it is placed in dummy DOM container. This observer listens\n * on {@link module:engine/view/document~Document#event:keydown keydown} events and handles moving fake view selection to the correct place\n * if arrow keys are pressed.\n * Fires {@link module:engine/view/document~Document#event:selectionChange selectionChange event} simulating natural behaviour of\n * {@link module:engine/view/observer/selectionobserver~SelectionObserver SelectionObserver}.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class FakeSelectionObserver extends Observer {\n\t/**\n\t * Creates new FakeSelectionObserver instance.\n\t *\n\t * @param {module:engine/view/view~View} view\n\t */\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {\n\t\tconst document = this.document;\n\n\t\tdocument.on( 'arrowKey', ( eventInfo, data ) => {\n\t\t\tconst selection = document.selection;\n\n\t\t\tif ( selection.isFake && this.isEnabled ) {\n\t\t\t\t// Prevents default key down handling - no selection change will occur.\n\t\t\t\tdata.preventDefault();\n\t\t\t}\n\t\t}, { context: '$capture' } );\n\n\t\tdocument.on( 'arrowKey', ( eventInfo, data ) => {\n\t\t\tconst selection = document.selection;\n\n\t\t\tif ( selection.isFake && this.isEnabled ) {\n\t\t\t\tthis._handleSelectionMove( data.keyCode );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t}\n\n\t/**\n\t * Handles collapsing view selection according to given key code. If left or up key is provided - new selection will be\n\t * collapsed to left. If right or down key is pressed - new selection will be collapsed to right.\n\t *\n\t * This method fires {@link module:engine/view/document~Document#event:selectionChange} and\n\t * {@link module:engine/view/document~Document#event:selectionChangeDone} events imitating behaviour of\n\t * {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n\t *\n\t * @private\n\t * @param {Number} keyCode\n\t * @fires module:engine/view/document~Document#event:selectionChange\n\t * @fires module:engine/view/document~Document#event:selectionChangeDone\n\t */\n\t_handleSelectionMove( keyCode ) {\n\t\tconst selection = this.document.selection;\n\t\tconst newSelection = new ViewSelection( selection.getRanges(), { backward: selection.isBackward, fake: false } );\n\n\t\t// Left or up arrow pressed - move selection to start.\n\t\tif ( keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup ) {\n\t\t\tnewSelection.setTo( newSelection.getFirstPosition() );\n\t\t}\n\n\t\t// Right or down arrow pressed - move selection to end.\n\t\tif ( keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowdown ) {\n\t\t\tnewSelection.setTo( newSelection.getLastPosition() );\n\t\t}\n\n\t\tconst data = {\n\t\t\toldSelection: selection,\n\t\t\tnewSelection,\n\t\t\tdomSelection: null\n\t\t};\n\n\t\t// Fire dummy selection change event.\n\t\tthis.document.fire( 'selectionChange', data );\n\n\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t}\n}\n"]}]}