{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/dom/position.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/dom/position.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/dom/position.js"],"names":["global","Rect","getPositionedAncestor","getBorderWidths","isFunction","getOptimalPosition","element","target","positions","limiter","fitInViewport","positionedElementAncestor","elementRect","targetRect","bestPositionRect","bestPositionName","getPositionNameAndRect","limiterRect","getVisible","viewportRect","window","bestPosition","getBestPositionNameAndRect","absoluteRectCoordinates","getAbsoluteRectCoordinates","shiftRectCoordinatesDueToPositionedAncestor","left","top","name","position","positionData","clone","moveTo","options","elementRectArea","getArea","processedPositions","processPositionsToAreas","processedPositionsInViewport","filter","viewportIntersectArea","bestPositionData","getBestOfProcessedPositions","positionName","positionRect","limiterIntersectArea","limiterViewportIntersectRect","getIntersection","getIntersectionArea","processedPosition","push","maxFitFactor","fitFactor","ancestorPosition","ancestorBorderWidths","scrollLeft","scrollTop","scrollX","scrollY"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/position\n */\n\nimport global from './global';\nimport Rect from './rect';\nimport getPositionedAncestor from './getpositionedancestor';\nimport getBorderWidths from './getborderwidths';\nimport { isFunction } from 'lodash-es';\n\n/**\n * Calculates the `position: absolute` coordinates of a given element so it can be positioned with respect to the\n * target in the visually most efficient way, taking various restrictions like viewport or limiter geometry\n * into consideration.\n *\n *\t\t// The element which is to be positioned.\n *\t\tconst element = document.body.querySelector( '#toolbar' );\n *\n *\t\t// A target to which the element is positioned relatively.\n *\t\tconst target = document.body.querySelector( '#container' );\n *\n *\t\t// Finding the optimal coordinates for the positioning.\n *\t\tconst { left, top, name } = getOptimalPosition( {\n *\t\t\telement: element,\n *\t\t\ttarget: target,\n *\n * \t\t\t// The algorithm will chose among these positions to meet the requirements such\n * \t\t\t// as \"limiter\" element or \"fitInViewport\", set below. The positions are considered\n * \t\t\t// in the order of the array.\n *\t\t\tpositions: [\n *\t\t\t\t//\n *\t\t\t \t//\t[ Target ]\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\n *\t\t\t\ttargetRect => ( {\n *\t\t\t\t\ttop: targetRect.bottom,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'mySouthEastPosition'\n *\t\t\t\t} ),\n *\n *\t\t\t\t//\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t[ Target ]\n *\t\t\t\t//\n *\t\t\t\t( targetRect, elementRect ) => ( {\n *\t\t\t\t\ttop: targetRect.top - elementRect.height,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'myNorthEastPosition'\n *\t\t\t\t} )\n *\t\t\t],\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of <body>.\n *\t\t\tlimiter: document.body,\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of the browser viewport.\n *\t\t\tfitInViewport: true\n *\t\t} );\n *\n *\t\t// The best position which fits into document.body and the viewport. May be useful\n *\t\t// to set proper class on the `element`.\n *\t\tconsole.log( name ); // -> \"myNorthEastPosition\"\n *\n *\t\t// Using the absolute coordinates which has been found to position the element\n *\t\t// as in the diagram depicting the \"myNorthEastPosition\" position.\n *\t\telement.style.top = top;\n *\t\telement.style.left = left;\n *\n * @param {module:utils/dom/position~Options} options Positioning options object.\n * @returns {module:utils/dom/position~Position}\n */\nexport function getOptimalPosition( { element, target, positions, limiter, fitInViewport } ) {\n\t// If the {@link module:utils/dom/position~Options#target} is a function, use what it returns.\n\t// https://github.com/ckeditor/ckeditor5-utils/issues/157\n\tif ( isFunction( target ) ) {\n\t\ttarget = target();\n\t}\n\n\t// If the {@link module:utils/dom/position~Options#limiter} is a function, use what it returns.\n\t// https://github.com/ckeditor/ckeditor5-ui/issues/260\n\tif ( isFunction( limiter ) ) {\n\t\tlimiter = limiter();\n\t}\n\n\tconst positionedElementAncestor = getPositionedAncestor( element );\n\tconst elementRect = new Rect( element );\n\tconst targetRect = new Rect( target );\n\n\tlet bestPositionRect;\n\tlet bestPositionName;\n\n\t// If there are no limits, just grab the very first position and be done with that drama.\n\tif ( !limiter && !fitInViewport ) {\n\t\t[ bestPositionName, bestPositionRect ] = getPositionNameAndRect( positions[ 0 ], targetRect, elementRect );\n\t} else {\n\t\tconst limiterRect = limiter && new Rect( limiter ).getVisible();\n\t\tconst viewportRect = fitInViewport && new Rect( global.window );\n\t\tconst bestPosition = getBestPositionNameAndRect( positions, { targetRect, elementRect, limiterRect, viewportRect } );\n\n\t\t// If there's no best position found, i.e. when all intersections have no area because\n\t\t// rects have no width or height, then just use the first available position.\n\t\t[ bestPositionName, bestPositionRect ] = bestPosition || getPositionNameAndRect( positions[ 0 ], targetRect, elementRect );\n\t}\n\n\tlet absoluteRectCoordinates = getAbsoluteRectCoordinates( bestPositionRect );\n\n\tif ( positionedElementAncestor ) {\n\t\tabsoluteRectCoordinates = shiftRectCoordinatesDueToPositionedAncestor( absoluteRectCoordinates, positionedElementAncestor );\n\t}\n\n\treturn {\n\t\tleft: absoluteRectCoordinates.left,\n\t\ttop: absoluteRectCoordinates.top,\n\t\tname: bestPositionName\n\t};\n}\n\n// For given position function, returns a corresponding `Rect` instance.\n//\n// @private\n// @param {Function} position A function returning {@link module:utils/dom/position~Position}.\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned element.\n// @returns {Array|null} An array containing position name and its Rect (or null if position should be ignored).\nfunction getPositionNameAndRect( position, targetRect, elementRect ) {\n\tconst positionData = position( targetRect, elementRect );\n\n\tif ( !positionData ) {\n\t\treturn null;\n\t}\n\n\tconst { left, top, name } = positionData;\n\n\treturn [ name, elementRect.clone().moveTo( left, top ) ];\n}\n\n// For a given array of positioning functions, returns such that provides the best\n// fit of the `elementRect` into the `limiterRect` and `viewportRect`.\n//\n// @private\n//\n// @param {Object} options\n// @param {module:utils/dom/position~Options#positions} positions Functions returning {@link module:utils/dom/position~Position}\n// to be checked, in the order of preference.\n// @param {Object} options\n// @param {utils/dom/rect~Rect} options.targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} options.elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} options.limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} options.viewportRect A rect of the viewport.\n//\n// @returns {Array} An array containing the name of the position and it's rect.\nfunction getBestPositionNameAndRect( positions, options ) {\n\tconst { elementRect, viewportRect } = options;\n\n\t// This is when element is fully visible.\n\tconst elementRectArea = elementRect.getArea();\n\n\t// Let's calculate intersection areas for positions. It will end early if best match is found.\n\tconst processedPositions = processPositionsToAreas( positions, options );\n\n\t// First let's check all positions that fully fit in the viewport.\n\tif ( viewportRect ) {\n\t\tconst processedPositionsInViewport = processedPositions.filter( ( { viewportIntersectArea } ) => {\n\t\t\treturn viewportIntersectArea === elementRectArea;\n\t\t} );\n\n\t\t// Try to find best position from those which fit completely in viewport.\n\t\tconst bestPositionData = getBestOfProcessedPositions( processedPositionsInViewport, elementRectArea );\n\n\t\tif ( bestPositionData ) {\n\t\t\treturn bestPositionData;\n\t\t}\n\t}\n\n\t// Either there is no viewportRect or there is no position that fits completely in the viewport.\n\treturn getBestOfProcessedPositions( processedPositions, elementRectArea );\n}\n\n// For a given array of positioning functions, calculates intersection areas for them.\n//\n// Note: If some position fully fits into the `limiterRect`, it will be returned early, without further consideration\n// of other positions.\n//\n// @private\n//\n// @param {module:utils/dom/position~Options#positions} positions Functions returning {@link module:utils/dom/position~Position}\n// to be checked, in the order of preference.\n// @param {Object} options\n// @param {utils/dom/rect~Rect} options.targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} options.elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} options.limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} options.viewportRect A rect of the viewport.\n//\n// @returns {Array.<Object>} Array of positions with calculated intersection areas. Each item is an object containing:\n// * {String} positionName Name of position.\n// * {utils/dom/rect~Rect} positionRect Rect of position.\n// * {Number} limiterIntersectArea Area of intersection of the position with limiter part that is in the viewport.\n// * {Number} viewportIntersectArea Area of intersection of the position with viewport.\nfunction processPositionsToAreas( positions, { targetRect, elementRect, limiterRect, viewportRect } ) {\n\tconst processedPositions = [];\n\n\t// This is when element is fully visible.\n\tconst elementRectArea = elementRect.getArea();\n\n\tfor ( const position of positions ) {\n\t\tconst positionData = getPositionNameAndRect( position, targetRect, elementRect );\n\n\t\tif ( !positionData ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [ positionName, positionRect ] = positionData;\n\t\tlet limiterIntersectArea = 0;\n\t\tlet viewportIntersectArea = 0;\n\n\t\tif ( limiterRect ) {\n\t\t\tif ( viewportRect ) {\n\t\t\t\t// Consider only the part of the limiter which is visible in the viewport. So the limiter is getting limited.\n\t\t\t\tconst limiterViewportIntersectRect = limiterRect.getIntersection( viewportRect );\n\n\t\t\t\tif ( limiterViewportIntersectRect ) {\n\t\t\t\t\t// If the limiter is within the viewport, then check the intersection between that part of the\n\t\t\t\t\t// limiter and actual position.\n\t\t\t\t\tlimiterIntersectArea = limiterViewportIntersectRect.getIntersectionArea( positionRect );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlimiterIntersectArea = limiterRect.getIntersectionArea( positionRect );\n\t\t\t}\n\t\t}\n\n\t\tif ( viewportRect ) {\n\t\t\tviewportIntersectArea = viewportRect.getIntersectionArea( positionRect );\n\t\t}\n\n\t\tconst processedPosition = {\n\t\t\tpositionName,\n\t\t\tpositionRect,\n\t\t\tlimiterIntersectArea,\n\t\t\tviewportIntersectArea\n\t\t};\n\n\t\t// If a such position is found that element is fully contained by the limiter then, obviously,\n\t\t// there will be no better one, so finishing.\n\t\tif ( limiterIntersectArea === elementRectArea ) {\n\t\t\treturn [ processedPosition ];\n\t\t}\n\n\t\tprocessedPositions.push( processedPosition );\n\t}\n\n\treturn processedPositions;\n}\n\n// For a given array of processed position data (with calculated Rects for positions and intersection areas)\n// returns such that provides the best fit of the `elementRect` into the `limiterRect` and `viewportRect` at the same time.\n//\n// **Note**: It will return early if some position fully fits into the `limiterRect`.\n//\n// @private\n// @param {Array.<Object>} Array of positions with calculated intersection areas (in order of preference).\n// Each item is an object containing:\n//\n//\t* {String} positionName Name of position.\n//\t* {utils/dom/rect~Rect} positionRect Rect of position.\n//\t* {Number} limiterIntersectArea Area of intersection of the position with limiter part that is in the viewport.\n//\t* {Number} viewportIntersectArea Area of intersection of the position with viewport.\n//\n// @param {Number} elementRectArea Area of positioned {@link module:utils/dom/position~Options#element}.\n// @returns {Array|null} An array containing the name of the position and it's rect, or null if not found.\nfunction getBestOfProcessedPositions( processedPositions, elementRectArea ) {\n\tlet maxFitFactor = 0;\n\tlet bestPositionRect;\n\tlet bestPositionName;\n\n\tfor ( const { positionName, positionRect, limiterIntersectArea, viewportIntersectArea } of processedPositions ) {\n\t\t// If a such position is found that element is fully container by the limiter then, obviously,\n\t\t// there will be no better one, so finishing.\n\t\tif ( limiterIntersectArea === elementRectArea ) {\n\t\t\treturn [ positionName, positionRect ];\n\t\t}\n\n\t\t// To maximize both viewport and limiter intersection areas we use distance on viewportIntersectArea\n\t\t// and limiterIntersectArea plane (without sqrt because we are looking for max value).\n\t\tconst fitFactor = viewportIntersectArea ** 2 + limiterIntersectArea ** 2;\n\n\t\tif ( fitFactor > maxFitFactor ) {\n\t\t\tmaxFitFactor = fitFactor;\n\t\t\tbestPositionRect = positionRect;\n\t\t\tbestPositionName = positionName;\n\t\t}\n\t}\n\n\treturn bestPositionRect ? [ bestPositionName, bestPositionRect ] : null;\n}\n\n// For a given absolute Rect coordinates object and a positioned element ancestor, it returns an object with\n// new Rect coordinates that make up for the position and the scroll of the ancestor.\n//\n// This is necessary because while Rects (and DOMRects) are relative to the browser's viewport, their coordinates\n// are used in real–life to position elements with `position: absolute`, which are scoped by any positioned\n// (and scrollable) ancestors.\n//\n// @private\n//\n// @param {Object} absoluteRectCoordinates An object with absolute rect coordinates.\n// @param {Object} absoluteRectCoordinates.top\n// @param {Object} absoluteRectCoordinates.left\n// @param {HTMLElement} positionedElementAncestor An ancestor element that should be considered.\n//\n// @returns {Object} An object corresponding to `absoluteRectCoordinates` input but with values shifted\n// to make up for the positioned element ancestor.\nfunction shiftRectCoordinatesDueToPositionedAncestor( { left, top }, positionedElementAncestor ) {\n\tconst ancestorPosition = getAbsoluteRectCoordinates( new Rect( positionedElementAncestor ) );\n\tconst ancestorBorderWidths = getBorderWidths( positionedElementAncestor );\n\n\t// (https://github.com/ckeditor/ckeditor5-ui-default/issues/126)\n\t// If there's some positioned ancestor of the panel, then its `Rect` must be taken into\n\t// consideration. `Rect` is always relative to the viewport while `position: absolute` works\n\t// with respect to that positioned ancestor.\n\tleft -= ancestorPosition.left;\n\ttop -= ancestorPosition.top;\n\n\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t// If there's some positioned ancestor of the panel, not only its position must be taken into\n\t// consideration (see above) but also its internal scrolls. Scroll have an impact here because `Rect`\n\t// is relative to the viewport (it doesn't care about scrolling), while `position: absolute`\n\t// must compensate that scrolling.\n\tleft += positionedElementAncestor.scrollLeft;\n\ttop += positionedElementAncestor.scrollTop;\n\n\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t// If there's some positioned ancestor of the panel, then its `Rect` includes its CSS `borderWidth`\n\t// while `position: absolute` positioning does not consider it.\n\t// E.g. `{ position: absolute, top: 0, left: 0 }` means upper left corner of the element,\n\t// not upper-left corner of its border.\n\tleft -= ancestorBorderWidths.left;\n\ttop -= ancestorBorderWidths.top;\n\n\treturn { left, top };\n}\n\n// DOMRect (also Rect) works in a scroll–independent geometry but `position: absolute` doesn't.\n// This function converts Rect to `position: absolute` coordinates.\n//\n// @private\n// @param {utils/dom/rect~Rect} rect A rect to be converted.\n// @returns {Object} Object containing `left` and `top` properties, in absolute coordinates.\nfunction getAbsoluteRectCoordinates( { left, top } ) {\n\tconst { scrollX, scrollY } = global.window;\n\n\treturn {\n\t\tleft: left + scrollX,\n\t\ttop: top + scrollY\n\t};\n}\n\n/**\n * The `getOptimalPosition()` helper options.\n *\n * @interface module:utils/dom/position~Options\n */\n\n/**\n * Element that is to be positioned.\n *\n * @member {HTMLElement} #element\n */\n\n/**\n * Target with respect to which the `element` is to be positioned.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #target\n */\n\n/**\n * An array of functions which return {@link module:utils/dom/position~Position} relative\n * to the `target`, in the order of preference.\n *\n * **Note**: If a function returns `null`, it is ignored by the `getOptimalPosition()`.\n *\n * @member {Array.<Function>} #positions\n */\n\n/**\n * When set, the algorithm will chose position which fits the most in the\n * limiter's bounding rect.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #limiter\n */\n\n/**\n * When set, the algorithm will chose such a position which fits `element`\n * the most inside visible viewport.\n *\n * @member {Boolean} #fitInViewport\n */\n\n/**\n * An object describing a position in `position: absolute` coordinate\n * system, along with position name.\n *\n * @typedef {Object} module:utils/dom/position~Position\n *\n * @property {Number} top Top position offset.\n * @property {Number} left Left position offset.\n * @property {String} name Name of the position.\n */\n"]}]}