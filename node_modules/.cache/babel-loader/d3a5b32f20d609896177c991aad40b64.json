{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/utils/findattributerange.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/utils/findattributerange.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDIxLCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHR5cGluZy91dGlscy9maW5kYXR0cmlidXRlcmFuZ2UKICovCgovKioKICogUmV0dXJucyBhIG1vZGVsIHJhbmdlIHRoYXQgY292ZXJzIGFsbCBjb25zZWN1dGl2ZSBub2RlcyB3aXRoIHRoZSBzYW1lIGBhdHRyaWJ1dGVOYW1lYCBhbmQgaXRzIGB2YWx1ZWAKICogdGhhdCBpbnRlcnNlY3QgdGhlIGdpdmVuIGBwb3NpdGlvbmAuCiAqCiAqIEl0IGNhbiBiZSB1c2VkIGUuZy4gdG8gZ2V0IHRoZSBlbnRpcmUgcmFuZ2Ugb24gd2hpY2ggdGhlIGBsaW5rSHJlZmAgYXR0cmlidXRlIG5lZWRzIHRvIGJlIGNoYW5nZWQgd2hlbiBoYXZpbmcgYQogKiBzZWxlY3Rpb24gaW5zaWRlIGEgbGluay4KICoKICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL3Bvc2l0aW9uflBvc2l0aW9ufSBwb3NpdGlvbiBUaGUgc3RhcnQgcG9zaXRpb24uCiAqIEBwYXJhbSB7U3RyaW5nfSBhdHRyaWJ1dGVOYW1lIFRoZSBhdHRyaWJ1dGUgbmFtZS4KICogQHBhcmFtIHtTdHJpbmd9IHZhbHVlIFRoZSBhdHRyaWJ1dGUgdmFsdWUuCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9tb2RlbH5Nb2RlbH0gbW9kZWwgVGhlIG1vZGVsIGluc3RhbmNlLgogKiBAcmV0dXJucyB7bW9kdWxlOmVuZ2luZS9tb2RlbC9yYW5nZX5SYW5nZX0gVGhlIGxpbmsgcmFuZ2UuCiAqLwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmaW5kQXR0cmlidXRlUmFuZ2UocG9zaXRpb24sIGF0dHJpYnV0ZU5hbWUsIHZhbHVlLCBtb2RlbCkgewogIHJldHVybiBtb2RlbC5jcmVhdGVSYW5nZShfZmluZEJvdW5kKHBvc2l0aW9uLCBhdHRyaWJ1dGVOYW1lLCB2YWx1ZSwgdHJ1ZSwgbW9kZWwpLCBfZmluZEJvdW5kKHBvc2l0aW9uLCBhdHRyaWJ1dGVOYW1lLCB2YWx1ZSwgZmFsc2UsIG1vZGVsKSk7Cn0gLy8gV2Fsa3MgZm9yd2FyZCBvciBiYWNrd2FyZCAoZGVwZW5kcyBvbiB0aGUgYGxvb2tCYWNrYCBmbGFnKSwgbm9kZSBieSBub2RlLCBhcyBsb25nIGFzIHRoZXkgaGF2ZSB0aGUgc2FtZSBhdHRyaWJ1dGUgdmFsdWUKLy8gYW5kIHJldHVybnMgYSBwb3NpdGlvbiBqdXN0IGJlZm9yZSBvciBhZnRlciAoZGVwZW5kcyBvbiB0aGUgYGxvb2tCYWNrYCBmbGFnKSB0aGUgbGFzdCBtYXRjaGVkIG5vZGUuCi8vCi8vIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9wb3NpdGlvbn5Qb3NpdGlvbn0gcG9zaXRpb24gVGhlIHN0YXJ0IHBvc2l0aW9uLgovLyBAcGFyYW0ge1N0cmluZ30gYXR0cmlidXRlTmFtZSBUaGUgYXR0cmlidXRlIG5hbWUuCi8vIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZSBUaGUgYXR0cmlidXRlIHZhbHVlLgovLyBAcGFyYW0ge0Jvb2xlYW59IGxvb2tCYWNrIFdoZXRoZXIgdGhlIHdhbGsgZGlyZWN0aW9uIGlzIGZvcndhcmQgKGBmYWxzZWApIG9yIGJhY2t3YXJkIChgdHJ1ZWApLgovLyBAcmV0dXJucyB7bW9kdWxlOmVuZ2luZS9tb2RlbC9wb3NpdGlvbn5Qb3NpdGlvbn0gVGhlIHBvc2l0aW9uIGp1c3QgYmVmb3JlIHRoZSBsYXN0IG1hdGNoZWQgbm9kZS4KCmZ1bmN0aW9uIF9maW5kQm91bmQocG9zaXRpb24sIGF0dHJpYnV0ZU5hbWUsIHZhbHVlLCBsb29rQmFjaywgbW9kZWwpIHsKICAvLyBHZXQgbm9kZSBiZWZvcmUgb3IgYWZ0ZXIgcG9zaXRpb24gKGRlcGVuZHMgb24gYGxvb2tCYWNrYCBmbGFnKS4KICAvLyBXaGVuIHBvc2l0aW9uIGlzIGluc2lkZSB0ZXh0IG5vZGUgdGhlbiBzdGFydCBzZWFyY2hpbmcgZnJvbSB0ZXh0IG5vZGUuCiAgdmFyIG5vZGUgPSBwb3NpdGlvbi50ZXh0Tm9kZSB8fCAobG9va0JhY2sgPyBwb3NpdGlvbi5ub2RlQmVmb3JlIDogcG9zaXRpb24ubm9kZUFmdGVyKTsKICB2YXIgbGFzdE5vZGUgPSBudWxsOwoKICB3aGlsZSAobm9kZSAmJiBub2RlLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVOYW1lKSA9PSB2YWx1ZSkgewogICAgbGFzdE5vZGUgPSBub2RlOwogICAgbm9kZSA9IGxvb2tCYWNrID8gbm9kZS5wcmV2aW91c1NpYmxpbmcgOiBub2RlLm5leHRTaWJsaW5nOwogIH0KCiAgcmV0dXJuIGxhc3ROb2RlID8gbW9kZWwuY3JlYXRlUG9zaXRpb25BdChsYXN0Tm9kZSwgbG9va0JhY2sgPyAnYmVmb3JlJyA6ICdhZnRlcicpIDogcG9zaXRpb247Cn0="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/utils/findattributerange.js"],"names":["findAttributeRange","position","attributeName","value","model","createRange","_findBound","lookBack","node","textNode","nodeBefore","nodeAfter","lastNode","getAttribute","previousSibling","nextSibling","createPositionAt"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,kBAAT,CAA6BC,QAA7B,EAAuCC,aAAvC,EAAsDC,KAAtD,EAA6DC,KAA7D,EAAqE;AACnF,SAAOA,KAAK,CAACC,WAAN,CACNC,UAAU,CAAEL,QAAF,EAAYC,aAAZ,EAA2BC,KAA3B,EAAkC,IAAlC,EAAwCC,KAAxC,CADJ,EAENE,UAAU,CAAEL,QAAF,EAAYC,aAAZ,EAA2BC,KAA3B,EAAkC,KAAlC,EAAyCC,KAAzC,CAFJ,CAAP;AAIA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,UAAT,CAAqBL,QAArB,EAA+BC,aAA/B,EAA8CC,KAA9C,EAAqDI,QAArD,EAA+DH,KAA/D,EAAuE;AACtE;AACA;AACA,MAAII,IAAI,GAAGP,QAAQ,CAACQ,QAAT,KAAuBF,QAAQ,GAAGN,QAAQ,CAACS,UAAZ,GAAyBT,QAAQ,CAACU,SAAjE,CAAX;AAEA,MAAIC,QAAQ,GAAG,IAAf;;AAEA,SAAQJ,IAAI,IAAIA,IAAI,CAACK,YAAL,CAAmBX,aAAnB,KAAsCC,KAAtD,EAA8D;AAC7DS,IAAAA,QAAQ,GAAGJ,IAAX;AACAA,IAAAA,IAAI,GAAGD,QAAQ,GAAGC,IAAI,CAACM,eAAR,GAA0BN,IAAI,CAACO,WAA9C;AACA;;AAED,SAAOH,QAAQ,GAAGR,KAAK,CAACY,gBAAN,CAAwBJ,QAAxB,EAAkCL,QAAQ,GAAG,QAAH,GAAc,OAAxD,CAAH,GAAuEN,QAAtF;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/findattributerange\n */\n\n/**\n * Returns a model range that covers all consecutive nodes with the same `attributeName` and its `value`\n * that intersect the given `position`.\n *\n * It can be used e.g. to get the entire range on which the `linkHref` attribute needs to be changed when having a\n * selection inside a link.\n *\n * @param {module:engine/model/position~Position} position The start position.\n * @param {String} attributeName The attribute name.\n * @param {String} value The attribute value.\n * @param {module:engine/model/model~Model} model The model instance.\n * @returns {module:engine/model/range~Range} The link range.\n */\nexport default function findAttributeRange( position, attributeName, value, model ) {\n\treturn model.createRange(\n\t\t_findBound( position, attributeName, value, true, model ),\n\t\t_findBound( position, attributeName, value, false, model )\n\t);\n}\n\n// Walks forward or backward (depends on the `lookBack` flag), node by node, as long as they have the same attribute value\n// and returns a position just before or after (depends on the `lookBack` flag) the last matched node.\n//\n// @param {module:engine/model/position~Position} position The start position.\n// @param {String} attributeName The attribute name.\n// @param {String} value The attribute value.\n// @param {Boolean} lookBack Whether the walk direction is forward (`false`) or backward (`true`).\n// @returns {module:engine/model/position~Position} The position just before the last matched node.\nfunction _findBound( position, attributeName, value, lookBack, model ) {\n\t// Get node before or after position (depends on `lookBack` flag).\n\t// When position is inside text node then start searching from text node.\n\tlet node = position.textNode || ( lookBack ? position.nodeBefore : position.nodeAfter );\n\n\tlet lastNode = null;\n\n\twhile ( node && node.getAttribute( attributeName ) == value ) {\n\t\tlastNode = node;\n\t\tnode = lookBack ? node.previousSibling : node.nextSibling;\n\t}\n\n\treturn lastNode ? model.createPositionAt( lastNode, lookBack ? 'before' : 'after' ) : position;\n}\n"]}]}