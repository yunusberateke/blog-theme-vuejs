{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js"],"names":["Range","EmitterMixin","mix","LiveRange","start","end","bindWithDocument","call","stopListening","type","range","listenTo","root","document","model","event","args","operation","isDocumentOperation","transform","priority","ranges","getTransformedByOperation","result","_createFromRanges","boundariesChanged","isEqual","contentChanged","doesOperationChangeRangeContent","deletionPosition","rootName","sourcePosition","oldRange","toRange","fire","containsPosition","position","targetPosition","splitPosition","insertionPosition"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,GAAP,MAAgB,mCAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,S;;;;;AACpB;AACD;AACA;AACA;AACA;AACC,qBAAaC,KAAb,EAAoBC,GAApB,EAA0B;AAAA;;AAAA;;AACzB,8BAAOD,KAAP,EAAcC,GAAd;AAEAC,IAAAA,gBAAgB,CAACC,IAAjB;AAHyB;AAIzB;AAED;AACD;AACA;AACA;AACA;;;;;WACC,kBAAS;AACR,WAAKC,aAAL;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,YAAIC,IAAJ,EAAW;AACV,aAAOA,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,iBAAjC,IACN;AACAA,MAAAA,IAAI,IAAI,OAFF,IAEaA,IAAI,KAAK,aAF7B;AAGA;AAED;AACD;AACA;AACA;AACA;;;;WACC,mBAAU;AACT,aAAO,IAAIT,KAAJ,CAAW,KAAKI,KAAhB,EAAuB,KAAKC,GAA5B,CAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;;WACC,mBAAkBK,KAAlB,EAA0B;AACzB,aAAO,IAAIP,SAAJ,CAAeO,KAAK,CAACN,KAArB,EAA4BM,KAAK,CAACL,GAAlC,CAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;EAhHuCL,K,GAmHvC;AACA;AACA;AACA;;;SAtHqBG,S;;AAuHrB,SAASG,gBAAT,GAA4B;AAAA;;AAC3B,OAAKK,QAAL,CACC,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,KADpB,EAEC,gBAFD,EAGC,UAAEC,KAAF,EAASC,IAAT,EAAmB;AAClB,QAAMC,SAAS,GAAGD,IAAI,CAAE,CAAF,CAAtB;;AAEA,QAAK,CAACC,SAAS,CAACC,mBAAhB,EAAsC;AACrC;AACA;;AAEDC,IAAAA,SAAS,CAACZ,IAAV,CAAgB,MAAhB,EAAsBU,SAAtB;AACA,GAXF,EAYC;AAAEG,IAAAA,QAAQ,EAAE;AAAZ,GAZD;AAcA,C,CAED;AACA;AACA;AACA;;;AACA,SAASD,SAAT,CAAoBF,SAApB,EAAgC;AAC/B;AACA,MAAMI,MAAM,GAAG,KAAKC,yBAAL,CAAgCL,SAAhC,CAAf;;AACA,MAAMM,MAAM,GAAGvB,KAAK,CAACwB,iBAAN,CAAyBH,MAAzB,CAAf;;AAEA,MAAMI,iBAAiB,GAAG,CAACF,MAAM,CAACG,OAAP,CAAgB,IAAhB,CAA3B;AACA,MAAMC,cAAc,GAAGC,+BAA+B,CAAE,IAAF,EAAQX,SAAR,CAAtD;AAEA,MAAIY,gBAAgB,GAAG,IAAvB;;AAEA,MAAKJ,iBAAL,EAAyB;AACxB;AACA;AACA,QAAKF,MAAM,CAACX,IAAP,CAAYkB,QAAZ,IAAwB,YAA7B,EAA4C;AAC3C;AACA,UAAKb,SAAS,CAACR,IAAV,IAAkB,QAAvB,EAAkC;AACjCoB,QAAAA,gBAAgB,GAAGZ,SAAS,CAACc,cAA7B;AACA,OAFD,MAEO;AACN;AACAF,QAAAA,gBAAgB,GAAGZ,SAAS,CAACY,gBAA7B;AACA;AACD;;AAED,QAAMG,QAAQ,GAAG,KAAKC,OAAL,EAAjB;AAEA,SAAK7B,KAAL,GAAamB,MAAM,CAACnB,KAApB;AACA,SAAKC,GAAL,GAAWkB,MAAM,CAAClB,GAAlB;AAEA,SAAK6B,IAAL,CAAW,cAAX,EAA2BF,QAA3B,EAAqC;AAAEH,MAAAA,gBAAgB,EAAhBA;AAAF,KAArC;AACA,GAnBD,MAmBO,IAAKF,cAAL,EAAsB;AAC5B;AACA,SAAKO,IAAL,CAAW,gBAAX,EAA6B,KAAKD,OAAL,EAA7B,EAA6C;AAAEJ,MAAAA,gBAAgB,EAAhBA;AAAF,KAA7C;AACA;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASD,+BAAT,CAA0ClB,KAA1C,EAAiDO,SAAjD,EAA6D;AAC5D,UAASA,SAAS,CAACR,IAAnB;AACC,SAAK,QAAL;AACC,aAAOC,KAAK,CAACyB,gBAAN,CAAwBlB,SAAS,CAACmB,QAAlC,CAAP;;AACD,SAAK,MAAL;AACA,SAAK,QAAL;AACA,SAAK,UAAL;AACA,SAAK,OAAL;AACC,aAAO1B,KAAK,CAACyB,gBAAN,CAAwBlB,SAAS,CAACc,cAAlC,KACNrB,KAAK,CAACN,KAAN,CAAYsB,OAAZ,CAAqBT,SAAS,CAACc,cAA/B,CADM,IAENrB,KAAK,CAACyB,gBAAN,CAAwBlB,SAAS,CAACoB,cAAlC,CAFD;;AAGD,SAAK,OAAL;AACC,aAAO3B,KAAK,CAACyB,gBAAN,CAAwBlB,SAAS,CAACqB,aAAlC,KAAqD5B,KAAK,CAACyB,gBAAN,CAAwBlB,SAAS,CAACsB,iBAAlC,CAA5D;AAXF;;AAcA,SAAO,KAAP;AACA;;AAEDrC,GAAG,CAAEC,SAAF,EAAaF,YAAb,CAAH","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/liverange\n */\n\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * `LiveRange` is a type of {@link module:engine/model/range~Range Range}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Be very careful when dealing with `LiveRange`. Each `LiveRange` instance bind events that might\n * have to be unbound. Use {@link module:engine/model/liverange~LiveRange#detach detach} whenever you don't need `LiveRange` anymore.\n */\nexport default class LiveRange extends Range {\n\t/**\n\t * Creates a live range.\n\t *\n\t * @see module:engine/model/range~Range\n\t */\n\tconstructor( start, end ) {\n\t\tsuper( start, end );\n\n\t\tbindWithDocument.call( this );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by `LiveRange`. Use it whenever you don't need `LiveRange` instance\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n\t * referring to it).\n\t */\n\tdetach() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tliveRange.is( 'range' ); // -> true\n\t *\t\tliveRange.is( 'model:range' ); // -> true\n\t *\t\tliveRange.is( 'liveRange' ); // -> true\n\t *\t\tliveRange.is( 'model:liveRange' ); // -> true\n\t *\n\t *\t\tliveRange.is( 'view:range' ); // -> false\n\t *\t\tliveRange.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'liveRange' || type === 'model:liveRange' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype == 'range' || type === 'model:range';\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/range~Range range instance} that is equal to this live range.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\ttoRange() {\n\t\treturn new Range( this.start, this.end );\n\t}\n\n\t/**\n\t * Creates a `LiveRange` instance that is equal to the given range.\n\t *\n\t * @param {module:engine/model/range~Range} range\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\tstatic fromRange( range ) {\n\t\treturn new LiveRange( range.start, range.end );\n\t}\n\n\t/**\n\t * @see module:engine/model/range~Range._createIn\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createIn\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range._createOn\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createOn\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range._createFromPositionAndShift\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createFromPositionAndShift\n\t * @param {module:engine/model/position~Position} position\n\t * @param {Number} shift\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * Fired when `LiveRange` instance boundaries have changed due to changes in the\n\t * {@link module:engine/model/document~Document document}.\n\t *\n\t * @event change:range\n\t * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of this live\n\t * range before it got changed.\n\t * @param {Object} data Object with additional information about the change.\n\t * @param {module:engine/model/position~Position|null} data.deletionPosition Source position for remove and merge changes.\n\t * Available if the range was moved to the graveyard root, `null` otherwise.\n\t */\n\n\t/**\n\t * Fired when `LiveRange` instance boundaries have not changed after a change in {@link module:engine/model/document~Document document}\n\t * but the change took place inside the range, effectively changing its content.\n\t *\n\t * @event change:content\n\t * @param {module:engine/model/range~Range} range Range with start and end position equal to start and end position of\n\t * change range.\n\t * @param {Object} data Object with additional information about the change.\n\t * @param {null} data.deletionPosition Due to the nature of this event, this property is always set to `null`. It is passed\n\t * for compatibility with the {@link module:engine/model/liverange~LiveRange#event:change:range} event.\n\t */\n}\n\n// Binds this `LiveRange` to the {@link module:engine/model/document~Document document}\n// that owns this range's {@link module:engine/model/range~Range#root root}.\n//\n// @private\nfunction bindWithDocument() {\n\tthis.listenTo(\n\t\tthis.root.document.model,\n\t\t'applyOperation',\n\t\t( event, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttransform.call( this, operation );\n\t\t},\n\t\t{ priority: 'low' }\n\t);\n}\n\n// Updates this range accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\nfunction transform( operation ) {\n\t// Transform the range by the operation. Join the result ranges if needed.\n\tconst ranges = this.getTransformedByOperation( operation );\n\tconst result = Range._createFromRanges( ranges );\n\n\tconst boundariesChanged = !result.isEqual( this );\n\tconst contentChanged = doesOperationChangeRangeContent( this, operation );\n\n\tlet deletionPosition = null;\n\n\tif ( boundariesChanged ) {\n\t\t// If range boundaries have changed, fire `change:range` event.\n\t\t//\n\t\tif ( result.root.rootName == '$graveyard' ) {\n\t\t\t// If the range was moved to the graveyard root, set `deletionPosition`.\n\t\t\tif ( operation.type == 'remove' ) {\n\t\t\t\tdeletionPosition = operation.sourcePosition;\n\t\t\t} else {\n\t\t\t\t// Merge operation.\n\t\t\t\tdeletionPosition = operation.deletionPosition;\n\t\t\t}\n\t\t}\n\n\t\tconst oldRange = this.toRange();\n\n\t\tthis.start = result.start;\n\t\tthis.end = result.end;\n\n\t\tthis.fire( 'change:range', oldRange, { deletionPosition } );\n\t} else if ( contentChanged ) {\n\t\t// If range boundaries have not changed, but there was change inside the range, fire `change:content` event.\n\t\tthis.fire( 'change:content', this.toRange(), { deletionPosition } );\n\t}\n}\n\n// Checks whether given operation changes something inside the range (even if it does not change boundaries).\n//\n// @private\n// @param {module:engine/model/range~Range} range Range to check.\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n// @returns {Boolean}\nfunction doesOperationChangeRangeContent( range, operation ) {\n\tswitch ( operation.type ) {\n\t\tcase 'insert':\n\t\t\treturn range.containsPosition( operation.position );\n\t\tcase 'move':\n\t\tcase 'remove':\n\t\tcase 'reinsert':\n\t\tcase 'merge':\n\t\t\treturn range.containsPosition( operation.sourcePosition ) ||\n\t\t\t\trange.start.isEqual( operation.sourcePosition ) ||\n\t\t\t\trange.containsPosition( operation.targetPosition );\n\t\tcase 'split':\n\t\t\treturn range.containsPosition( operation.splitPosition ) || range.containsPosition( operation.insertionPosition );\n\t}\n\n\treturn false;\n}\n\nmix( LiveRange, EmitterMixin );\n"]}]}