{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js"],"names":["Operation","Position","Range","CKEditorError","compareArrays","_move","MoveOperation","sourcePosition","howMany","targetPosition","baseVersion","clone","stickiness","root","rootName","constructor","_getTransformedByDeletion","newTargetPosition","_getTransformedByInsertion","getMovedRangeStart","sourceElement","parent","targetElement","sourceOffset","offset","targetOffset","maxOffset","getParentPath","i","path","length","_createFromPositionAndShift","json","toJSON","document","fromJSON"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/moveoperation\n */\n\nimport Operation from './operation';\nimport Position from '../position';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { _move } from './utils';\n\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\n\n/**\n * Operation to move a range of {@link module:engine/model/item~Item model items}\n * to given {@link module:engine/model/position~Position target position}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MoveOperation extends Operation {\n\t/**\n\t * Creates a move operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition\n\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n\t * `sourcePosition` with offset shifted by `howMany`.\n\t * @param {module:engine/model/position~Position} targetPosition Position at which moved nodes will be inserted.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( sourcePosition, howMany, targetPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#sourcePosition\n\t\t */\n\t\tthis.sourcePosition = sourcePosition.clone();\n\t\t// `'toNext'` because `sourcePosition` is a bit like a start of the moved range.\n\t\tthis.sourcePosition.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Offset size of moved range.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/moveoperation~MoveOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position at which moved nodes will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#targetPosition\n\t\t */\n\t\tthis.targetPosition = targetPosition.clone();\n\t\tthis.targetPosition.stickiness = 'toNone';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.targetPosition.root.rootName == '$graveyard' ) {\n\t\t\treturn 'remove';\n\t\t} else if ( this.sourcePosition.root.rootName == '$graveyard' ) {\n\t\t\treturn 'reinsert';\n\t\t}\n\n\t\treturn 'move';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion );\n\t}\n\n\t/**\n\t * Returns the start position of the moved range after it got moved. This may be different than\n\t * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition} in some cases, i.e. when a range is moved\n\t * inside the same parent but {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition targetPosition}\n\t * is after {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition sourcePosition}.\n\t *\n\t *\t\t vv              vv\n\t *\t\tabcdefg ===> adefbcg\n\t *\t\t     ^          ^\n\t *\t\t     targetPos\tmovedRangeStart\n\t *\t\t     offset 6\toffset 4\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetMovedRangeStart() {\n\t\treturn this.targetPosition._getTransformedByDeletion( this.sourcePosition, this.howMany );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tgetReversed() {\n\t\tconst newTargetPosition = this.sourcePosition._getTransformedByInsertion( this.targetPosition, this.howMany );\n\n\t\treturn new this.constructor( this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst sourceElement = this.sourcePosition.parent;\n\t\tconst targetElement = this.targetPosition.parent;\n\t\tconst sourceOffset = this.sourcePosition.offset;\n\t\tconst targetOffset = this.targetPosition.offset;\n\n\t\t// Validate whether move operation has correct parameters.\n\t\t// Validation is pretty complex but move operation is one of the core ways to manipulate the document state.\n\t\t// We expect that many errors might be connected with one of scenarios described below.\n\t\tif ( sourceOffset + this.howMany > sourceElement.maxOffset ) {\n\t\t\t/**\n\t\t\t * The nodes which should be moved do not exist.\n\t\t\t *\n\t\t\t * @error move-operation-nodes-do-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-nodes-do-not-exist', this\n\t\t\t);\n\t\t} else if ( sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany ) {\n\t\t\t/**\n\t\t\t * Trying to move a range of nodes into the middle of that range.\n\t\t\t *\n\t\t\t * @error move-operation-range-into-itself\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-range-into-itself', this\n\t\t\t);\n\t\t} else if ( this.sourcePosition.root == this.targetPosition.root ) {\n\t\t\tif ( compareArrays( this.sourcePosition.getParentPath(), this.targetPosition.getParentPath() ) == 'prefix' ) {\n\t\t\t\tconst i = this.sourcePosition.path.length - 1;\n\n\t\t\t\tif ( this.targetPosition.path[ i ] >= sourceOffset && this.targetPosition.path[ i ] < sourceOffset + this.howMany ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Trying to move a range of nodes into one of nodes from that range.\n\t\t\t\t\t *\n\t\t\t\t\t * @error move-operation-node-into-itself\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'move-operation-node-into-itself', this\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t_move( Range._createFromPositionAndShift( this.sourcePosition, this.howMany ), this.targetPosition );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.sourcePosition = this.sourcePosition.toJSON();\n\t\tjson.targetPosition = this.targetPosition.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'MoveOperation';\n\t}\n\n\t/**\n\t * Creates `MoveOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\n\t\tconst targetPosition = Position.fromJSON( json.targetPosition, document );\n\n\t\treturn new this( sourcePosition, json.howMany, targetPosition, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \tconst range = ModelRange._createFromPositionAndShift( this.sourcePosition, this.howMany );\n\n\t// @if CK_DEBUG_ENGINE //\treturn `MoveOperation( ${ this.baseVersion } ): ${ range } -> ${ this.targetPosition }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n"]}]}