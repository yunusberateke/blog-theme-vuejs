{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon.js"],"names":["Plugin","BalloonPanelView","View","ButtonView","CKEditorError","FocusTracker","toUnit","Rect","prevIcon","nextIcon","toPx","ContextualBalloon","editor","positionLimiter","view","editing","viewDocument","document","editableElement","selection","domConverter","mapViewToDom","root","set","locale","ui","body","add","focusTracker","element","_viewToStack","Map","_idToStack","_rotatorView","_createRotatorView","_fakePanelsView","_createFakePanelsView","Array","from","keys","includes","data","hasView","stackId","has","get","_numberOfStacks","size","_visibleStack","singleViewMode","showStack","stack","_showView","_singleViewMode","visibleView","_showNextStack","hide","hideView","values","delete","_getStackId","position","pin","_getBalloonPosition","updatePosition","id","visibleStack","pop","entry","entries","find","stacks","nextIndex","indexOf","length","RotatorView","t","content","bind","to","value","isSingleViewMode","on","priority","numberOfStacks","current","buttonNextView","isFocused","focus","buttonPrevView","_showPrevStack","FakePanelsView","number","showPanels","Math","min","listenTo","balloonClassName","withArrow","class","showView","limiter","Object","assign","bindTemplate","_createButtonView","createCollection","setTemplate","tag","attributes","children","text","clear","label","icon","tooltip","balloonPanelView","_balloonPanelView","style","top","left","width","height","evt","name","next","prev","_addPanels","_removePanels","registerChild","last","remove","deregisterChild","destroy","numberOfPanels"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/panel/balloon/contextualballoon\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport BalloonPanelView from './balloonpanelview';\nimport View from '../../view';\nimport ButtonView from '../../button/buttonview';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\n\nimport prevIcon from '../../../theme/icons/previous-arrow.svg';\nimport nextIcon from '../../../theme/icons/next-arrow.svg';\n\nimport '../../../theme/components/panel/balloonrotator.css';\nimport '../../../theme/components/panel/fakepanel.css';\n\nconst toPx = toUnit( 'px' );\n\n/**\n * Provides the common contextual balloon for the editor.\n *\n * The role of this plugin is to unify the contextual balloons logic, simplify views management and help\n * avoid the unnecessary complexity of handling multiple {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n * instances in the editor.\n *\n * This plugin allows for creating single or multiple panel stacks.\n *\n * Each stack may have multiple views, with the one on the top being visible. When the visible view is removed from the stack,\n * the previous view becomes visible.\n *\n * It might be useful to implement nested navigation in a balloon. For instance, a toolbar view may contain a link button.\n * When you click it, a link view (which lets you set the URL) is created and put on top of the toolbar view, so the link panel\n * is displayed. When you finish editing the link and close (remove) the link view, the toolbar view is visible again.\n *\n * However, there are cases when there are multiple independent balloons to be displayed, for instance, if the selection\n * is inside two inline comments at the same time. For such cases, you can create two independent panel stacks.\n * The contextual balloon plugin will create a navigation bar to let the users switch between these panel stacks using the \"Next\"\n * and \"Previous\" buttons.\n *\n * If there are no views in the current stack, the balloon panel will try to switch to the next stack. If there are no\n * panels in any stack, the balloon panel will be hidden.\n *\n * **Note**: To force the balloon panel to show only one view, even if there are other stacks, use the `singleViewMode=true` option\n * when {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon#add adding} a view to a panel.\n *\n * From the implementation point of view, the contextual ballon plugin is reusing a single\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView} instance to display multiple contextual balloon\n * panels in the editor. It also creates a special {@link module:ui/panel/balloon/contextualballoon~RotatorView rotator view},\n * used to manage multiple panel stacks. Rotator view is a child of the balloon panel view and the parent of the specific\n * view you want to display. If there is more than one panel stack to be displayed, the rotator view will add a\n * navigation bar. If there is only one stack, the rotator view is transparent (it does not add any UI elements).\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ContextualBalloon extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ContextualBalloon';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The {@link module:utils/dom/position~Options#limiter position limiter}\n\t\t * for the {@link #view balloon}, used when no `limiter` has been passed into {@link #add}\n\t\t * or {@link #updatePosition}.\n\t\t *\n\t\t * By default, a function that obtains the farthest DOM\n\t\t * {@link module:engine/view/rooteditableelement~RootEditableElement}\n\t\t * of the {@link module:engine/view/document~Document#selection}.\n\t\t *\n\t\t * @member {module:utils/dom/position~Options#limiter} #positionLimiter\n\t\t */\n\t\tthis.positionLimiter = () => {\n\t\t\tconst view = this.editor.editing.view;\n\t\t\tconst viewDocument = view.document;\n\t\t\tconst editableElement = viewDocument.selection.editableElement;\n\n\t\t\tif ( editableElement ) {\n\t\t\t\treturn view.domConverter.mapViewToDom( editableElement.root );\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t/**\n\t\t * The currently visible view or `null` when there are no views in any stack.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {module:ui/view~View|null} #visibleView\n\t\t */\n\t\tthis.set( 'visibleView', null );\n\n\t\t/**\n\t\t * The common balloon panel view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/panel/balloon/balloonpanelview~BalloonPanelView} #view\n\t\t */\n\t\tthis.view = new BalloonPanelView( editor.locale );\n\t\teditor.ui.view.body.add( this.view );\n\t\teditor.ui.focusTracker.add( this.view.element );\n\n\t\t/**\n\t\t * The map of views and their stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<module:ui/view~View,Set>}\n\t\t */\n\t\tthis._viewToStack = new Map();\n\n\t\t/**\n\t\t * The map of IDs and stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<String,Set>}\n\t\t */\n\t\tthis._idToStack = new Map();\n\n\t\t/**\n\t\t * A total number of all stacks in the balloon.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #_numberOfStacks\n\t\t */\n\t\tthis.set( '_numberOfStacks', 0 );\n\n\t\t/**\n\t\t * A flag that controls the single view mode.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_singleViewMode\n\t\t */\n\t\tthis.set( '_singleViewMode', false );\n\n\t\t/**\n\t\t * Rotator view embedded in the contextual balloon.\n\t\t * Displays the currently visible view in the balloon and provides navigation for switching stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {module:ui/panel/balloon/contextualballoon~RotatorView}\n\t\t */\n\t\tthis._rotatorView = this._createRotatorView();\n\n\t\t/**\n\t\t * Displays fake panels under the balloon panel view when multiple stacks are added to the balloon.\n\t\t *\n\t\t * @private\n\t\t * @type {module:ui/view~View}\n\t\t */\n\t\tthis._fakePanelsView = this._createFakePanelsView();\n\t}\n\n\t/**\n\t * Returns `true` when the given view is in one of the stacks. Otherwise returns `false`.\n\t *\n\t * @param {module:ui/view~View} view\n\t * @returns {Boolean}\n\t */\n\thasView( view ) {\n\t\treturn Array.from( this._viewToStack.keys() ).includes( view );\n\t}\n\n\t/**\n\t * Adds a new view to the stack and makes it visible if the current stack is visible\n\t * or it is the first view in the balloon.\n\t *\n\t * @param {Object} data The configuration of the view.\n\t * @param {String} [data.stackId='main'] The ID of the stack that the view is added to.\n\t * @param {module:ui/view~View} [data.view] The content of the balloon.\n\t * @param {module:utils/dom/position~Options} [data.position] Positioning options.\n\t * @param {String} [data.balloonClassName] An additional CSS class added to the {@link #view balloon} when visible.\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\n\t * @param {Boolean} [data.singleViewMode=false] Whether the view should be the only visible view even if other stacks were added.\n\t */\n\tadd( data ) {\n\t\tif ( this.hasView( data.view ) ) {\n\t\t\t/**\n\t\t\t * Trying to add configuration of the same view more than once.\n\t\t\t *\n\t\t\t * @error contextualballoon-add-view-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-add-view-exist',\n\t\t\t\t[ this, data ]\n\t\t\t);\n\t\t}\n\n\t\tconst stackId = data.stackId || 'main';\n\n\t\t// If new stack is added, creates it and show view from this stack.\n\t\tif ( !this._idToStack.has( stackId ) ) {\n\t\t\tthis._idToStack.set( stackId, new Map( [ [ data.view, data ] ] ) );\n\t\t\tthis._viewToStack.set( data.view, this._idToStack.get( stackId ) );\n\t\t\tthis._numberOfStacks = this._idToStack.size;\n\n\t\t\tif ( !this._visibleStack || data.singleViewMode ) {\n\t\t\t\tthis.showStack( stackId );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst stack = this._idToStack.get( stackId );\n\n\t\tif ( data.singleViewMode ) {\n\t\t\tthis.showStack( stackId );\n\t\t}\n\n\t\t// Add new view to the stack.\n\t\tstack.set( data.view, data );\n\t\tthis._viewToStack.set( data.view, stack );\n\n\t\t// And display it if is added to the currently visible stack.\n\t\tif ( stack === this._visibleStack ) {\n\t\t\tthis._showView( data );\n\t\t}\n\t}\n\n\t/**\n\t * Removes the given view from the stack. If the removed view was visible,\n\t * the view preceding it in the stack will become visible instead.\n\t * When there is no view in the stack, the next stack will be displayed.\n\t * When there are no more stacks, the balloon will hide.\n\t *\n\t * @param {module:ui/view~View} view A view to be removed from the balloon.\n\t */\n\tremove( view ) {\n\t\tif ( !this.hasView( view ) ) {\n\t\t\t/**\n\t\t\t * Trying to remove the configuration of the view not defined in the stack.\n\t\t\t *\n\t\t\t * @error contextualballoon-remove-view-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-remove-view-not-exist',\n\t\t\t\t[ this, view ]\n\t\t\t);\n\t\t}\n\n\t\tconst stack = this._viewToStack.get( view );\n\n\t\tif ( this._singleViewMode && this.visibleView === view ) {\n\t\t\tthis._singleViewMode = false;\n\t\t}\n\n\t\t// When visible view will be removed we need to show a preceding view or next stack\n\t\t// if a view is the only view in the stack.\n\t\tif ( this.visibleView === view ) {\n\t\t\tif ( stack.size === 1 ) {\n\t\t\t\tif ( this._idToStack.size > 1 ) {\n\t\t\t\t\tthis._showNextStack();\n\t\t\t\t} else {\n\t\t\t\t\tthis.view.hide();\n\t\t\t\t\tthis.visibleView = null;\n\t\t\t\t\tthis._rotatorView.hideView();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._showView( Array.from( stack.values() )[ stack.size - 2 ] );\n\t\t\t}\n\t\t}\n\n\t\tif ( stack.size === 1 ) {\n\t\t\tthis._idToStack.delete( this._getStackId( stack ) );\n\t\t\tthis._numberOfStacks = this._idToStack.size;\n\t\t} else {\n\t\t\tstack.delete( view );\n\t\t}\n\n\t\tthis._viewToStack.delete( view );\n\t}\n\n\t/**\n\t * Updates the position of the balloon using the position data of the first visible view in the stack.\n\t * When new position data is given, the position data of the currently visible view will be updated.\n\t *\n\t * @param {module:utils/dom/position~Options} [position] position options.\n\t */\n\tupdatePosition( position ) {\n\t\tif ( position ) {\n\t\t\tthis._visibleStack.get( this.visibleView ).position = position;\n\t\t}\n\n\t\tthis.view.pin( this._getBalloonPosition() );\n\t\tthis._fakePanelsView.updatePosition();\n\t}\n\n\t/**\n\t * Shows the last view from the stack of a given ID.\n\t *\n\t * @param {String} id\n\t */\n\tshowStack( id ) {\n\t\tthis.visibleStack = id;\n\t\tconst stack = this._idToStack.get( id );\n\n\t\tif ( !stack ) {\n\t\t\t/**\n\t\t\t * Trying to show a stack that does not exist.\n\t\t\t *\n\t\t\t * @error contextualballoon-showstack-stack-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-showstack-stack-not-exist',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tif ( this._visibleStack === stack ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._showView( Array.from( stack.values() ).pop() );\n\t}\n\n\t/**\n\t * Returns the stack of the currently visible view.\n\t *\n\t * @private\n\t * @type {Set}\n\t */\n\tget _visibleStack() {\n\t\treturn this._viewToStack.get( this.visibleView );\n\t}\n\n\t/**\n\t * Returns the ID of the given stack.\n\t *\n\t * @private\n\t * @param {Set} stack\n\t * @returns {String}\n\t */\n\t_getStackId( stack ) {\n\t\tconst entry = Array.from( this._idToStack.entries() ).find( entry => entry[ 1 ] === stack );\n\n\t\treturn entry[ 0 ];\n\t}\n\n\t/**\n\t * Shows the last view from the next stack.\n\t *\n\t * @private\n\t */\n\t_showNextStack() {\n\t\tconst stacks = Array.from( this._idToStack.values() );\n\n\t\tlet nextIndex = stacks.indexOf( this._visibleStack ) + 1;\n\n\t\tif ( !stacks[ nextIndex ] ) {\n\t\t\tnextIndex = 0;\n\t\t}\n\n\t\tthis.showStack( this._getStackId( stacks[ nextIndex ] ) );\n\t}\n\n\t/**\n\t * Shows the last view from the previous stack.\n\t *\n\t * @private\n\t */\n\t_showPrevStack() {\n\t\tconst stacks = Array.from( this._idToStack.values() );\n\n\t\tlet nextIndex = stacks.indexOf( this._visibleStack ) - 1;\n\n\t\tif ( !stacks[ nextIndex ] ) {\n\t\t\tnextIndex = stacks.length - 1;\n\t\t}\n\n\t\tthis.showStack( this._getStackId( stacks[ nextIndex ] ) );\n\t}\n\n\t/**\n\t * Creates a rotator view.\n\t *\n\t * @private\n\t * @returns {module:ui/panel/balloon/contextualballoon~RotatorView}\n\t */\n\t_createRotatorView() {\n\t\tconst view = new RotatorView( this.editor.locale );\n\t\tconst t = this.editor.locale.t;\n\n\t\tthis.view.content.add( view );\n\n\t\t// Hide navigation when there is only a one stack & not in single view mode.\n\t\tview.bind( 'isNavigationVisible' ).to( this, '_numberOfStacks', this, '_singleViewMode', ( value, isSingleViewMode ) => {\n\t\t\treturn !isSingleViewMode && value > 1;\n\t\t} );\n\n\t\t// Update balloon position after toggling navigation.\n\t\tview.on( 'change:isNavigationVisible', () => ( this.updatePosition() ), { priority: 'low' } );\n\n\t\t// Update stacks counter value.\n\t\tview.bind( 'counter' ).to( this, 'visibleView', this, '_numberOfStacks', ( visibleView, numberOfStacks ) => {\n\t\t\tif ( numberOfStacks < 2 ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst current = Array.from( this._idToStack.values() ).indexOf( this._visibleStack ) + 1;\n\n\t\t\treturn t( '%0 of %1', [ current, numberOfStacks ] );\n\t\t} );\n\n\t\tview.buttonNextView.on( 'execute', () => {\n\t\t\t// When current view has a focus then move focus to the editable before removing it,\n\t\t\t// otherwise editor will lost focus.\n\t\t\tif ( view.focusTracker.isFocused ) {\n\t\t\t\tthis.editor.editing.view.focus();\n\t\t\t}\n\n\t\t\tthis._showNextStack();\n\t\t} );\n\n\t\tview.buttonPrevView.on( 'execute', () => {\n\t\t\t// When current view has a focus then move focus to the editable before removing it,\n\t\t\t// otherwise editor will lost focus.\n\t\t\tif ( view.focusTracker.isFocused ) {\n\t\t\t\tthis.editor.editing.view.focus();\n\t\t\t}\n\n\t\t\tthis._showPrevStack();\n\t\t} );\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * @private\n\t * @returns {module:ui/view~View}\n\t */\n\t_createFakePanelsView() {\n\t\tconst view = new FakePanelsView( this.editor.locale, this.view );\n\n\t\tview.bind( 'numberOfPanels' ).to( this, '_numberOfStacks', this, '_singleViewMode', ( number, isSingleViewMode ) => {\n\t\t\tconst showPanels = !isSingleViewMode && number >= 2;\n\n\t\t\treturn showPanels ? Math.min( number - 1, 2 ) : 0;\n\t\t} );\n\n\t\tview.listenTo( this.view, 'change:top', () => view.updatePosition() );\n\t\tview.listenTo( this.view, 'change:left', () => view.updatePosition() );\n\n\t\tthis.editor.ui.view.body.add( view );\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * Sets the view as the content of the balloon and attaches the balloon using position\n\t * options of the first view.\n\t *\n\t * @private\n\t * @param {Object} data Configuration.\n\t * @param {module:ui/view~View} [data.view] The view to show in the balloon.\n\t * @param {String} [data.balloonClassName=''] Additional class name which will be added to the {@link #view balloon}.\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\n\t */\n\t_showView( { view, balloonClassName = '', withArrow = true, singleViewMode = false } ) {\n\t\tthis.view.class = balloonClassName;\n\t\tthis.view.withArrow = withArrow;\n\n\t\tthis._rotatorView.showView( view );\n\t\tthis.visibleView = view;\n\t\tthis.view.pin( this._getBalloonPosition() );\n\t\tthis._fakePanelsView.updatePosition();\n\n\t\tif ( singleViewMode ) {\n\t\t\tthis._singleViewMode = true;\n\t\t}\n\t}\n\n\t/**\n\t * Returns position options of the last view in the stack.\n\t * This keeps the balloon in the same position when the view is changed.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n\t_getBalloonPosition() {\n\t\tlet position = Array.from( this._visibleStack.values() ).pop().position;\n\n\t\t// Use the default limiter if none has been specified.\n\t\tif ( position && !position.limiter ) {\n\t\t\t// Don't modify the original options object.\n\t\t\tposition = Object.assign( {}, position, {\n\t\t\t\tlimiter: this.positionLimiter\n\t\t\t} );\n\t\t}\n\n\t\treturn position;\n\t}\n}\n\n/**\n * Rotator view is a helper class for the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon}.\n * It is used for displaying the last view from the current stack and providing navigation buttons for switching stacks.\n * See the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon} documentation to learn more.\n *\n * @extends module:ui/view~View\n */\nclass RotatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Defines whether navigation is visible or not.\n\t\t *\n\t\t * @member {Boolean} #isNavigationVisible\n\t\t */\n\t\tthis.set( 'isNavigationVisible', true );\n\n\t\t/**\n\t\t * Used for checking if a view is focused or not.\n\t\t *\n\t\t * @type {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Navigation button for switching the stack to the previous one.\n\t\t *\n\t\t * @type {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.buttonPrevView = this._createButtonView( t( 'Previous' ), prevIcon );\n\n\t\t/**\n\t\t * Navigation button for switching the stack to the next one.\n\t\t *\n\t\t * @type {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.buttonNextView = this._createButtonView( t( 'Next' ), nextIcon );\n\n\t\t/**\n\t\t * A collection of the child views that creates the rotator content.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-balloon-rotator'\n\t\t\t\t],\n\t\t\t\t'z-index': '-1'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck-balloon-rotator__navigation',\n\t\t\t\t\t\t\tbind.to( 'isNavigationVisible', value => value ? '' : 'ck-hidden' )\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.buttonPrevView,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t\t\t'ck-balloon-rotator__counter'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: bind.to( 'counter' )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.buttonNextView\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-balloon-rotator__content'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.content\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.focusTracker.add( this.element );\n\t}\n\n\t/**\n\t * Shows a given view.\n\t *\n\t * @param {module:ui/view~View} view The view to show.\n\t */\n\tshowView( view ) {\n\t\tthis.hideView();\n\t\tthis.content.add( view );\n\t}\n\n\t/**\n\t * Hides the currently displayed view.\n\t */\n\thideView() {\n\t\tthis.content.clear();\n\t}\n\n\t/**\n\t * Creates a navigation button view.\n\t *\n\t * @private\n\t * @param {String} label The button label.\n\t * @param {String} icon The button icon.\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_createButtonView( label, icon ) {\n\t\tconst view = new ButtonView( this.locale );\n\n\t\tview.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\treturn view;\n\t}\n}\n\n// Displays additional layers under the balloon when multiple stacks are added to the balloon.\n//\n// @private\n// @extends module:ui/view~View\nclass FakePanelsView extends View {\n\t// @inheritDoc\n\tconstructor( locale, balloonPanelView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t// Fake panels top offset.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #top\n\t\tthis.set( 'top', 0 );\n\n\t\t// Fake panels left offset.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #left\n\t\tthis.set( 'left', 0 );\n\n\t\t// Fake panels height.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #height\n\t\tthis.set( 'height', 0 );\n\n\t\t// Fake panels width.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #width\n\t\tthis.set( 'width', 0 );\n\n\t\t// Number of rendered fake panels.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #numberOfPanels\n\t\tthis.set( 'numberOfPanels', 0 );\n\n\t\t// Collection of the child views which creates fake panel content.\n\t\t//\n\t\t// @readonly\n\t\t// @type {module:ui/viewcollection~ViewCollection}\n\t\tthis.content = this.createCollection();\n\n\t\t// Context.\n\t\t//\n\t\t// @private\n\t\t// @type {module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n\t\tthis._balloonPanelView = balloonPanelView;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-fake-panel',\n\t\t\t\t\tbind.to( 'numberOfPanels', number => number ? '' : 'ck-hidden' )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx ),\n\t\t\t\t\twidth: bind.to( 'width', toPx ),\n\t\t\t\t\theight: bind.to( 'height', toPx )\n\t\t\t\t}\n\t\t\t},\n\t\t\tchildren: this.content\n\t\t} );\n\n\t\tthis.on( 'change:numberOfPanels', ( evt, name, next, prev ) => {\n\t\t\tif ( next > prev ) {\n\t\t\t\tthis._addPanels( next - prev );\n\t\t\t} else {\n\t\t\t\tthis._removePanels( prev - next );\n\t\t\t}\n\n\t\t\tthis.updatePosition();\n\t\t} );\n\t}\n\n\t// @private\n\t// @param {Number} number\n\t_addPanels( number ) {\n\t\twhile ( number-- ) {\n\t\t\tconst view = new View();\n\n\t\t\tview.setTemplate( { tag: 'div' } );\n\n\t\t\tthis.content.add( view );\n\t\t\tthis.registerChild( view );\n\t\t}\n\t}\n\n\t// @private\n\t// @param {Number} number\n\t_removePanels( number ) {\n\t\twhile ( number-- ) {\n\t\t\tconst view = this.content.last;\n\n\t\t\tthis.content.remove( view );\n\t\t\tthis.deregisterChild( view );\n\t\t\tview.destroy();\n\t\t}\n\t}\n\n\t// Updates coordinates of fake panels.\n\tupdatePosition() {\n\t\tif ( this.numberOfPanels ) {\n\t\t\tconst { top, left } = this._balloonPanelView;\n\t\t\tconst { width, height } = new Rect( this._balloonPanelView.element );\n\n\t\t\tObject.assign( this, { top, left, width, height } );\n\t\t}\n\t}\n}\n"]}]}