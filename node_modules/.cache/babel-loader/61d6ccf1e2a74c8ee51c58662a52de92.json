{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/utils/utils.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/utils/utils.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKCi8qKgogKiBAbGljZW5zZSBDb3B5cmlnaHQgKGMpIDIwMDMtMjAyMSwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICogRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cHM6Ly9ja2VkaXRvci5jb20vbGVnYWwvY2tlZGl0b3Itb3NzLWxpY2Vuc2UKICovCgovKioKICogQG1vZHVsZSB0eXBpbmcvdXRpbHMvdXRpbHMKICovCmltcG9ydCBkaWZmIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2RpZmYnOwppbXBvcnQgZGlmZlRvQ2hhbmdlcyBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXV0aWxzL3NyYy9kaWZmdG9jaGFuZ2VzJzsKLyoqCiAqIFJldHVybnMgdHJ1ZSBpZiBjb250YWluZXIgY2hpbGRyZW4gaGF2ZSBtdXRhdGVkIG9yIG1vcmUgdGhhbiBhIHNpbmdsZSB0ZXh0IG5vZGUgd2FzIGNoYW5nZWQuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7QXJyYXkuPG1vZHVsZTplbmdpbmUvdmlldy9vYnNlcnZlci9tdXRhdGlvbm9ic2VydmVyfk11dGF0ZWRUZXh0fAogKiBtb2R1bGU6ZW5naW5lL3ZpZXcvb2JzZXJ2ZXIvbXV0YXRpb25vYnNlcnZlcn5NdXRhdGVkQ2hpbGRyZW4+fSBtdXRhdGlvbnMKICogQHJldHVybnMge0Jvb2xlYW59CiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGNvbnRhaW5lckNoaWxkcmVuTXV0YXRlZChtdXRhdGlvbnMpIHsKICBpZiAobXV0YXRpb25zLmxlbmd0aCA9PSAwKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfSAvLyBDaGVjayBpZiB0aGVyZSBpcyBhbnkgbXV0YXRpb24gb2YgYGNoaWxkcmVuYCB0eXBlIG9yIGFueSBtdXRhdGlvbiB0aGF0IGNoYW5nZXMgbW9yZSB0aGFuIG9uZSB0ZXh0IG5vZGUuCgoKICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIobXV0YXRpb25zKSwKICAgICAgX3N0ZXA7CgogIHRyeSB7CiAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICB2YXIgbXV0YXRpb24gPSBfc3RlcC52YWx1ZTsKCiAgICAgIGlmIChtdXRhdGlvbi50eXBlID09PSAnY2hpbGRyZW4nICYmICFnZXRTaW5nbGVUZXh0Tm9kZUNoYW5nZShtdXRhdGlvbikpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2l0ZXJhdG9yLmUoZXJyKTsKICB9IGZpbmFsbHkgewogICAgX2l0ZXJhdG9yLmYoKTsKICB9CgogIHJldHVybiBmYWxzZTsKfQovKioKICogUmV0dXJucyBjaGFuZ2UgbWFkZSB0byBhIHNpbmdsZSB0ZXh0IG5vZGUuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L29ic2VydmVyL211dGF0aW9ub2JzZXJ2ZXJ+TXV0YXRlZFRleHR8CiAqIG1vZHVsZTplbmdpbmUvdmlldy9vYnNlcnZlci9tdXRhdGlvbm9ic2VydmVyfk11dGF0ZWRDaGlsZHJlbn0gbXV0YXRpb24KICogQHJldHVybnMge09iamVjdHx1bmRlZmluZWR9IENoYW5nZSBvYmplY3QgKHNlZSB7QGxpbmsgbW9kdWxlOnV0aWxzL2RpZmZ0b2NoYW5nZXN+ZGlmZlRvQ2hhbmdlc30gb3V0cHV0KQogKiBvciB1bmRlZmluZWQgaWYgbW9yZSB0aGFuIGEgc2luZ2xlIHRleHQgbm9kZSB3YXMgY2hhbmdlZC4KICovCgpleHBvcnQgZnVuY3Rpb24gZ2V0U2luZ2xlVGV4dE5vZGVDaGFuZ2UobXV0YXRpb24pIHsKICAvLyBPbmUgbmV3IG5vZGUuCiAgaWYgKG11dGF0aW9uLm5ld0NoaWxkcmVuLmxlbmd0aCAtIG11dGF0aW9uLm9sZENoaWxkcmVuLmxlbmd0aCAhPSAxKSB7CiAgICByZXR1cm47CiAgfSAvLyBXaGljaCBpcyB0ZXh0LgoKCiAgdmFyIGRpZmZSZXN1bHQgPSBkaWZmKG11dGF0aW9uLm9sZENoaWxkcmVuLCBtdXRhdGlvbi5uZXdDaGlsZHJlbiwgY29tcGFyZUNoaWxkTm9kZXMpOwogIHZhciBjaGFuZ2VzID0gZGlmZlRvQ2hhbmdlcyhkaWZmUmVzdWx0LCBtdXRhdGlvbi5uZXdDaGlsZHJlbik7IC8vIEluIGNhc2Ugb2YgWyBkZWxldGUsIGluc2VydCwgaW5zZXJ0IF0gdGhlIHByZXZpb3VzIGNoZWNrIHdpbGwgbm90IGV4aXQuCgogIGlmIChjaGFuZ2VzLmxlbmd0aCA+IDEpIHsKICAgIHJldHVybjsKICB9CgogIHZhciBjaGFuZ2UgPSBjaGFuZ2VzWzBdOyAvLyBXaGljaCBpcyB0ZXh0LgoKICBpZiAoISghIWNoYW5nZS52YWx1ZXNbMF0gJiYgY2hhbmdlLnZhbHVlc1swXS5pcygnJHRleHQnKSkpIHsKICAgIHJldHVybjsKICB9CgogIHJldHVybiBjaGFuZ2U7Cn0KLyoqCiAqIENoZWNrcyB3aGV0aGVyIHR3byB2aWV3IG5vZGVzIGFyZSBpZGVudGljYWwsIHdoaWNoIG1lYW5zIHRoZXkgYXJlIHRoZSBzYW1lIG9iamVjdAogKiBvciBjb250YWluIGV4YWN0bHkgc2FtZSBkYXRhIChpbiBjYXNlIG9mIHRleHQgbm9kZXMpLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvdmlldy9ub2Rlfk5vZGV9IG9sZENoaWxkCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L25vZGV+Tm9kZX0gbmV3Q2hpbGQKICogQHJldHVybnMge0Jvb2xlYW59CiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVDaGlsZE5vZGVzKG9sZENoaWxkLCBuZXdDaGlsZCkgewogIGlmICghIW9sZENoaWxkICYmIG9sZENoaWxkLmlzKCckdGV4dCcpICYmICEhbmV3Q2hpbGQgJiYgbmV3Q2hpbGQuaXMoJyR0ZXh0JykpIHsKICAgIHJldHVybiBvbGRDaGlsZC5kYXRhID09PSBuZXdDaGlsZC5kYXRhOwogIH0gZWxzZSB7CiAgICByZXR1cm4gb2xkQ2hpbGQgPT09IG5ld0NoaWxkOwogIH0KfQ=="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/utils/utils.js"],"names":["diff","diffToChanges","containerChildrenMutated","mutations","length","mutation","type","getSingleTextNodeChange","newChildren","oldChildren","diffResult","compareChildNodes","changes","change","values","is","oldChild","newChild","data"],"mappings":";;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,oCAAjB;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAmCC,SAAnC,EAA+C;AACrD,MAAKA,SAAS,CAACC,MAAV,IAAoB,CAAzB,EAA6B;AAC5B,WAAO,KAAP;AACA,GAHoD,CAKrD;;;AALqD,6CAM7BD,SAN6B;AAAA;;AAAA;AAMrD,wDAAoC;AAAA,UAAxBE,QAAwB;;AACnC,UAAKA,QAAQ,CAACC,IAAT,KAAkB,UAAlB,IAAgC,CAACC,uBAAuB,CAAEF,QAAF,CAA7D,EAA4E;AAC3E,eAAO,IAAP;AACA;AACD;AAVoD;AAAA;AAAA;AAAA;AAAA;;AAYrD,SAAO,KAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,uBAAT,CAAkCF,QAAlC,EAA6C;AACnD;AACA,MAAKA,QAAQ,CAACG,WAAT,CAAqBJ,MAArB,GAA8BC,QAAQ,CAACI,WAAT,CAAqBL,MAAnD,IAA6D,CAAlE,EAAsE;AACrE;AACA,GAJkD,CAMnD;;;AACA,MAAMM,UAAU,GAAGV,IAAI,CAAEK,QAAQ,CAACI,WAAX,EAAwBJ,QAAQ,CAACG,WAAjC,EAA8CG,iBAA9C,CAAvB;AACA,MAAMC,OAAO,GAAGX,aAAa,CAAES,UAAF,EAAcL,QAAQ,CAACG,WAAvB,CAA7B,CARmD,CAUnD;;AACA,MAAKI,OAAO,CAACR,MAAR,GAAiB,CAAtB,EAA0B;AACzB;AACA;;AAED,MAAMS,MAAM,GAAGD,OAAO,CAAE,CAAF,CAAtB,CAfmD,CAiBnD;;AACA,MAAK,EAAG,CAAC,CAACC,MAAM,CAACC,MAAP,CAAe,CAAf,CAAF,IAAwBD,MAAM,CAACC,MAAP,CAAe,CAAf,EAAmBC,EAAnB,CAAuB,OAAvB,CAA3B,CAAL,EAAqE;AACpE;AACA;;AAED,SAAOF,MAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASF,iBAAT,CAA4BK,QAA5B,EAAsCC,QAAtC,EAAiD;AACvD,MAAK,CAAC,CAACD,QAAF,IAAcA,QAAQ,CAACD,EAAT,CAAa,OAAb,CAAd,IAAwC,CAAC,CAACE,QAA1C,IAAsDA,QAAQ,CAACF,EAAT,CAAa,OAAb,CAA3D,EAAoF;AACnF,WAAOC,QAAQ,CAACE,IAAT,KAAkBD,QAAQ,CAACC,IAAlC;AACA,GAFD,MAEO;AACN,WAAOF,QAAQ,KAAKC,QAApB;AACA;AACD","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/utils\n */\n\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport diffToChanges from '@ckeditor/ckeditor5-utils/src/difftochanges';\n\n/**\n * Returns true if container children have mutated or more than a single text node was changed.\n *\n * @private\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n * @returns {Boolean}\n */\nexport function containerChildrenMutated( mutations ) {\n\tif ( mutations.length == 0 ) {\n\t\treturn false;\n\t}\n\n\t// Check if there is any mutation of `children` type or any mutation that changes more than one text node.\n\tfor ( const mutation of mutations ) {\n\t\tif ( mutation.type === 'children' && !getSingleTextNodeChange( mutation ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Returns change made to a single text node.\n *\n * @private\n * @param {module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren} mutation\n * @returns {Object|undefined} Change object (see {@link module:utils/difftochanges~diffToChanges} output)\n * or undefined if more than a single text node was changed.\n */\nexport function getSingleTextNodeChange( mutation ) {\n\t// One new node.\n\tif ( mutation.newChildren.length - mutation.oldChildren.length != 1 ) {\n\t\treturn;\n\t}\n\n\t// Which is text.\n\tconst diffResult = diff( mutation.oldChildren, mutation.newChildren, compareChildNodes );\n\tconst changes = diffToChanges( diffResult, mutation.newChildren );\n\n\t// In case of [ delete, insert, insert ] the previous check will not exit.\n\tif ( changes.length > 1 ) {\n\t\treturn;\n\t}\n\n\tconst change = changes[ 0 ];\n\n\t// Which is text.\n\tif ( !( !!change.values[ 0 ] && change.values[ 0 ].is( '$text' ) ) ) {\n\t\treturn;\n\t}\n\n\treturn change;\n}\n\n/**\n * Checks whether two view nodes are identical, which means they are the same object\n * or contain exactly same data (in case of text nodes).\n *\n * @private\n * @param {module:engine/view/node~Node} oldChild\n * @param {module:engine/view/node~Node} newChild\n * @returns {Boolean}\n */\nexport function compareChildNodes( oldChild, newChild ) {\n\tif ( !!oldChild && oldChild.is( '$text' ) && !!newChild && newChild.is( '$text' ) ) {\n\t\treturn oldChild.data === newChild.data;\n\t} else {\n\t\treturn oldChild === newChild;\n\t}\n}\n"]}]}