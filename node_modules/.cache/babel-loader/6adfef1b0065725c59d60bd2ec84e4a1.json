{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/utils/autoparagraphing.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/utils/autoparagraphing.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CgovKioKICogQGxpY2Vuc2UgQ29weXJpZ2h0IChjKSAyMDAzLTIwMjEsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIEZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHBzOi8vY2tlZGl0b3IuY29tL2xlZ2FsL2NrZWRpdG9yLW9zcy1saWNlbnNlCiAqLwoKLyoqCiAqIEBtb2R1bGUgZW5naW5lL21vZGVsL3V0aWxzL2F1dG9wYXJhZ3JhcGhpbmcKICovCgovKioKICogRml4ZXMgYWxsIGVtcHR5IHJvb3RzLgogKgogKiBAcHJvdGVjdGVkCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC93cml0ZXJ+V3JpdGVyfSB3cml0ZXIgVGhlIG1vZGVsIHdyaXRlci4KICogQHJldHVybnMge0Jvb2xlYW59IGB0cnVlYCBpZiBhbnkgY2hhbmdlIGhhcyBiZWVuIGFwcGxpZWQsIGBmYWxzZWAgb3RoZXJ3aXNlLgogKi8KZXhwb3J0IGZ1bmN0aW9uIGF1dG9QYXJhZ3JhcGhFbXB0eVJvb3RzKHdyaXRlcikgewogIHZhciBfd3JpdGVyJG1vZGVsID0gd3JpdGVyLm1vZGVsLAogICAgICBzY2hlbWEgPSBfd3JpdGVyJG1vZGVsLnNjaGVtYSwKICAgICAgZG9jdW1lbnQgPSBfd3JpdGVyJG1vZGVsLmRvY3VtZW50OwoKICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZG9jdW1lbnQuZ2V0Um9vdE5hbWVzKCkpLAogICAgICBfc3RlcDsKCiAgdHJ5IHsKICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgIHZhciByb290TmFtZSA9IF9zdGVwLnZhbHVlOwogICAgICB2YXIgcm9vdCA9IGRvY3VtZW50LmdldFJvb3Qocm9vdE5hbWUpOwoKICAgICAgaWYgKHJvb3QuaXNFbXB0eSAmJiAhc2NoZW1hLmNoZWNrQ2hpbGQocm9vdCwgJyR0ZXh0JykpIHsKICAgICAgICAvLyBJZiBwYXJhZ3JhcGggZWxlbWVudCBpcyBhbGxvd2VkIGluIHRoZSByb290LCBjcmVhdGUgcGFyYWdyYXBoIGVsZW1lbnQuCiAgICAgICAgaWYgKHNjaGVtYS5jaGVja0NoaWxkKHJvb3QsICdwYXJhZ3JhcGgnKSkgewogICAgICAgICAgd3JpdGVyLmluc2VydEVsZW1lbnQoJ3BhcmFncmFwaCcsIHJvb3QpOyAvLyBPdGhlciByb290cyB3aWxsIGdldCBmaXhlZCBpbiB0aGUgbmV4dCBwb3N0LWZpeGVyIHJvdW5kLiBUaG9zZSB3aWxsIGJlIHRyaWdnZXJlZAogICAgICAgICAgLy8gaW4gdGhlIHNhbWUgYmF0Y2ggbm8gbWF0dGVyIGlmIHRoaXMgbWV0aG9kIHdhcyB0cmlnZ2VyZWQgYnkgdGhlIHBvc3QtZml4aW5nIG9yIG5vdAogICAgICAgICAgLy8gKHRoZSBhYm92ZSBpbnNlcnRFbGVtZW50IGNhbGwgd2lsbCB0cmlnZ2VyIHRoZSBwb3N0LWZpeGVycykuCgogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfaXRlcmF0b3IuZShlcnIpOwogIH0gZmluYWxseSB7CiAgICBfaXRlcmF0b3IuZigpOwogIH0KCiAgcmV0dXJuIGZhbHNlOwp9Ci8qKgogKiBDaGVja3MgaWYgdGhlIGdpdmVuIG5vZGUgd3JhcHBlZCB3aXRoIGEgcGFyYWdyYXBoIHdvdWxkIGJlIGFjY2VwdGVkIGJ5IHRoZSBzY2hlbWEgaW4gdGhlIGdpdmVuIHBvc2l0aW9uLgogKgogKiBAcHJvdGVjdGVkCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9wb3NpdGlvbn5Qb3NpdGlvbn0gcG9zaXRpb24gVGhlIHBvc2l0aW9uIGF0IHdoaWNoIHRvIGNoZWNrLgogKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvbm9kZX5Ob2RlfFN0cmluZ30gbm9kZU9yVHlwZSBUaGUgY2hpbGQgbm9kZSBvciBjaGlsZCB0eXBlIHRvIGNoZWNrLgogKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvc2NoZW1hflNjaGVtYX0gc2NoZW1hIEEgc2NoZW1hIGluc3RhbmNlIHVzZWQgZm9yIGVsZW1lbnQgdmFsaWRhdGlvbi4KICovCgpleHBvcnQgZnVuY3Rpb24gaXNQYXJhZ3JhcGhhYmxlKHBvc2l0aW9uLCBub2RlT3JUeXBlLCBzY2hlbWEpIHsKICB2YXIgY29udGV4dCA9IHNjaGVtYS5jcmVhdGVDb250ZXh0KHBvc2l0aW9uKTsgLy8gV2hlbiBwYXJhZ3JhcGggaXMgYWxsb3dlZCBpbiB0aGlzIGNvbnRleHQuLi4KCiAgaWYgKCFzY2hlbWEuY2hlY2tDaGlsZChjb250ZXh0LCAncGFyYWdyYXBoJykpIHsKICAgIHJldHVybiBmYWxzZTsKICB9IC8vIEFuZCBhIG5vZGUgd291bGQgYmUgYWxsb3dlZCBpbiB0aGlzIHBhcmFncmFwaC4uLgoKCiAgaWYgKCFzY2hlbWEuY2hlY2tDaGlsZChjb250ZXh0LnB1c2goJ3BhcmFncmFwaCcpLCBub2RlT3JUeXBlKSkgewogICAgcmV0dXJuIGZhbHNlOwogIH0KCiAgcmV0dXJuIHRydWU7Cn0KLyoqCiAqIEluc2VydHMgYSBuZXcgcGFyYWdyYXBoIGF0IHRoZSBnaXZlbiBwb3NpdGlvbiBhbmQgcmV0dXJucyBhIHBvc2l0aW9uIGluc2lkZSB0aGF0IHBhcmFncmFwaC4KICoKICogQHByb3RlY3RlZAogKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvcG9zaXRpb25+UG9zaXRpb259IHBvc2l0aW9uIFRoZSBwb3NpdGlvbiB3aGVyZSBhIHBhcmFncmFwaCBzaG91bGQgYmUgaW5zZXJ0ZWQuCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC93cml0ZXJ+V3JpdGVyfSB3cml0ZXIgVGhlIG1vZGVsIHdyaXRlci4KICogQHJldHVybnMge21vZHVsZTplbmdpbmUvbW9kZWwvcG9zaXRpb25+UG9zaXRpb259IFBvc2l0aW9uIGluc2lkZSB0aGUgY3JlYXRlZCBwYXJhZ3JhcGguCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHdyYXBJblBhcmFncmFwaChwb3NpdGlvbiwgd3JpdGVyKSB7CiAgdmFyIHBhcmFncmFwaCA9IHdyaXRlci5jcmVhdGVFbGVtZW50KCdwYXJhZ3JhcGgnKTsKICB3cml0ZXIuaW5zZXJ0KHBhcmFncmFwaCwgcG9zaXRpb24pOwogIHJldHVybiB3cml0ZXIuY3JlYXRlUG9zaXRpb25BdChwYXJhZ3JhcGgsIDApOwp9"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/utils/autoparagraphing.js"],"names":["autoParagraphEmptyRoots","writer","model","schema","document","getRootNames","rootName","root","getRoot","isEmpty","checkChild","insertElement","isParagraphable","position","nodeOrType","context","createContext","push","wrapInParagraph","paragraph","createElement","insert","createPositionAt"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,uBAAT,CAAkCC,MAAlC,EAA2C;AAAA,sBACpBA,MAAM,CAACC,KADa;AAAA,MACzCC,MADyC,iBACzCA,MADyC;AAAA,MACjCC,QADiC,iBACjCA,QADiC;;AAAA,6CAGzBA,QAAQ,CAACC,YAAT,EAHyB;AAAA;;AAAA;AAGjD,wDAAkD;AAAA,UAAtCC,QAAsC;AACjD,UAAMC,IAAI,GAAGH,QAAQ,CAACI,OAAT,CAAkBF,QAAlB,CAAb;;AAEA,UAAKC,IAAI,CAACE,OAAL,IAAgB,CAACN,MAAM,CAACO,UAAP,CAAmBH,IAAnB,EAAyB,OAAzB,CAAtB,EAA2D;AAC1D;AACA,YAAKJ,MAAM,CAACO,UAAP,CAAmBH,IAAnB,EAAyB,WAAzB,CAAL,EAA8C;AAC7CN,UAAAA,MAAM,CAACU,aAAP,CAAsB,WAAtB,EAAmCJ,IAAnC,EAD6C,CAG7C;AACA;AACA;;AACA,iBAAO,IAAP;AACA;AACD;AACD;AAjBgD;AAAA;AAAA;AAAA;AAAA;;AAmBjD,SAAO,KAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,eAAT,CAA0BC,QAA1B,EAAoCC,UAApC,EAAgDX,MAAhD,EAAyD;AAC/D,MAAMY,OAAO,GAAGZ,MAAM,CAACa,aAAP,CAAsBH,QAAtB,CAAhB,CAD+D,CAG/D;;AACA,MAAK,CAACV,MAAM,CAACO,UAAP,CAAmBK,OAAnB,EAA4B,WAA5B,CAAN,EAAkD;AACjD,WAAO,KAAP;AACA,GAN8D,CAQ/D;;;AACA,MAAK,CAACZ,MAAM,CAACO,UAAP,CAAmBK,OAAO,CAACE,IAAR,CAAc,WAAd,CAAnB,EAAgDH,UAAhD,CAAN,EAAqE;AACpE,WAAO,KAAP;AACA;;AAED,SAAO,IAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,eAAT,CAA0BL,QAA1B,EAAoCZ,MAApC,EAA6C;AACnD,MAAMkB,SAAS,GAAGlB,MAAM,CAACmB,aAAP,CAAsB,WAAtB,CAAlB;AAEAnB,EAAAA,MAAM,CAACoB,MAAP,CAAeF,SAAf,EAA0BN,QAA1B;AAEA,SAAOZ,MAAM,CAACqB,gBAAP,CAAyBH,SAAzB,EAAoC,CAApC,CAAP;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/autoparagraphing\n */\n\n/**\n * Fixes all empty roots.\n *\n * @protected\n * @param {module:engine/model/writer~Writer} writer The model writer.\n * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n */\nexport function autoParagraphEmptyRoots( writer ) {\n\tconst { schema, document } = writer.model;\n\n\tfor ( const rootName of document.getRootNames() ) {\n\t\tconst root = document.getRoot( rootName );\n\n\t\tif ( root.isEmpty && !schema.checkChild( root, '$text' ) ) {\n\t\t\t// If paragraph element is allowed in the root, create paragraph element.\n\t\t\tif ( schema.checkChild( root, 'paragraph' ) ) {\n\t\t\t\twriter.insertElement( 'paragraph', root );\n\n\t\t\t\t// Other roots will get fixed in the next post-fixer round. Those will be triggered\n\t\t\t\t// in the same batch no matter if this method was triggered by the post-fixing or not\n\t\t\t\t// (the above insertElement call will trigger the post-fixers).\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Checks if the given node wrapped with a paragraph would be accepted by the schema in the given position.\n *\n * @protected\n * @param {module:engine/model/position~Position} position The position at which to check.\n * @param {module:engine/model/node~Node|String} nodeOrType The child node or child type to check.\n * @param {module:engine/model/schema~Schema} schema A schema instance used for element validation.\n */\nexport function isParagraphable( position, nodeOrType, schema ) {\n\tconst context = schema.createContext( position );\n\n\t// When paragraph is allowed in this context...\n\tif ( !schema.checkChild( context, 'paragraph' ) ) {\n\t\treturn false;\n\t}\n\n\t// And a node would be allowed in this paragraph...\n\tif ( !schema.checkChild( context.push( 'paragraph' ), nodeOrType ) ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/**\n * Inserts a new paragraph at the given position and returns a position inside that paragraph.\n *\n * @protected\n * @param {module:engine/model/position~Position} position The position where a paragraph should be inserted.\n * @param {module:engine/model/writer~Writer} writer The model writer.\n * @returns {module:engine/model/position~Position} Position inside the created paragraph.\n */\nexport function wrapInParagraph( position, writer ) {\n\tconst paragraph = writer.createElement( 'paragraph' );\n\n\twriter.insert( paragraph, position );\n\n\treturn writer.createPositionAt( paragraph, 0 );\n}\n"]}]}