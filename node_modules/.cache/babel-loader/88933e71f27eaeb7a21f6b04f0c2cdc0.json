{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/toolbar/block/blocktoolbar.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/toolbar/block/blocktoolbar.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfZ2V0IGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0IjsKaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CgovKioKICogQGxpY2Vuc2UgQ29weXJpZ2h0IChjKSAyMDAzLTIwMjEsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIEZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHBzOi8vY2tlZGl0b3IuY29tL2xlZ2FsL2NrZWRpdG9yLW9zcy1saWNlbnNlCiAqLwoKLyoqCiAqIEBtb2R1bGUgdWkvdG9vbGJhci9ibG9jay9ibG9ja3Rvb2xiYXIKICovCgovKiBnbG9iYWwgd2luZG93ICovCmltcG9ydCB7IFBsdWdpbiwgaWNvbnMgfSBmcm9tICdja2VkaXRvcjUvc3JjL2NvcmUnOwppbXBvcnQgQmxvY2tCdXR0b25WaWV3IGZyb20gJy4vYmxvY2tidXR0b252aWV3JzsKaW1wb3J0IEJhbGxvb25QYW5lbFZpZXcgZnJvbSAnLi4vLi4vcGFuZWwvYmFsbG9vbi9iYWxsb29ucGFuZWx2aWV3JzsKaW1wb3J0IFRvb2xiYXJWaWV3IGZyb20gJy4uL3Rvb2xiYXJ2aWV3JzsKaW1wb3J0IGNsaWNrT3V0c2lkZUhhbmRsZXIgZnJvbSAnLi4vLi4vYmluZGluZ3MvY2xpY2tvdXRzaWRlaGFuZGxlcic7CmltcG9ydCB7IGdldE9wdGltYWxQb3NpdGlvbiB9IGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2RvbS9wb3NpdGlvbic7CmltcG9ydCBSZWN0IGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2RvbS9yZWN0JzsKaW1wb3J0IG5vcm1hbGl6ZVRvb2xiYXJDb25maWcgZnJvbSAnLi4vbm9ybWFsaXpldG9vbGJhcmNvbmZpZyc7CmltcG9ydCBSZXNpemVPYnNlcnZlciBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXV0aWxzL3NyYy9kb20vcmVzaXplb2JzZXJ2ZXInOwppbXBvcnQgdG9Vbml0IGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2RvbS90b3VuaXQnOwp2YXIgdG9QeCA9IHRvVW5pdCgncHgnKTsKLyoqCiAqIFRoZSBibG9jayB0b29sYmFyIHBsdWdpbi4KICoKICogVGhpcyBwbHVnaW4gcHJvdmlkZXMgYSBidXR0b24gcG9zaXRpb25lZCBuZXh0IHRvIHRoZSBibG9jayBvZiBjb250ZW50IHdoZXJlIHRoZSBzZWxlY3Rpb24gaXMgYW5jaG9yZWQuCiAqIFVwb24gY2xpY2tpbmcgdGhlIGJ1dHRvbiwgYSBkcm9wZG93biBwcm92aWRpbmcgYWNjZXNzIHRvIGVkaXRvciBmZWF0dXJlcyBzaG93cyB1cCwgYXMgY29uZmlndXJlZCBpbgogKiB7QGxpbmsgbW9kdWxlOmNvcmUvZWRpdG9yL2VkaXRvcmNvbmZpZ35FZGl0b3JDb25maWcjYmxvY2tUb29sYmFyfS4KICoKICogQnkgZGVmYXVsdCwgdGhlIGJ1dHRvbiBpcyBkaXNwbGF5ZWQgbmV4dCB0byBhbGwgZWxlbWVudHMgbWFya2VkIGluIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL3NjaGVtYX5TY2hlbWF9CiAqIGFzIGAkYmxvY2tgIGZvciB3aGljaCB0aGUgdG9vbGJhciBwcm92aWRlcyBhdCBsZWFzdCBvbmUgb3B0aW9uLgogKgogKiBCeSBkZWZhdWx0LCB0aGUgYnV0dG9uIGlzIGF0dGFjaGVkIHNvIGl0cyByaWdodCBib3VuZGFyeSBpcyB0b3VjaGluZyB0aGUKICoge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy9lZGl0YWJsZWVsZW1lbnR+RWRpdGFibGVFbGVtZW50fToKICoKICogCQkgX18gfAogKiAJCXwgIHx8ICBUaGlzIGlzIGEgYmxvY2sgb2YgY29udGVudCB0aGF0IHRoZQogKiAJCSDCr8KvIHwgIGJ1dHRvbiBpcyBhdHRhY2hlZCB0by4gVGhpcyBpcyBhCiAqIAkJICAgIHwgIGJsb2NrIG9mIGNvbnRlbnQgdGhhdCB0aGUgYnV0dG9uIGlzCiAqIAkJICAgIHwgIGF0dGFjaGVkIHRvLgogKgogKiBUaGUgcG9zaXRpb24gb2YgdGhlIGJ1dHRvbiBjYW4gYmUgYWRqdXN0ZWQgdXNpbmcgdGhlIENTUyBgdHJhbnNmb3JtYCBwcm9wZXJ0eToKICoKICogCQkuY2stYmxvY2stdG9vbGJhci1idXR0b24gewogKiAJCQl0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoIC0xMHB4ICk7CiAqIAkJfQogKgogKiAJCSBfXyAgIHwKICogCQl8ICB8ICB8ICBUaGlzIGlzIGEgYmxvY2sgb2YgY29udGVudCB0aGF0IHRoZQogKiAJCSDCr8KvICAgfCAgYnV0dG9uIGlzIGF0dGFjaGVkIHRvLiBUaGlzIGlzIGEKICogCQkgICAgICB8ICBibG9jayBvZiBjb250ZW50IHRoYXQgdGhlIGJ1dHRvbiBpcwogKiAJCSAgICAgIHwgIGF0dGFjaGVkIHRvLgogKgogKiAqKk5vdGUqKjogSWYgeW91IHBsYW4gdG8gcnVuIHRoZSBlZGl0b3IgaW4gYSByaWdodOKAk3Rv4oCTbGVmdCAoUlRMKSBsYW5ndWFnZSwga2VlcCBpbiBtaW5kIHRoZSBidXR0b24KICogd2lsbCBiZSBhdHRhY2hlZCB0byB0aGUgKipyaWdodCoqIGJvdW5kYXJ5IG9mIHRoZSBlZGl0YWJsZSBhcmVhLiBJbiB0aGF0IGNhc2UsIG1ha2Ugc3VyZSB0aGUKICogQ1NTIHBvc2l0aW9uIGFkanVzdG1lbnQgd29ya3MgcHJvcGVybHkgYnkgYWRkaW5nIHRoZSBmb2xsb3dpbmcgc3R5bGVzOgogKgogKiAJCS5ja1tkaXI9InJ0bCJdIC5jay1ibG9jay10b29sYmFyLWJ1dHRvbiB7CiAqIAkJCXRyYW5zZm9ybTogdHJhbnNsYXRlWCggMTBweCApOwogKiAJCX0KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvcGx1Z2luflBsdWdpbgogKi8KCnZhciBCbG9ja1Rvb2xiYXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9QbHVnaW4pIHsKICBfaW5oZXJpdHMoQmxvY2tUb29sYmFyLCBfUGx1Z2luKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihCbG9ja1Rvb2xiYXIpOwoKICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwogIGZ1bmN0aW9uIEJsb2NrVG9vbGJhcihlZGl0b3IpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQmxvY2tUb29sYmFyKTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGVkaXRvcik7CiAgICAvKioKICAgICAqIEEgY2FjaGVkIGFuZCBub3JtYWxpemVkIGBjb25maWcuYmxvY2tUb29sYmFyYCBvYmplY3QuCiAgICAgKgogICAgICogQHR5cGUge21vZHVsZTpjb3JlL2VkaXRvci9lZGl0b3Jjb25maWd+RWRpdG9yQ29uZmlnI2Jsb2NrVG9vbGJhcn0KICAgICAqIEBwcml2YXRlCiAgICAgKi8KCiAgICBfdGhpcy5fYmxvY2tUb29sYmFyQ29uZmlnID0gbm9ybWFsaXplVG9vbGJhckNvbmZpZyhfdGhpcy5lZGl0b3IuY29uZmlnLmdldCgnYmxvY2tUb29sYmFyJykpOwogICAgLyoqCiAgICAgKiBUaGUgdG9vbGJhciB2aWV3LgogICAgICoKICAgICAqIEB0eXBlIHttb2R1bGU6dWkvdG9vbGJhci90b29sYmFydmlld35Ub29sYmFyVmlld30KICAgICAqLwoKICAgIF90aGlzLnRvb2xiYXJWaWV3ID0gX3RoaXMuX2NyZWF0ZVRvb2xiYXJWaWV3KCk7CiAgICAvKioKICAgICAqIFRoZSBiYWxsb29uIHBhbmVsIHZpZXcsIGNvbnRhaW5pbmcgdGhlIHtAbGluayAjdG9vbGJhclZpZXd9LgogICAgICoKICAgICAqIEB0eXBlIHttb2R1bGU6dWkvcGFuZWwvYmFsbG9vbi9iYWxsb29ucGFuZWx2aWV3fkJhbGxvb25QYW5lbFZpZXd9CiAgICAgKi8KCiAgICBfdGhpcy5wYW5lbFZpZXcgPSBfdGhpcy5fY3JlYXRlUGFuZWxWaWV3KCk7CiAgICAvKioKICAgICAqIFRoZSBidXR0b24gdmlldyB0aGF0IG9wZW5zIHRoZSB7QGxpbmsgI3Rvb2xiYXJWaWV3fS4KICAgICAqCiAgICAgKiBAdHlwZSB7bW9kdWxlOnVpL3Rvb2xiYXIvYmxvY2svYmxvY2tidXR0b252aWV3fkJsb2NrQnV0dG9uVmlld30KICAgICAqLwoKICAgIF90aGlzLmJ1dHRvblZpZXcgPSBfdGhpcy5fY3JlYXRlQnV0dG9uVmlldygpOwogICAgLyoqCiAgICAgKiBBbiBpbnN0YW5jZSBvZiB0aGUgcmVzaXplIG9ic2VydmVyIHRoYXQgYWxsb3dzIHRvIHJlc3BvbmQgdG8gY2hhbmdlcyBpbiBlZGl0YWJsZSdzIGdlb21ldHJ5CiAgICAgKiBzbyB0aGUgdG9vbGJhciBjYW4gc3RheSB3aXRoaW4gaXRzIGJvdW5kYXJpZXMgKGFuZCBncm91cCB0b29sYmFyIGl0ZW1zIHRoYXQgZG8gbm90IGZpdCkuCiAgICAgKgogICAgICogKipOb3RlKio6IFVzZWQgb25seSB3aGVuIGBzaG91bGROb3RHcm91cFdoZW5GdWxsYCB3YXMgKipub3QqKiBzZXQgaW4gdGhlCiAgICAgKiB7QGxpbmsgbW9kdWxlOmNvcmUvZWRpdG9yL2VkaXRvcmNvbmZpZ35FZGl0b3JDb25maWcjYmxvY2tUb29sYmFyIGNvbmZpZ3VyYXRpb259LgogICAgICoKICAgICAqICoqTm90ZToqKiBDcmVhdGVkIGluIHtAbGluayAjYWZ0ZXJJbml0fS4KICAgICAqCiAgICAgKiBAcHJvdGVjdGVkCiAgICAgKiBAbWVtYmVyIHttb2R1bGU6dXRpbHMvZG9tL3Jlc2l6ZW9ic2VydmVyflJlc2l6ZU9ic2VydmVyfQogICAgICovCgogICAgX3RoaXMuX3Jlc2l6ZU9ic2VydmVyID0gbnVsbDsgLy8gQ2xvc2UgdGhlICNwYW5lbFZpZXcgdXBvbiBjbGlja2luZyBvdXRzaWRlIG9mIHRoZSBwbHVnaW4gVUkuCgogICAgY2xpY2tPdXRzaWRlSGFuZGxlcih7CiAgICAgIGVtaXR0ZXI6IF90aGlzLnBhbmVsVmlldywKICAgICAgY29udGV4dEVsZW1lbnRzOiBbX3RoaXMucGFuZWxWaWV3LmVsZW1lbnQsIF90aGlzLmJ1dHRvblZpZXcuZWxlbWVudF0sCiAgICAgIGFjdGl2YXRvcjogZnVuY3Rpb24gYWN0aXZhdG9yKCkgewogICAgICAgIHJldHVybiBfdGhpcy5wYW5lbFZpZXcuaXNWaXNpYmxlOwogICAgICB9LAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLl9oaWRlUGFuZWwoKTsKICAgICAgfQogICAgfSk7CiAgICByZXR1cm4gX3RoaXM7CiAgfQogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCgoKICBfY3JlYXRlQ2xhc3MoQmxvY2tUb29sYmFyLCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7IC8vIEhpZGVzIHBhbmVsIG9uIGEgZGlyZWN0IHNlbGVjdGlvbiBjaGFuZ2UuCgogICAgICB0aGlzLmxpc3RlblRvKGVkaXRvci5tb2RlbC5kb2N1bWVudC5zZWxlY3Rpb24sICdjaGFuZ2U6cmFuZ2UnLCBmdW5jdGlvbiAoZXZ0LCBkYXRhKSB7CiAgICAgICAgaWYgKGRhdGEuZGlyZWN0Q2hhbmdlKSB7CiAgICAgICAgICBfdGhpczIuX2hpZGVQYW5lbCgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMubGlzdGVuVG8oZWRpdG9yLnVpLCAndXBkYXRlJywgZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczIuX3VwZGF0ZUJ1dHRvbigpOwogICAgICB9KTsgLy8gYGxvd2AgcHJpb3JpdHkgaXMgdXNlZCBiZWNhdXNlIG9mIGh0dHBzOi8vZ2l0aHViLmNvbS9ja2VkaXRvci9ja2VkaXRvcjUtY29yZS9pc3N1ZXMvMTMzLgoKICAgICAgdGhpcy5saXN0ZW5UbyhlZGl0b3IsICdjaGFuZ2U6aXNSZWFkT25seScsIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLl91cGRhdGVCdXR0b24oKTsKICAgICAgfSwgewogICAgICAgIHByaW9yaXR5OiAnbG93JwogICAgICB9KTsKICAgICAgdGhpcy5saXN0ZW5UbyhlZGl0b3IudWkuZm9jdXNUcmFja2VyLCAnY2hhbmdlOmlzRm9jdXNlZCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLl91cGRhdGVCdXR0b24oKTsKICAgICAgfSk7IC8vIFJlcG9zaXRpb24gYnV0dG9uIG9uIHJlc2l6ZS4KCiAgICAgIHRoaXMubGlzdGVuVG8odGhpcy5idXR0b25WaWV3LCAnY2hhbmdlOmlzVmlzaWJsZScsIGZ1bmN0aW9uIChldnQsIG5hbWUsIGlzVmlzaWJsZSkgewogICAgICAgIGlmIChpc1Zpc2libGUpIHsKICAgICAgICAgIC8vIEtlZXAgY29ycmVjdCBwb3NpdGlvbiBvZiBidXR0b24gYW5kIHBhbmVsIG9uIHdpbmRvdyNyZXNpemUuCiAgICAgICAgICBfdGhpczIuYnV0dG9uVmlldy5saXN0ZW5Ubyh3aW5kb3csICdyZXNpemUnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpczIuX3VwZGF0ZUJ1dHRvbigpOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIFN0b3AgcmVwb3NpdGlvbmluZyBidXR0b24gd2hlbiBpcyBoaWRkZW4uCiAgICAgICAgICBfdGhpczIuYnV0dG9uVmlldy5zdG9wTGlzdGVuaW5nKHdpbmRvdywgJ3Jlc2l6ZScpOyAvLyBIaWRlIHRoZSBwYW5lbCB3aGVuIHRoZSBidXR0b24gZGlzYXBwZWFycy4KCgogICAgICAgICAgX3RoaXMyLl9oaWRlUGFuZWwoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogICAgLyoqCiAgICAgKiBGaWxscyB0aGUgdG9vbGJhciB3aXRoIGl0cyBpdGVtcyBiYXNlZCBvbiB0aGUgY29uZmlndXJhdGlvbi4KICAgICAqCiAgICAgKiAqKk5vdGU6KiogVGhpcyBuZWVkcyB0byBiZSBkb25lIGFmdGVyIGFsbCBwbHVnaW5zIGFyZSByZWFkeS4KICAgICAqCiAgICAgKiBAaW5oZXJpdERvYwogICAgICovCgogIH0sIHsKICAgIGtleTogImFmdGVySW5pdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWZ0ZXJJbml0KCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBmYWN0b3J5ID0gdGhpcy5lZGl0b3IudWkuY29tcG9uZW50RmFjdG9yeTsKICAgICAgdmFyIGNvbmZpZyA9IHRoaXMuX2Jsb2NrVG9vbGJhckNvbmZpZzsKICAgICAgdGhpcy50b29sYmFyVmlldy5maWxsRnJvbUNvbmZpZyhjb25maWcsIGZhY3RvcnkpOyAvLyBIaWRlIHBhbmVsIGJlZm9yZSBleGVjdXRpbmcgZWFjaCBidXR0b24gaW4gdGhlIHBhbmVsLgoKICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMudG9vbGJhclZpZXcuaXRlbXMpLAogICAgICAgICAgX3N0ZXA7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgaXRlbSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgaXRlbS5vbignZXhlY3V0ZScsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5faGlkZVBhbmVsKHRydWUpOwogICAgICAgICAgfSwgewogICAgICAgICAgICBwcmlvcml0eTogJ2hpZ2gnCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgaWYgKCFjb25maWcuc2hvdWxkTm90R3JvdXBXaGVuRnVsbCkgewogICAgICAgIHRoaXMubGlzdGVuVG8odGhpcy5lZGl0b3IsICdyZWFkeScsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBlZGl0YWJsZUVsZW1lbnQgPSBfdGhpczMuZWRpdG9yLnVpLnZpZXcuZWRpdGFibGUuZWxlbWVudDsgLy8gU2V0ICN0b29sYmFyVmlldydzIG1heC13aWR0aCBqdXN0IGFmdGVyIHRoZSBpbml0aWFsaXphdGlvbiBhbmQgdXBkYXRlIGl0IG9uIHRoZSBlZGl0YWJsZSByZXNpemUuCgogICAgICAgICAgX3RoaXMzLl9yZXNpemVPYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcihlZGl0YWJsZUVsZW1lbnQsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMzLnRvb2xiYXJWaWV3Lm1heFdpZHRoID0gX3RoaXMzLl9nZXRUb29sYmFyTWF4V2lkdGgoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgICAvKioKICAgICAqIEBpbmhlcml0RG9jCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZGVzdHJveSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZGVzdHJveSgpIHsKICAgICAgX2dldChfZ2V0UHJvdG90eXBlT2YoQmxvY2tUb29sYmFyLnByb3RvdHlwZSksICJkZXN0cm95IiwgdGhpcykuY2FsbCh0aGlzKTsgLy8gRGVzdHJveSBjcmVhdGVkIFVJIGNvbXBvbmVudHMgYXMgdGhleSBhcmUgbm90IGF1dG9tYXRpY2FsbHkgZGVzdHJveWVkIChzZWUgY2tlZGl0b3I1IzEzNDEpLgoKCiAgICAgIHRoaXMucGFuZWxWaWV3LmRlc3Ryb3koKTsKICAgICAgdGhpcy5idXR0b25WaWV3LmRlc3Ryb3koKTsKICAgICAgdGhpcy50b29sYmFyVmlldy5kZXN0cm95KCk7CgogICAgICBpZiAodGhpcy5fcmVzaXplT2JzZXJ2ZXIpIHsKICAgICAgICB0aGlzLl9yZXNpemVPYnNlcnZlci5kZXN0cm95KCk7CiAgICAgIH0KICAgIH0KICAgIC8qKgogICAgICogQ3JlYXRlcyB0aGUge0BsaW5rICN0b29sYmFyVmlld30uCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEByZXR1cm5zIHttb2R1bGU6dWkvdG9vbGJhci90b29sYmFydmlld35Ub29sYmFyVmlld30KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfY3JlYXRlVG9vbGJhclZpZXciLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9jcmVhdGVUb29sYmFyVmlldygpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB2YXIgc2hvdWxkR3JvdXBXaGVuRnVsbCA9ICF0aGlzLl9ibG9ja1Rvb2xiYXJDb25maWcuc2hvdWxkTm90R3JvdXBXaGVuRnVsbDsKICAgICAgdmFyIHRvb2xiYXJWaWV3ID0gbmV3IFRvb2xiYXJWaWV3KHRoaXMuZWRpdG9yLmxvY2FsZSwgewogICAgICAgIHNob3VsZEdyb3VwV2hlbkZ1bGw6IHNob3VsZEdyb3VwV2hlbkZ1bGwsCiAgICAgICAgaXNGbG9hdGluZzogdHJ1ZQogICAgICB9KTsgLy8gV2hlbiB0b29sYmFyIGxvc3QgZm9jdXMgdGhlbiBwYW5lbCBzaG91bGQgaGlkZS4KCiAgICAgIHRvb2xiYXJWaWV3LmZvY3VzVHJhY2tlci5vbignY2hhbmdlOmlzRm9jdXNlZCcsIGZ1bmN0aW9uIChldnQsIG5hbWUsIGlzKSB7CiAgICAgICAgaWYgKCFpcykgewogICAgICAgICAgX3RoaXM0Ll9oaWRlUGFuZWwoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gdG9vbGJhclZpZXc7CiAgICB9CiAgICAvKioKICAgICAqIENyZWF0ZXMgdGhlIHtAbGluayAjcGFuZWxWaWV3fS4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQHJldHVybnMge21vZHVsZTp1aS9wYW5lbC9iYWxsb29uL2JhbGxvb25wYW5lbHZpZXd+QmFsbG9vblBhbmVsVmlld30KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfY3JlYXRlUGFuZWxWaWV3IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfY3JlYXRlUGFuZWxWaWV3KCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHZhciBlZGl0b3IgPSB0aGlzLmVkaXRvcjsKICAgICAgdmFyIHBhbmVsVmlldyA9IG5ldyBCYWxsb29uUGFuZWxWaWV3KGVkaXRvci5sb2NhbGUpOwogICAgICBwYW5lbFZpZXcuY29udGVudC5hZGQodGhpcy50b29sYmFyVmlldyk7CiAgICAgIHBhbmVsVmlldy5jbGFzcyA9ICdjay10b29sYmFyLWNvbnRhaW5lcic7CiAgICAgIGVkaXRvci51aS52aWV3LmJvZHkuYWRkKHBhbmVsVmlldyk7CiAgICAgIGVkaXRvci51aS5mb2N1c1RyYWNrZXIuYWRkKHBhbmVsVmlldy5lbGVtZW50KTsgLy8gQ2xvc2UgI3BhbmVsVmlldyBvbiBgRXNjYCBwcmVzcy4KCiAgICAgIHRoaXMudG9vbGJhclZpZXcua2V5c3Ryb2tlcy5zZXQoJ0VzYycsIGZ1bmN0aW9uIChldnQsIGNhbmNlbCkgewogICAgICAgIF90aGlzNS5faGlkZVBhbmVsKHRydWUpOwoKICAgICAgICBjYW5jZWwoKTsKICAgICAgfSk7CiAgICAgIHJldHVybiBwYW5lbFZpZXc7CiAgICB9CiAgICAvKioKICAgICAqIENyZWF0ZXMgdGhlIHtAbGluayAjYnV0dG9uVmlld30uCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEByZXR1cm5zIHttb2R1bGU6dWkvdG9vbGJhci9ibG9jay9ibG9ja2J1dHRvbnZpZXd+QmxvY2tCdXR0b25WaWV3fQogICAgICovCgogIH0sIHsKICAgIGtleTogIl9jcmVhdGVCdXR0b25WaWV3IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfY3JlYXRlQnV0dG9uVmlldygpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICAgIHZhciB0ID0gZWRpdG9yLnQ7CiAgICAgIHZhciBidXR0b25WaWV3ID0gbmV3IEJsb2NrQnV0dG9uVmlldyhlZGl0b3IubG9jYWxlKTsKICAgICAgYnV0dG9uVmlldy5zZXQoewogICAgICAgIGxhYmVsOiB0KCdFZGl0IGJsb2NrJyksCiAgICAgICAgaWNvbjogaWNvbnMucGlsY3JvdywKICAgICAgICB3aXRoVGV4dDogZmFsc2UKICAgICAgfSk7IC8vIEJpbmQgdGhlIHBhbmVsVmlldyBvYnNlcnZhYmxlIHByb3BlcnRpZXMgdG8gdGhlIGJ1dHRvblZpZXcuCgogICAgICBidXR0b25WaWV3LmJpbmQoJ2lzT24nKS50byh0aGlzLnBhbmVsVmlldywgJ2lzVmlzaWJsZScpOwogICAgICBidXR0b25WaWV3LmJpbmQoJ3Rvb2x0aXAnKS50byh0aGlzLnBhbmVsVmlldywgJ2lzVmlzaWJsZScsIGZ1bmN0aW9uIChpc1Zpc2libGUpIHsKICAgICAgICByZXR1cm4gIWlzVmlzaWJsZTsKICAgICAgfSk7IC8vIFRvZ2dsZSB0aGUgcGFuZWxWaWV3IHVwb24gYnV0dG9uVmlldyNleGVjdXRlLgoKICAgICAgdGhpcy5saXN0ZW5UbyhidXR0b25WaWV3LCAnZXhlY3V0ZScsIGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoIV90aGlzNi5wYW5lbFZpZXcuaXNWaXNpYmxlKSB7CiAgICAgICAgICBfdGhpczYuX3Nob3dQYW5lbCgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczYuX2hpZGVQYW5lbCh0cnVlKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICBlZGl0b3IudWkudmlldy5ib2R5LmFkZChidXR0b25WaWV3KTsKICAgICAgZWRpdG9yLnVpLmZvY3VzVHJhY2tlci5hZGQoYnV0dG9uVmlldy5lbGVtZW50KTsKICAgICAgcmV0dXJuIGJ1dHRvblZpZXc7CiAgICB9CiAgICAvKioKICAgICAqIFNob3dzIG9yIGhpZGVzIHRoZSBidXR0b24uCiAgICAgKiBXaGVuIGFsbCB0aGUgY29uZGl0aW9ucyBmb3IgZGlzcGxheWluZyB0aGUgYnV0dG9uIGFyZSBtYXRjaGVkLCBpdCBzaG93cyB0aGUgYnV0dG9uLiBIaWRlcyBvdGhlcndpc2UuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfdXBkYXRlQnV0dG9uIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfdXBkYXRlQnV0dG9uKCkgewogICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICAgIHZhciBtb2RlbCA9IGVkaXRvci5tb2RlbDsKICAgICAgdmFyIHZpZXcgPSBlZGl0b3IuZWRpdGluZy52aWV3OyAvLyBIaWRlcyB0aGUgYnV0dG9uIHdoZW4gdGhlIGVkaXRvciBpcyBub3QgZm9jdXNlZC4KCiAgICAgIGlmICghZWRpdG9yLnVpLmZvY3VzVHJhY2tlci5pc0ZvY3VzZWQpIHsKICAgICAgICB0aGlzLl9oaWRlQnV0dG9uKCk7CgogICAgICAgIHJldHVybjsKICAgICAgfSAvLyBIaWRlcyB0aGUgYnV0dG9uIHdoZW4gdGhlIGVkaXRvciBzd2l0Y2hlcyB0byB0aGUgcmVhZC1vbmx5IG1vZGUuCgoKICAgICAgaWYgKGVkaXRvci5pc1JlYWRPbmx5KSB7CiAgICAgICAgdGhpcy5faGlkZUJ1dHRvbigpOwoKICAgICAgICByZXR1cm47CiAgICAgIH0gLy8gR2V0IHRoZSBmaXJzdCBzZWxlY3RlZCBibG9jaywgYnV0dG9uIHdpbGwgYmUgYXR0YWNoZWQgdG8gdGhpcyBlbGVtZW50LgoKCiAgICAgIHZhciBtb2RlbFRhcmdldCA9IEFycmF5LmZyb20obW9kZWwuZG9jdW1lbnQuc2VsZWN0aW9uLmdldFNlbGVjdGVkQmxvY2tzKCkpWzBdOyAvLyBIaWRlcyB0aGUgYnV0dG9uIHdoZW4gdGhlcmUgaXMgbm8gZW5hYmxlZCBpdGVtIGluIHRvb2xiYXIgZm9yIHRoZSBjdXJyZW50IGJsb2NrIGVsZW1lbnQuCgogICAgICBpZiAoIW1vZGVsVGFyZ2V0IHx8IEFycmF5LmZyb20odGhpcy50b29sYmFyVmlldy5pdGVtcykuZXZlcnkoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gIWl0ZW0uaXNFbmFibGVkOwogICAgICB9KSkgewogICAgICAgIHRoaXMuX2hpZGVCdXR0b24oKTsKCiAgICAgICAgcmV0dXJuOwogICAgICB9IC8vIEdldCBET00gdGFyZ2V0IGVsZW1lbnQuCgoKICAgICAgdmFyIGRvbVRhcmdldCA9IHZpZXcuZG9tQ29udmVydGVyLm1hcFZpZXdUb0RvbShlZGl0b3IuZWRpdGluZy5tYXBwZXIudG9WaWV3RWxlbWVudChtb2RlbFRhcmdldCkpOyAvLyBTaG93IGJsb2NrIGJ1dHRvbi4KCiAgICAgIHRoaXMuYnV0dG9uVmlldy5pc1Zpc2libGUgPSB0cnVlOyAvLyBBdHRhY2ggYmxvY2sgYnV0dG9uIHRvIHRhcmdldCBET00gZWxlbWVudC4KCiAgICAgIHRoaXMuX2F0dGFjaEJ1dHRvblRvRWxlbWVudChkb21UYXJnZXQpOyAvLyBXaGVuIHBhbmVsIGlzIG9wZW5lZCB0aGVuIHJlZnJlc2ggaXQgcG9zaXRpb24gdG8gYmUgcHJvcGVybHkgYWxpZ25lZCB3aXRoIGJsb2NrIGJ1dHRvbi4KCgogICAgICBpZiAodGhpcy5wYW5lbFZpZXcuaXNWaXNpYmxlKSB7CiAgICAgICAgdGhpcy5fc2hvd1BhbmVsKCk7CiAgICAgIH0KICAgIH0KICAgIC8qKgogICAgICogSGlkZXMgdGhlIGJ1dHRvbi4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICovCgogIH0sIHsKICAgIGtleTogIl9oaWRlQnV0dG9uIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfaGlkZUJ1dHRvbigpIHsKICAgICAgdGhpcy5idXR0b25WaWV3LmlzVmlzaWJsZSA9IGZhbHNlOwogICAgfQogICAgLyoqCiAgICAgKiBTaG93cyB0aGUge0BsaW5rICN0b29sYmFyVmlld30gYXR0YWNoZWQgdG8gdGhlIHtAbGluayAjYnV0dG9uVmlld30uCiAgICAgKiBJZiB0aGUgdG9vbGJhciBpcyBhbHJlYWR5IHZpc2libGUsIHRoZW4gaXQgc2ltcGx5IHJlcG9zaXRpb25zIGl0LgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX3Nob3dQYW5lbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX3Nob3dQYW5lbCgpIHsKICAgICAgdmFyIHdhc1Zpc2libGUgPSB0aGlzLnBhbmVsVmlldy5pc1Zpc2libGU7IC8vIFNvIGhlcmUncyB0aGUgdGhpbmc6IElmIHRoZXJlIHdhcyBubyBpbml0aWFsIHBhbmVsVmlldyNzaG93KCkgb3IgdGhlc2UgdHdvIHdlcmUgaW4gZGlmZmVyZW50IG9yZGVyLCB0aGUgdG9vbGJhcgogICAgICAvLyBwb3NpdGlvbmluZyB3aWxsIGJyZWFrIGluIFJUTCBlZGl0b3JzLiBXZWlyZCwgcmlnaHQ/IFdoYXQgeW91IHNob3cga25vdyBpcyB0aGF0IHRoZSB0b29sYmFyCiAgICAgIC8vIGdyb3VwaW5nIHdvcmtzIHRoYW5rcyB0bzoKICAgICAgLy8KICAgICAgLy8gKiB0aGUgUmVzaXplT2JzZXJ2ZXIsIHdoaWNoIGtpY2tzIGluIGFzIHNvb24gYXMgdGhlIHRvb2xiYXIgc2hvd3MgdXAgaW4gRE9NIChiZWNvbWVzIHZpc2libGUgYWdhaW4pLgogICAgICAvLyAqIHRoZSBvYnNlcnZhYmxlIFRvb2xiYXJWaWV3I21heFdpZHRoLCB3aGljaCB0cmlnZ2VycyByZS1ncm91cGluZyB3aGVuIGNoYW5nZWQuCiAgICAgIC8vCiAgICAgIC8vIEhlcmUgYXJlIHRoZSBwb3NzaWJsZSBzY2VuYXJpb3M6CiAgICAgIC8vCiAgICAgIC8vIDEuIChXUk9ORyDinYwpIElmIHRoZSAjbWF4V2lkdGggaXMgc2V0IHdoZW4gdGhlIHRvb2xiYXIgaXMgaW52aXNpYmxlLCBpdCB3b24ndCBhZmZlY3QgaXRlbSBncm91cGluZyAobm8gRE9NUmVjdHMsIG5vIGdyb3VwaW5nKS4KICAgICAgLy8gICAgVGhlbiwgd2hlbiBwYW5lbFZpZXcucGluKCkgaXMgY2FsbGVkLCB0aGUgcG9zaXRpb24gb2YgdGhlIHRvb2xiYXIgd2lsbCBiZSBjYWxjdWxhdGVkIGZvciB0aGUgb2xkCiAgICAgIC8vICAgIGl0ZW1zIGdyb3VwaW5nIHN0YXRlLCBhbmQgd2hlbiBmaW5hbGx5IFJlc2l6ZU9ic2VydmVyIGtpY2tzIGluIChoZXksIHRoZSB0b29sYmFyIGlzIHZpc2libGUgbm93LCByaWdodD8pCiAgICAgIC8vICAgIGl0IHdpbGwgZ3JvdXAvdW5ncm91cCBzb21lIGl0ZW1zIGFuZCB0aGUgbGVuZ3RoIG9mIHRoZSB0b29sYmFyIHdpbGwgY2hhbmdlLiBCdXQgc2luY2UgaW4gUlRMIHRoZSB0b29sYmFyCiAgICAgIC8vICAgIGlzIGF0dGFjaGVkIG9uIHRoZSByaWdodCBzaWRlIGFuZCB0aGUgcG9zaXRpb25pbmcgdXNlcyBDU1MgImxlZnQiLCBpdCB3aWxsIHJlc3VsdCBpbiB0aGUgdG9vbGJhciBzaGlmdGluZwogICAgICAvLyAgICB0byB0aGUgbGVmdCBhbmQgYmVpbmcgZGlzcGxheWVkIGluIHRoZSB3cm9uZyBwbGFjZS4KICAgICAgLy8gMi4gKFdST05HIOKdjCkgSWYgdGhlIHBhbmVsVmlldy5waW4oKSBpcyBjYWxsZWQgZmlyc3QgYW5kICNtYXhXaWR0aCBzZXQgbmV4dCwgdGhlbiBiYXNpY2FsbHkgdGhlIHN0b3J5IHJlcGVhdHMuIFRoZSBiYWxsb29uCiAgICAgIC8vICAgIGNhbGN1bGF0ZXMgdGhlIHBvc2l0aW9uIGZvciB0aGUgb2xkIHRvb2xiYXIgZ3JvdXBpbmcgc3RhdGUsIHRoZW4gdGhlIHRvb2xiYXIgcmUtZ3JvdXBzIGl0ZW1zIGFuZCBiZWNhdXNlCiAgICAgIC8vICAgIGl0IGlzIHBvc2l0aW9uZWQgdXNpbmcgQ1NTICJsZWZ0IiBpdCB3aWxsIG1vdmUuCiAgICAgIC8vIDMuIChSSUdIVCDinIUpIFdlIHNob3cgdGhlIHBhbmVsIGZpcnN0ICh0aGUgdG9vbGJhciBkb2VzIHJlLWdyb3VwaW5nIGJ1dCBpdCBkb2VzIG5vdCBtYXR0ZXIpLCB0aGVuIHRoZSAjbWF4V2lkdGgKICAgICAgLy8gICAgaXMgc2V0IGFsbG93aW5nIHRoZSB0b29sYmFyIHRvIHJlLWdyb3VwIGFnYWluIGFuZCBmaW5hbGx5IHBhbmVsVmlldy5waW4oKSBkb2VzIHRoZSBwb3NpdGlvbmluZyB3aGVuIHRoZQogICAgICAvLyAgICBpdGVtcyBncm91cGluZyBzdGF0ZSBpcyBzdGFibGUgYW5kIGZpbmFsLgogICAgICAvLwogICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vY2tlZGl0b3IvY2tlZGl0b3I1L2lzc3Vlcy82NDQ5LCBodHRwczovL2dpdGh1Yi5jb20vY2tlZGl0b3IvY2tlZGl0b3I1L2lzc3Vlcy82NTc1CgogICAgICB0aGlzLnBhbmVsVmlldy5zaG93KCk7CiAgICAgIHRoaXMudG9vbGJhclZpZXcubWF4V2lkdGggPSB0aGlzLl9nZXRUb29sYmFyTWF4V2lkdGgoKTsKICAgICAgdGhpcy5wYW5lbFZpZXcucGluKHsKICAgICAgICB0YXJnZXQ6IHRoaXMuYnV0dG9uVmlldy5lbGVtZW50LAogICAgICAgIGxpbWl0ZXI6IHRoaXMuZWRpdG9yLnVpLmdldEVkaXRhYmxlRWxlbWVudCgpCiAgICAgIH0pOwoKICAgICAgaWYgKCF3YXNWaXNpYmxlKSB7CiAgICAgICAgdGhpcy50b29sYmFyVmlldy5pdGVtcy5nZXQoMCkuZm9jdXMoKTsKICAgICAgfQogICAgfQogICAgLyoqCiAgICAgKiBIaWRlcyB0aGUge0BsaW5rICN0b29sYmFyVmlld30uCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gW2ZvY3VzRWRpdGFibGU9ZmFsc2VdIFdoZW4gYHRydWVgLCB0aGUgZWRpdGFibGUgd2lsbCBiZSBmb2N1c2VkIGFmdGVyIGhpZGluZyB0aGUgcGFuZWwuCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX2hpZGVQYW5lbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2hpZGVQYW5lbChmb2N1c0VkaXRhYmxlKSB7CiAgICAgIHRoaXMucGFuZWxWaWV3LmlzVmlzaWJsZSA9IGZhbHNlOwoKICAgICAgaWYgKGZvY3VzRWRpdGFibGUpIHsKICAgICAgICB0aGlzLmVkaXRvci5lZGl0aW5nLnZpZXcuZm9jdXMoKTsKICAgICAgfQogICAgfQogICAgLyoqCiAgICAgKiBBdHRhY2hlcyB0aGUge0BsaW5rICNidXR0b25WaWV3fSB0byB0aGUgdGFyZ2V0IGJsb2NrIG9mIGNvbnRlbnQuCiAgICAgKgogICAgICogQHByb3RlY3RlZAogICAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gdGFyZ2V0RWxlbWVudCBUYXJnZXQgZWxlbWVudC4KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfYXR0YWNoQnV0dG9uVG9FbGVtZW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfYXR0YWNoQnV0dG9uVG9FbGVtZW50KHRhcmdldEVsZW1lbnQpIHsKICAgICAgdmFyIF90aGlzNyA9IHRoaXM7CgogICAgICB2YXIgY29udGVudFN0eWxlcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRhcmdldEVsZW1lbnQpOwogICAgICB2YXIgZWRpdGFibGVSZWN0ID0gbmV3IFJlY3QodGhpcy5lZGl0b3IudWkuZ2V0RWRpdGFibGVFbGVtZW50KCkpOwogICAgICB2YXIgY29udGVudFBhZGRpbmdUb3AgPSBwYXJzZUludChjb250ZW50U3R5bGVzLnBhZGRpbmdUb3AsIDEwKTsgLy8gV2hlbiBsaW5lIGhlaWdodCBpcyBub3QgYW4gaW50ZWdlciB0aGVuIHRocmVhZCBpdCBhcyAibm9ybWFsIi4KICAgICAgLy8gTUROIHNheXMgdGhhdCAnbm9ybWFsJyA9PSB+MS4yIG9uIGRlc2t0b3AgYnJvd3NlcnMuCgogICAgICB2YXIgY29udGVudExpbmVIZWlnaHQgPSBwYXJzZUludChjb250ZW50U3R5bGVzLmxpbmVIZWlnaHQsIDEwKSB8fCBwYXJzZUludChjb250ZW50U3R5bGVzLmZvbnRTaXplLCAxMCkgKiAxLjI7CiAgICAgIHZhciBwb3NpdGlvbiA9IGdldE9wdGltYWxQb3NpdGlvbih7CiAgICAgICAgZWxlbWVudDogdGhpcy5idXR0b25WaWV3LmVsZW1lbnQsCiAgICAgICAgdGFyZ2V0OiB0YXJnZXRFbGVtZW50LAogICAgICAgIHBvc2l0aW9uczogW2Z1bmN0aW9uIChjb250ZW50UmVjdCwgYnV0dG9uUmVjdCkgewogICAgICAgICAgdmFyIGxlZnQ7CgogICAgICAgICAgaWYgKF90aGlzNy5lZGl0b3IubG9jYWxlLnVpTGFuZ3VhZ2VEaXJlY3Rpb24gPT09ICdsdHInKSB7CiAgICAgICAgICAgIGxlZnQgPSBlZGl0YWJsZVJlY3QubGVmdCAtIGJ1dHRvblJlY3Qud2lkdGg7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsZWZ0ID0gZWRpdGFibGVSZWN0LnJpZ2h0OwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRvcDogY29udGVudFJlY3QudG9wICsgY29udGVudFBhZGRpbmdUb3AgKyAoY29udGVudExpbmVIZWlnaHQgLSBidXR0b25SZWN0LmhlaWdodCkgLyAyLAogICAgICAgICAgICBsZWZ0OiBsZWZ0CiAgICAgICAgICB9OwogICAgICAgIH1dCiAgICAgIH0pOwogICAgICB0aGlzLmJ1dHRvblZpZXcudG9wID0gcG9zaXRpb24udG9wOwogICAgICB0aGlzLmJ1dHRvblZpZXcubGVmdCA9IHBvc2l0aW9uLmxlZnQ7CiAgICB9CiAgICAvKioKICAgICAqIEdldHMgdGhlIHtAbGluayAjdG9vbGJhclZpZXd9IG1heC13aWR0aCwgYmFzZWQgb24KICAgICAqIGVkaXRhYmxlIHdpZHRoIHBsdXMgZGlzdGFuY2UgYmV0d2VlbiBmYXJ0aGVzdCBlZGdlIG9mIHRoZSB7QGxpbmsgI2J1dHRvblZpZXd9IGFuZCB0aGUgZWRpdGFibGUuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEByZXR1cm5zIHtTdHJpbmd9IG1heFdpZHRoIEEgbWF4aW11bSB3aWR0aCB0aGF0IHRvb2xiYXIgY2FuIGhhdmUsIGluIHBpeGVscy4KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfZ2V0VG9vbGJhck1heFdpZHRoIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfZ2V0VG9vbGJhck1heFdpZHRoKCkgewogICAgICB2YXIgZWRpdGFibGVFbGVtZW50ID0gdGhpcy5lZGl0b3IudWkudmlldy5lZGl0YWJsZS5lbGVtZW50OwogICAgICB2YXIgZWRpdGFibGVSZWN0ID0gbmV3IFJlY3QoZWRpdGFibGVFbGVtZW50KTsKICAgICAgdmFyIGJ1dHRvblJlY3QgPSBuZXcgUmVjdCh0aGlzLmJ1dHRvblZpZXcuZWxlbWVudCk7CiAgICAgIHZhciBpc1JUTCA9IHRoaXMuZWRpdG9yLmxvY2FsZS51aUxhbmd1YWdlRGlyZWN0aW9uID09PSAncnRsJzsKICAgICAgdmFyIG9mZnNldCA9IGlzUlRMID8gYnV0dG9uUmVjdC5sZWZ0IC0gZWRpdGFibGVSZWN0LnJpZ2h0ICsgYnV0dG9uUmVjdC53aWR0aCA6IGVkaXRhYmxlUmVjdC5sZWZ0IC0gYnV0dG9uUmVjdC5sZWZ0OwogICAgICByZXR1cm4gdG9QeChlZGl0YWJsZVJlY3Qud2lkdGggKyBvZmZzZXQpOwogICAgfQogIH1dLCBbewogICAga2V5OiAicGx1Z2luTmFtZSIsCiAgICBnZXQ6CiAgICAvKioKICAgICAqIEBpbmhlcml0RG9jCiAgICAgKi8KICAgIGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuICdCbG9ja1Rvb2xiYXInOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEJsb2NrVG9vbGJhcjsKfShQbHVnaW4pOwovKioKICogVGhlIGJsb2NrIHRvb2xiYXIgY29uZmlndXJhdGlvbi4gVXNlZCBieSB0aGUge0BsaW5rIG1vZHVsZTp1aS90b29sYmFyL2Jsb2NrL2Jsb2NrdG9vbGJhcn5CbG9ja1Rvb2xiYXJ9CiAqIGZlYXR1cmUuCiAqCiAqCQljb25zdCBjb25maWcgPSB7CiAqCQkJYmxvY2tUb29sYmFyOiBbICdwYXJhZ3JhcGgnLCAnaGVhZGluZzEnLCAnaGVhZGluZzInLCAnYnVsbGV0ZWRMaXN0JywgJ251bWJlcmVkTGlzdCcgXQogKgkJfTsKICoKICogWW91IGNhbiBhbHNvIHVzZSBgJ3wnYCB0byBjcmVhdGUgYSBzZXBhcmF0b3IgYmV0d2VlbiBncm91cHMgb2YgaXRlbXM6CiAqCiAqCQljb25zdCBjb25maWcgPSB7CiAqCQkJYmxvY2tUb29sYmFyOiBbICdwYXJhZ3JhcGgnLCAnaGVhZGluZzEnLCAnaGVhZGluZzInLCAnfCcsICdidWxsZXRlZExpc3QnLCAnbnVtYmVyZWRMaXN0JyBdCiAqCQl9OwogKgogKiAjIyBDb25maWd1cmluZyBpdGVtcyBncm91cGluZwogKgogKiBZb3UgY2FuIHByZXZlbnQgYXV0b21hdGljIGl0ZW1zIGdyb3VwaW5nIGJ5IHNldHRpbmcgdGhlIGBzaG91bGROb3RHcm91cFdoZW5GdWxsYCBvcHRpb246CiAqCiAqCQljb25zdCBjb25maWcgPSB7CiAqCQkJYmxvY2tUb29sYmFyOiB7CiAqCQkJCWl0ZW1zOiBbICdwYXJhZ3JhcGgnLCAnaGVhZGluZzEnLCAnaGVhZGluZzInLCAnfCcsICdidWxsZXRlZExpc3QnLCAnbnVtYmVyZWRMaXN0JyBdLAogKgkJCQlzaG91bGROb3RHcm91cFdoZW5GdWxsOiB0cnVlCiAqCQkJfSwKICoJCX07CiAqCiAqIFJlYWQgbW9yZSBhYm91dCBjb25maWd1cmluZyB0aGUgbWFpbiBlZGl0b3IgdG9vbGJhciBpbiB7QGxpbmsgbW9kdWxlOmNvcmUvZWRpdG9yL2VkaXRvcmNvbmZpZ35FZGl0b3JDb25maWcjdG9vbGJhcn0uCiAqCiAqIEBtZW1iZXIge0FycmF5LjxTdHJpbmc+fE9iamVjdH0gbW9kdWxlOmNvcmUvZWRpdG9yL2VkaXRvcmNvbmZpZ35FZGl0b3JDb25maWcjYmxvY2tUb29sYmFyCiAqLwoKCmV4cG9ydCB7IEJsb2NrVG9vbGJhciBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/toolbar/block/blocktoolbar.js"],"names":["Plugin","icons","BlockButtonView","BalloonPanelView","ToolbarView","clickOutsideHandler","getOptimalPosition","Rect","normalizeToolbarConfig","ResizeObserver","toUnit","toPx","BlockToolbar","editor","_blockToolbarConfig","config","get","toolbarView","_createToolbarView","panelView","_createPanelView","buttonView","_createButtonView","_resizeObserver","emitter","contextElements","element","activator","isVisible","callback","_hidePanel","listenTo","model","document","selection","evt","data","directChange","ui","_updateButton","priority","focusTracker","name","window","stopListening","factory","componentFactory","fillFromConfig","items","item","on","shouldNotGroupWhenFull","editableElement","view","editable","maxWidth","_getToolbarMaxWidth","destroy","shouldGroupWhenFull","locale","isFloating","is","content","add","class","body","keystrokes","set","cancel","t","label","icon","pilcrow","withText","bind","to","_showPanel","editing","isFocused","_hideButton","isReadOnly","modelTarget","Array","from","getSelectedBlocks","every","isEnabled","domTarget","domConverter","mapViewToDom","mapper","toViewElement","_attachButtonToElement","wasVisible","show","pin","target","limiter","getEditableElement","focus","focusEditable","targetElement","contentStyles","getComputedStyle","editableRect","contentPaddingTop","parseInt","paddingTop","contentLineHeight","lineHeight","fontSize","position","positions","contentRect","buttonRect","left","uiLanguageDirection","width","right","top","height","isRTL","offset"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/block/blocktoolbar\n */\n\n/* global window */\n\nimport { Plugin, icons } from 'ckeditor5/src/core';\n\nimport BlockButtonView from './blockbuttonview';\nimport BalloonPanelView from '../../panel/balloon/balloonpanelview';\nimport ToolbarView from '../toolbarview';\n\nimport clickOutsideHandler from '../../bindings/clickoutsidehandler';\n\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\nimport normalizeToolbarConfig from '../normalizetoolbarconfig';\n\nimport ResizeObserver from '@ckeditor/ckeditor5-utils/src/dom/resizeobserver';\n\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\n\nconst toPx = toUnit( 'px' );\n\n/**\n * The block toolbar plugin.\n *\n * This plugin provides a button positioned next to the block of content where the selection is anchored.\n * Upon clicking the button, a dropdown providing access to editor features shows up, as configured in\n * {@link module:core/editor/editorconfig~EditorConfig#blockToolbar}.\n *\n * By default, the button is displayed next to all elements marked in {@link module:engine/model/schema~Schema}\n * as `$block` for which the toolbar provides at least one option.\n *\n * By default, the button is attached so its right boundary is touching the\n * {@link module:engine/view/editableelement~EditableElement}:\n *\n * \t\t __ |\n * \t\t|  ||  This is a block of content that the\n * \t\t ¯¯ |  button is attached to. This is a\n * \t\t    |  block of content that the button is\n * \t\t    |  attached to.\n *\n * The position of the button can be adjusted using the CSS `transform` property:\n *\n * \t\t.ck-block-toolbar-button {\n * \t\t\ttransform: translateX( -10px );\n * \t\t}\n *\n * \t\t __   |\n * \t\t|  |  |  This is a block of content that the\n * \t\t ¯¯   |  button is attached to. This is a\n * \t\t      |  block of content that the button is\n * \t\t      |  attached to.\n *\n * **Note**: If you plan to run the editor in a right–to–left (RTL) language, keep in mind the button\n * will be attached to the **right** boundary of the editable area. In that case, make sure the\n * CSS position adjustment works properly by adding the following styles:\n *\n * \t\t.ck[dir=\"rtl\"] .ck-block-toolbar-button {\n * \t\t\ttransform: translateX( 10px );\n * \t\t}\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BlockToolbar extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'BlockToolbar';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A cached and normalized `config.blockToolbar` object.\n\t\t *\n\t\t * @type {module:core/editor/editorconfig~EditorConfig#blockToolbar}\n\t\t * @private\n\t\t */\n\t\tthis._blockToolbarConfig = normalizeToolbarConfig( this.editor.config.get( 'blockToolbar' ) );\n\n\t\t/**\n\t\t * The toolbar view.\n\t\t *\n\t\t * @type {module:ui/toolbar/toolbarview~ToolbarView}\n\t\t */\n\t\tthis.toolbarView = this._createToolbarView();\n\n\t\t/**\n\t\t * The balloon panel view, containing the {@link #toolbarView}.\n\t\t *\n\t\t * @type {module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n\t\t */\n\t\tthis.panelView = this._createPanelView();\n\n\t\t/**\n\t\t * The button view that opens the {@link #toolbarView}.\n\t\t *\n\t\t * @type {module:ui/toolbar/block/blockbuttonview~BlockButtonView}\n\t\t */\n\t\tthis.buttonView = this._createButtonView();\n\n\t\t/**\n\t\t * An instance of the resize observer that allows to respond to changes in editable's geometry\n\t\t * so the toolbar can stay within its boundaries (and group toolbar items that do not fit).\n\t\t *\n\t\t * **Note**: Used only when `shouldNotGroupWhenFull` was **not** set in the\n\t\t * {@link module:core/editor/editorconfig~EditorConfig#blockToolbar configuration}.\n\t\t *\n\t\t * **Note:** Created in {@link #afterInit}.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/dom/resizeobserver~ResizeObserver}\n\t\t */\n\t\tthis._resizeObserver = null;\n\n\t\t// Close the #panelView upon clicking outside of the plugin UI.\n\t\tclickOutsideHandler( {\n\t\t\temitter: this.panelView,\n\t\t\tcontextElements: [ this.panelView.element, this.buttonView.element ],\n\t\t\tactivator: () => this.panelView.isVisible,\n\t\t\tcallback: () => this._hidePanel()\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Hides panel on a direct selection change.\n\t\tthis.listenTo( editor.model.document.selection, 'change:range', ( evt, data ) => {\n\t\t\tif ( data.directChange ) {\n\t\t\t\tthis._hidePanel();\n\t\t\t}\n\t\t} );\n\n\t\tthis.listenTo( editor.ui, 'update', () => this._updateButton() );\n\t\t// `low` priority is used because of https://github.com/ckeditor/ckeditor5-core/issues/133.\n\t\tthis.listenTo( editor, 'change:isReadOnly', () => this._updateButton(), { priority: 'low' } );\n\t\tthis.listenTo( editor.ui.focusTracker, 'change:isFocused', () => this._updateButton() );\n\n\t\t// Reposition button on resize.\n\t\tthis.listenTo( this.buttonView, 'change:isVisible', ( evt, name, isVisible ) => {\n\t\t\tif ( isVisible ) {\n\t\t\t\t// Keep correct position of button and panel on window#resize.\n\t\t\t\tthis.buttonView.listenTo( window, 'resize', () => this._updateButton() );\n\t\t\t} else {\n\t\t\t\t// Stop repositioning button when is hidden.\n\t\t\t\tthis.buttonView.stopListening( window, 'resize' );\n\n\t\t\t\t// Hide the panel when the button disappears.\n\t\t\t\tthis._hidePanel();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Fills the toolbar with its items based on the configuration.\n\t *\n\t * **Note:** This needs to be done after all plugins are ready.\n\t *\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst factory = this.editor.ui.componentFactory;\n\t\tconst config = this._blockToolbarConfig;\n\n\t\tthis.toolbarView.fillFromConfig( config, factory );\n\n\t\t// Hide panel before executing each button in the panel.\n\t\tfor ( const item of this.toolbarView.items ) {\n\t\t\titem.on( 'execute', () => this._hidePanel( true ), { priority: 'high' } );\n\t\t}\n\n\t\tif ( !config.shouldNotGroupWhenFull ) {\n\t\t\tthis.listenTo( this.editor, 'ready', () => {\n\t\t\t\tconst editableElement = this.editor.ui.view.editable.element;\n\n\t\t\t\t// Set #toolbarView's max-width just after the initialization and update it on the editable resize.\n\t\t\t\tthis._resizeObserver = new ResizeObserver( editableElement, () => {\n\t\t\t\t\tthis.toolbarView.maxWidth = this._getToolbarMaxWidth();\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\t// Destroy created UI components as they are not automatically destroyed (see ckeditor5#1341).\n\t\tthis.panelView.destroy();\n\t\tthis.buttonView.destroy();\n\t\tthis.toolbarView.destroy();\n\n\t\tif ( this._resizeObserver ) {\n\t\t\tthis._resizeObserver.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * Creates the {@link #toolbarView}.\n\t *\n\t * @private\n\t * @returns {module:ui/toolbar/toolbarview~ToolbarView}\n\t */\n\t_createToolbarView() {\n\t\tconst shouldGroupWhenFull = !this._blockToolbarConfig.shouldNotGroupWhenFull;\n\t\tconst toolbarView = new ToolbarView( this.editor.locale, {\n\t\t\tshouldGroupWhenFull,\n\t\t\tisFloating: true\n\t\t} );\n\n\t\t// When toolbar lost focus then panel should hide.\n\t\ttoolbarView.focusTracker.on( 'change:isFocused', ( evt, name, is ) => {\n\t\t\tif ( !is ) {\n\t\t\t\tthis._hidePanel();\n\t\t\t}\n\t\t} );\n\n\t\treturn toolbarView;\n\t}\n\n\t/**\n\t * Creates the {@link #panelView}.\n\t *\n\t * @private\n\t * @returns {module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n\t */\n\t_createPanelView() {\n\t\tconst editor = this.editor;\n\t\tconst panelView = new BalloonPanelView( editor.locale );\n\n\t\tpanelView.content.add( this.toolbarView );\n\t\tpanelView.class = 'ck-toolbar-container';\n\t\teditor.ui.view.body.add( panelView );\n\t\teditor.ui.focusTracker.add( panelView.element );\n\n\t\t// Close #panelView on `Esc` press.\n\t\tthis.toolbarView.keystrokes.set( 'Esc', ( evt, cancel ) => {\n\t\t\tthis._hidePanel( true );\n\t\t\tcancel();\n\t\t} );\n\n\t\treturn panelView;\n\t}\n\n\t/**\n\t * Creates the {@link #buttonView}.\n\t *\n\t * @private\n\t * @returns {module:ui/toolbar/block/blockbuttonview~BlockButtonView}\n\t */\n\t_createButtonView() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst buttonView = new BlockButtonView( editor.locale );\n\n\t\tbuttonView.set( {\n\t\t\tlabel: t( 'Edit block' ),\n\t\t\ticon: icons.pilcrow,\n\t\t\twithText: false\n\t\t} );\n\n\t\t// Bind the panelView observable properties to the buttonView.\n\t\tbuttonView.bind( 'isOn' ).to( this.panelView, 'isVisible' );\n\t\tbuttonView.bind( 'tooltip' ).to( this.panelView, 'isVisible', isVisible => !isVisible );\n\n\t\t// Toggle the panelView upon buttonView#execute.\n\t\tthis.listenTo( buttonView, 'execute', () => {\n\t\t\tif ( !this.panelView.isVisible ) {\n\t\t\t\tthis._showPanel();\n\t\t\t} else {\n\t\t\t\tthis._hidePanel( true );\n\t\t\t}\n\t\t} );\n\n\t\teditor.ui.view.body.add( buttonView );\n\t\teditor.ui.focusTracker.add( buttonView.element );\n\n\t\treturn buttonView;\n\t}\n\n\t/**\n\t * Shows or hides the button.\n\t * When all the conditions for displaying the button are matched, it shows the button. Hides otherwise.\n\t *\n\t * @private\n\t */\n\t_updateButton() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst view = editor.editing.view;\n\n\t\t// Hides the button when the editor is not focused.\n\t\tif ( !editor.ui.focusTracker.isFocused ) {\n\t\t\tthis._hideButton();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Hides the button when the editor switches to the read-only mode.\n\t\tif ( editor.isReadOnly ) {\n\t\t\tthis._hideButton();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the first selected block, button will be attached to this element.\n\t\tconst modelTarget = Array.from( model.document.selection.getSelectedBlocks() )[ 0 ];\n\n\t\t// Hides the button when there is no enabled item in toolbar for the current block element.\n\t\tif ( !modelTarget || Array.from( this.toolbarView.items ).every( item => !item.isEnabled ) ) {\n\t\t\tthis._hideButton();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Get DOM target element.\n\t\tconst domTarget = view.domConverter.mapViewToDom( editor.editing.mapper.toViewElement( modelTarget ) );\n\n\t\t// Show block button.\n\t\tthis.buttonView.isVisible = true;\n\n\t\t// Attach block button to target DOM element.\n\t\tthis._attachButtonToElement( domTarget );\n\n\t\t// When panel is opened then refresh it position to be properly aligned with block button.\n\t\tif ( this.panelView.isVisible ) {\n\t\t\tthis._showPanel();\n\t\t}\n\t}\n\n\t/**\n\t * Hides the button.\n\t *\n\t * @private\n\t */\n\t_hideButton() {\n\t\tthis.buttonView.isVisible = false;\n\t}\n\n\t/**\n\t * Shows the {@link #toolbarView} attached to the {@link #buttonView}.\n\t * If the toolbar is already visible, then it simply repositions it.\n\t *\n\t * @private\n\t */\n\t_showPanel() {\n\t\tconst wasVisible = this.panelView.isVisible;\n\n\t\t// So here's the thing: If there was no initial panelView#show() or these two were in different order, the toolbar\n\t\t// positioning will break in RTL editors. Weird, right? What you show know is that the toolbar\n\t\t// grouping works thanks to:\n\t\t//\n\t\t// * the ResizeObserver, which kicks in as soon as the toolbar shows up in DOM (becomes visible again).\n\t\t// * the observable ToolbarView#maxWidth, which triggers re-grouping when changed.\n\t\t//\n\t\t// Here are the possible scenarios:\n\t\t//\n\t\t// 1. (WRONG ❌) If the #maxWidth is set when the toolbar is invisible, it won't affect item grouping (no DOMRects, no grouping).\n\t\t//    Then, when panelView.pin() is called, the position of the toolbar will be calculated for the old\n\t\t//    items grouping state, and when finally ResizeObserver kicks in (hey, the toolbar is visible now, right?)\n\t\t//    it will group/ungroup some items and the length of the toolbar will change. But since in RTL the toolbar\n\t\t//    is attached on the right side and the positioning uses CSS \"left\", it will result in the toolbar shifting\n\t\t//    to the left and being displayed in the wrong place.\n\t\t// 2. (WRONG ❌) If the panelView.pin() is called first and #maxWidth set next, then basically the story repeats. The balloon\n\t\t//    calculates the position for the old toolbar grouping state, then the toolbar re-groups items and because\n\t\t//    it is positioned using CSS \"left\" it will move.\n\t\t// 3. (RIGHT ✅) We show the panel first (the toolbar does re-grouping but it does not matter), then the #maxWidth\n\t\t//    is set allowing the toolbar to re-group again and finally panelView.pin() does the positioning when the\n\t\t//    items grouping state is stable and final.\n\t\t//\n\t\t// https://github.com/ckeditor/ckeditor5/issues/6449, https://github.com/ckeditor/ckeditor5/issues/6575\n\t\tthis.panelView.show();\n\t\tthis.toolbarView.maxWidth = this._getToolbarMaxWidth();\n\n\t\tthis.panelView.pin( {\n\t\t\ttarget: this.buttonView.element,\n\t\t\tlimiter: this.editor.ui.getEditableElement()\n\t\t} );\n\n\t\tif ( !wasVisible ) {\n\t\t\tthis.toolbarView.items.get( 0 ).focus();\n\t\t}\n\t}\n\n\t/**\n\t * Hides the {@link #toolbarView}.\n\t *\n\t * @private\n\t * @param {Boolean} [focusEditable=false] When `true`, the editable will be focused after hiding the panel.\n\t */\n\t_hidePanel( focusEditable ) {\n\t\tthis.panelView.isVisible = false;\n\n\t\tif ( focusEditable ) {\n\t\t\tthis.editor.editing.view.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Attaches the {@link #buttonView} to the target block of content.\n\t *\n\t * @protected\n\t * @param {HTMLElement} targetElement Target element.\n\t */\n\t_attachButtonToElement( targetElement ) {\n\t\tconst contentStyles = window.getComputedStyle( targetElement );\n\n\t\tconst editableRect = new Rect( this.editor.ui.getEditableElement() );\n\t\tconst contentPaddingTop = parseInt( contentStyles.paddingTop, 10 );\n\t\t// When line height is not an integer then thread it as \"normal\".\n\t\t// MDN says that 'normal' == ~1.2 on desktop browsers.\n\t\tconst contentLineHeight = parseInt( contentStyles.lineHeight, 10 ) || parseInt( contentStyles.fontSize, 10 ) * 1.2;\n\n\t\tconst position = getOptimalPosition( {\n\t\t\telement: this.buttonView.element,\n\t\t\ttarget: targetElement,\n\t\t\tpositions: [\n\t\t\t\t( contentRect, buttonRect ) => {\n\t\t\t\t\tlet left;\n\n\t\t\t\t\tif ( this.editor.locale.uiLanguageDirection === 'ltr' ) {\n\t\t\t\t\t\tleft = editableRect.left - buttonRect.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tleft = editableRect.right;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttop: contentRect.top + contentPaddingTop + ( contentLineHeight - buttonRect.height ) / 2,\n\t\t\t\t\t\tleft\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\tthis.buttonView.top = position.top;\n\t\tthis.buttonView.left = position.left;\n\t}\n\n\t/**\n\t * Gets the {@link #toolbarView} max-width, based on\n\t * editable width plus distance between farthest edge of the {@link #buttonView} and the editable.\n\t *\n\t * @private\n\t * @returns {String} maxWidth A maximum width that toolbar can have, in pixels.\n\t */\n\t_getToolbarMaxWidth() {\n\t\tconst editableElement = this.editor.ui.view.editable.element;\n\t\tconst editableRect = new Rect( editableElement );\n\t\tconst buttonRect = new Rect( this.buttonView.element );\n\t\tconst isRTL = this.editor.locale.uiLanguageDirection === 'rtl';\n\t\tconst offset = isRTL ? ( buttonRect.left - editableRect.right ) + buttonRect.width : editableRect.left - buttonRect.left;\n\n\t\treturn toPx( editableRect.width + offset );\n\t}\n}\n\n/**\n * The block toolbar configuration. Used by the {@link module:ui/toolbar/block/blocktoolbar~BlockToolbar}\n * feature.\n *\n *\t\tconst config = {\n *\t\t\tblockToolbar: [ 'paragraph', 'heading1', 'heading2', 'bulletedList', 'numberedList' ]\n *\t\t};\n *\n * You can also use `'|'` to create a separator between groups of items:\n *\n *\t\tconst config = {\n *\t\t\tblockToolbar: [ 'paragraph', 'heading1', 'heading2', '|', 'bulletedList', 'numberedList' ]\n *\t\t};\n *\n * ## Configuring items grouping\n *\n * You can prevent automatic items grouping by setting the `shouldNotGroupWhenFull` option:\n *\n *\t\tconst config = {\n *\t\t\tblockToolbar: {\n *\t\t\t\titems: [ 'paragraph', 'heading1', 'heading2', '|', 'bulletedList', 'numberedList' ],\n *\t\t\t\tshouldNotGroupWhenFull: true\n *\t\t\t},\n *\t\t};\n *\n * Read more about configuring the main editor toolbar in {@link module:core/editor/editorconfig~EditorConfig#toolbar}.\n *\n * @member {Array.<String>|Object} module:core/editor/editorconfig~EditorConfig#blockToolbar\n */\n"]}]}