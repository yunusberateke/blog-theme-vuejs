{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-core/src/multicommand.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-core/src/multicommand.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CgovKioKICogQGxpY2Vuc2UgQ29weXJpZ2h0IChjKSAyMDAzLTIwMjEsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIEZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHBzOi8vY2tlZGl0b3IuY29tL2xlZ2FsL2NrZWRpdG9yLW9zcy1saWNlbnNlCiAqLwppbXBvcnQgQ29tbWFuZCBmcm9tICcuL2NvbW1hbmQnOwovKioKICogQG1vZHVsZSBjb3JlL211bHRpY29tbWFuZAogKi8KCi8qKgogKiBBIENLRWRpdG9yIGNvbW1hbmQgdGhhdCBhZ2dyZWdhdGVzIG90aGVyIGNvbW1hbmRzLgogKgogKiBUaGlzIGNvbW1hbmQgaXMgdXNlZCB0byBwcm94eSBtdWx0aXBsZSBjb21tYW5kcy4gVGhlIG11bHRpLWNvbW1hbmQgaXMgZW5hYmxlZCB3aGVuCiAqIGF0IGxlYXN0IG9uZSBvZiBpdHMgcmVnaXN0ZXJlZCBjaGlsZCBjb21tYW5kcyBpcyBlbmFibGVkLgogKiBXaGVuIGV4ZWN1dGluZyBhIG11bHRpLWNvbW1hbmQgdGhlIGZpcnN0IGNvbW1hbmQgdGhhdCBpcyBlbmFibGVkIHdpbGwgYmUgZXhlY3V0ZWQuCiAqCiAqCQljb25zdCBtdWx0aUNvbW1hbmQgPSBuZXcgTXVsdGlDb21tYW5kKCBlZGl0b3IgKTsKICoKICoJCWNvbnN0IGNvbW1hbmRGb28gPSBuZXcgQ29tbWFuZCggZWRpdG9yICk7CiAqCQljb25zdCBjb21tYW5kQmFyID0gbmV3IENvbW1hbmQoIGVkaXRvciApOwogKgogKgkJLy8gUmVnaXN0ZXIgY2hpbGQgY29tbWFuZHMuCiAqCQltdWx0aUNvbW1hbmQucmVnaXN0ZXJDaGlsZENvbW1hbmQoIGNvbW1hbmRGb28gKTsKICoJCW11bHRpQ29tbWFuZC5yZWdpc3RlckNoaWxkQ29tbWFuZCggY29tbWFuZEJhciApOwogKgogKgkJLy8gRW5hYmxlIG9uZSBvZiB0aGUgY29tbWFuZHMuCiAqCQljb21tYW5kQmFyLmlzRW5hYmxlZCA9IHRydWU7CiAqCiAqCQltdWx0aUNvbW1hbmQuZXhlY3V0ZSgpOyAvLyBXaWxsIGV4ZWN1dGUgY29tbWFuZEJhci4KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvY29tbWFuZH5Db21tYW5kCiAqLwoKdmFyIE11bHRpQ29tbWFuZCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbW1hbmQpIHsKICBfaW5oZXJpdHMoTXVsdGlDb21tYW5kLCBfQ29tbWFuZCk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTXVsdGlDb21tYW5kKTsKCiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KICBmdW5jdGlvbiBNdWx0aUNvbW1hbmQoZWRpdG9yKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE11bHRpQ29tbWFuZCk7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBlZGl0b3IpOwogICAgLyoqCiAgICAgKiBSZWdpc3RlcmVkIGNoaWxkIGNvbW1hbmRzLgogICAgICoKICAgICAqIEB0eXBlIHtBcnJheS48bW9kdWxlOmNvcmUvY29tbWFuZH5Db21tYW5kPn0KICAgICAqIEBwcml2YXRlCiAgICAgKi8KCiAgICBfdGhpcy5fY2hpbGRDb21tYW5kcyA9IFtdOwogICAgcmV0dXJuIF90aGlzOwogIH0KICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwoKCiAgX2NyZWF0ZUNsYXNzKE11bHRpQ29tbWFuZCwgW3sKICAgIGtleTogInJlZnJlc2giLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlZnJlc2goKSB7Ly8gT3ZlcnJpZGUgYmFzZSBjb21tYW5kIHJlZnJlc2goKTogdGhlIGNvbW1hbmQncyBzdGF0ZSBpcyBjaGFuZ2VkIHdoZW4gb25lIG9mIGNoaWxkIGNvbW1hbmRzIGNoYW5nZXMgc3RhdGVzLgogICAgfQogICAgLyoqCiAgICAgKiBFeGVjdXRlcyB0aGUgZmlyc3Qgb2YgaXQgcmVnaXN0ZXJlZCBjaGlsZCBjb21tYW5kcy4KICAgICAqCiAgICAgKiBAcmV0dXJucyB7Kn0gVGhlIHZhbHVlIHJldHVybmVkIGJ5IHRoZSB7QGxpbmsgbW9kdWxlOmNvcmUvY29tbWFuZH5Db21tYW5kI2V4ZWN1dGUgYGNvbW1hbmQuZXhlY3V0ZSgpYH0uCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZXhlY3V0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZXhlY3V0ZSgpIHsKICAgICAgdmFyIGNvbW1hbmQgPSB0aGlzLl9nZXRGaXJzdEVuYWJsZWRDb21tYW5kKCk7CgogICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogICAgICB9CgogICAgICByZXR1cm4gY29tbWFuZCAhPSBudWxsICYmIGNvbW1hbmQuZXhlY3V0ZShhcmdzKTsKICAgIH0KICAgIC8qKgogICAgICogUmVnaXN0ZXJzIGEgY2hpbGQgY29tbWFuZC4KICAgICAqCiAgICAgKiBAcGFyYW0ge21vZHVsZTpjb3JlL2NvbW1hbmR+Q29tbWFuZH0gY29tbWFuZAogICAgICovCgogIH0sIHsKICAgIGtleTogInJlZ2lzdGVyQ2hpbGRDb21tYW5kIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWdpc3RlckNoaWxkQ29tbWFuZChjb21tYW5kKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5fY2hpbGRDb21tYW5kcy5wdXNoKGNvbW1hbmQpOyAvLyBDaGFuZ2UgbXVsdGkgY29tbWFuZCBlbmFibGVkIHN0YXRlIHdoZW4gb25lIG9mIHJlZ2lzdGVyZWQgY29tbWFuZHMgY2hhbmdlcyBzdGF0ZS4KCgogICAgICBjb21tYW5kLm9uKCdjaGFuZ2U6aXNFbmFibGVkJywgZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczIuX2NoZWNrRW5hYmxlZCgpOwogICAgICB9KTsKCiAgICAgIHRoaXMuX2NoZWNrRW5hYmxlZCgpOwogICAgfQogICAgLyoqCiAgICAgKiBDaGVja3MgaWYgYW55IG9mIGNoaWxkIGNvbW1hbmRzIGlzIGVuYWJsZWQuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfY2hlY2tFbmFibGVkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfY2hlY2tFbmFibGVkKCkgewogICAgICB0aGlzLmlzRW5hYmxlZCA9ICEhdGhpcy5fZ2V0Rmlyc3RFbmFibGVkQ29tbWFuZCgpOwogICAgfQogICAgLyoqCiAgICAgKiBSZXR1cm5zIGEgZmlyc3QgZW5hYmxlZCBjb21tYW5kIG9yIHVuZGVmaW5lZCBpZiBub25lIG9mIHRoZW0gaXMgZW5hYmxlZC4KICAgICAqCiAgICAgKiBAcmV0dXJucyB7bW9kdWxlOmNvcmUvY29tbWFuZH5Db21tYW5kfHVuZGVmaW5lZH0KICAgICAqIEBwcml2YXRlCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX2dldEZpcnN0RW5hYmxlZENvbW1hbmQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXRGaXJzdEVuYWJsZWRDb21tYW5kKCkgewogICAgICByZXR1cm4gdGhpcy5fY2hpbGRDb21tYW5kcy5maW5kKGZ1bmN0aW9uIChjb21tYW5kKSB7CiAgICAgICAgcmV0dXJuIGNvbW1hbmQuaXNFbmFibGVkOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBNdWx0aUNvbW1hbmQ7Cn0oQ29tbWFuZCk7CgpleHBvcnQgeyBNdWx0aUNvbW1hbmQgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-core/src/multicommand.js"],"names":["Command","MultiCommand","editor","_childCommands","command","_getFirstEnabledCommand","args","execute","push","on","_checkEnabled","isEnabled","find"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,OAAP,MAAoB,WAApB;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,Y;;;;;AACpB;AACD;AACA;AACC,wBAAaC,MAAb,EAAsB;AAAA;;AAAA;;AACrB,8BAAOA,MAAP;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,UAAKC,cAAL,GAAsB,EAAtB;AATqB;AAUrB;AAED;AACD;AACA;;;;;WACC,mBAAU,CACT;AACA;AAED;AACD;AACA;AACA;AACA;;;;WACC,mBAAmB;AAClB,UAAMC,OAAO,GAAG,KAAKC,uBAAL,EAAhB;;AADkB,wCAAPC,IAAO;AAAPA,QAAAA,IAAO;AAAA;;AAGlB,aAAOF,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACG,OAAR,CAAiBD,IAAjB,CAA1B;AACA;AAED;AACD;AACA;AACA;AACA;;;;WACC,8BAAsBF,OAAtB,EAAgC;AAAA;;AAC/B,WAAKD,cAAL,CAAoBK,IAApB,CAA0BJ,OAA1B,EAD+B,CAG/B;;;AACAA,MAAAA,OAAO,CAACK,EAAR,CAAY,kBAAZ,EAAgC;AAAA,eAAM,MAAI,CAACC,aAAL,EAAN;AAAA,OAAhC;;AAEA,WAAKA,aAAL;AACA;AAED;AACD;AACA;AACA;AACA;;;;WACC,yBAAgB;AACf,WAAKC,SAAL,GAAiB,CAAC,CAAC,KAAKN,uBAAL,EAAnB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;;WACC,mCAA0B;AACzB,aAAO,KAAKF,cAAL,CAAoBS,IAApB,CAA0B,UAAAR,OAAO;AAAA,eAAIA,OAAO,CAACO,SAAZ;AAAA,OAAjC,CAAP;AACA;;;;EAjEwCX,O;;SAArBC,Y","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport Command from './command';\n\n/**\n * @module core/multicommand\n */\n\n/**\n * A CKEditor command that aggregates other commands.\n *\n * This command is used to proxy multiple commands. The multi-command is enabled when\n * at least one of its registered child commands is enabled.\n * When executing a multi-command the first command that is enabled will be executed.\n *\n *\t\tconst multiCommand = new MultiCommand( editor );\n *\n *\t\tconst commandFoo = new Command( editor );\n *\t\tconst commandBar = new Command( editor );\n *\n *\t\t// Register child commands.\n *\t\tmultiCommand.registerChildCommand( commandFoo );\n *\t\tmultiCommand.registerChildCommand( commandBar );\n *\n *\t\t// Enable one of the commands.\n *\t\tcommandBar.isEnabled = true;\n *\n *\t\tmultiCommand.execute(); // Will execute commandBar.\n *\n * @extends module:core/command~Command\n */\nexport default class MultiCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Registered child commands.\n\t\t *\n\t\t * @type {Array.<module:core/command~Command>}\n\t\t * @private\n\t\t */\n\t\tthis._childCommands = [];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\t// Override base command refresh(): the command's state is changed when one of child commands changes states.\n\t}\n\n\t/**\n\t * Executes the first of it registered child commands.\n\t *\n\t * @returns {*} The value returned by the {@link module:core/command~Command#execute `command.execute()`}.\n\t */\n\texecute( ...args ) {\n\t\tconst command = this._getFirstEnabledCommand();\n\n\t\treturn command != null && command.execute( args );\n\t}\n\n\t/**\n\t * Registers a child command.\n\t *\n\t * @param {module:core/command~Command} command\n\t */\n\tregisterChildCommand( command ) {\n\t\tthis._childCommands.push( command );\n\n\t\t// Change multi command enabled state when one of registered commands changes state.\n\t\tcommand.on( 'change:isEnabled', () => this._checkEnabled() );\n\n\t\tthis._checkEnabled();\n\t}\n\n\t/**\n\t * Checks if any of child commands is enabled.\n\t *\n\t * @private\n\t */\n\t_checkEnabled() {\n\t\tthis.isEnabled = !!this._getFirstEnabledCommand();\n\t}\n\n\t/**\n\t * Returns a first enabled command or undefined if none of them is enabled.\n\t *\n\t * @returns {module:core/command~Command|undefined}\n\t * @private\n\t */\n\t_getFirstEnabledCommand() {\n\t\treturn this._childCommands.find( command => command.isEnabled );\n\t}\n}\n"]}]}