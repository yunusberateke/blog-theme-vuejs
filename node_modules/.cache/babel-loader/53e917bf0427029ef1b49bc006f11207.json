{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/focustracker.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/focustracker.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwoKLyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDIxLCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qIGdsb2JhbCBzZXRUaW1lb3V0LCBjbGVhclRpbWVvdXQgKi8KCi8qKgogKiBAbW9kdWxlIHV0aWxzL2ZvY3VzdHJhY2tlcgogKi8KaW1wb3J0IERvbUVtaXR0ZXJNaXhpbiBmcm9tICcuL2RvbS9lbWl0dGVybWl4aW4nOwppbXBvcnQgT2JzZXJ2YWJsZU1peGluIGZyb20gJy4vb2JzZXJ2YWJsZW1peGluJzsKaW1wb3J0IENLRWRpdG9yRXJyb3IgZnJvbSAnLi9ja2VkaXRvcmVycm9yJzsKaW1wb3J0IG1peCBmcm9tICcuL21peCc7Ci8qKgogKiBBbGxvd3Mgb2JzZXJ2aW5nIGEgZ3JvdXAgb2YgYEhUTUxFbGVtZW50YHMgd2hldGhlciBhdCBsZWFzdCBvbmUgb2YgdGhlbSBpcyBmb2N1c2VkLgogKgogKiBVc2VkIGJ5IHRoZSB7QGxpbmsgbW9kdWxlOmNvcmUvZWRpdG9yL2VkaXRvcn5FZGl0b3J9IGluIG9yZGVyIHRvIHRyYWNrIHdoZXRoZXIgdGhlIGZvY3VzIGlzIHN0aWxsIHdpdGhpbiB0aGUgYXBwbGljYXRpb24sCiAqIG9yIHdlcmUgdXNlZCBvdXRzaWRlIG9mIGl0cyBVSS4KICoKICogKipOb3RlKiogYGZvY3VzYCBhbmQgYGJsdXJgIGxpc3RlbmVycyB1c2UgZXZlbnQgY2FwdHVyaW5nLCBzbyBpdCBpcyBvbmx5IG5lZWRlZCB0byByZWdpc3RlciB3cmFwcGVyIGBIVE1MRWxlbWVudGAKICogd2hpY2ggY29udGFpbiBvdGhlciBgZm9jdXNhYmxlYCBlbGVtZW50cy4gQnV0IG5vdGUgdGhhdCB0aGlzIHdyYXBwZXIgZWxlbWVudCBoYXMgdG8gYmUgZm9jdXNhYmxlIHRvbwogKiAoaGF2ZSBlLmcuIGB0YWJpbmRleD0iLTEiYCkuCiAqCiAqIENoZWNrIG91dCB0aGUge0BnbGluayBmcmFtZXdvcmsvZ3VpZGVzL2RlZXAtZGl2ZS91aS9mb2N1cy10cmFja2luZyAiRGVlcCBkaXZlIGludG8gZm9jdXMgdHJhY2tpbmciIGd1aWRlfSB0byBsZWFybiBtb3JlLgogKgogKiBAbWl4ZXMgbW9kdWxlOnV0aWxzL2RvbS9lbWl0dGVybWl4aW5+RW1pdHRlck1peGluCiAqIEBtaXhlcyBtb2R1bGU6dXRpbHMvb2JzZXJ2YWJsZW1peGlufk9ic2VydmFibGVNaXhpbgogKi8KCnZhciBGb2N1c1RyYWNrZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEZvY3VzVHJhY2tlcigpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGb2N1c1RyYWNrZXIpOwoKICAgIC8qKgogICAgICogVHJ1ZSB3aGVuIG9uZSBvZiB0aGUgcmVnaXN0ZXJlZCBlbGVtZW50cyBpcyBmb2N1c2VkLgogICAgICoKICAgICAqIEByZWFkb25seQogICAgICogQG9ic2VydmFibGUKICAgICAqIEBtZW1iZXIge0Jvb2xlYW59ICNpc0ZvY3VzZWQKICAgICAqLwogICAgdGhpcy5zZXQoJ2lzRm9jdXNlZCcsIGZhbHNlKTsKICAgIC8qKgogICAgICogVGhlIGN1cnJlbnRseSBmb2N1c2VkIGVsZW1lbnQuCiAgICAgKgogICAgICogV2hpbGUge0BsaW5rICNpc0ZvY3VzZWQgYGlzRm9jdXNlZGB9IHJlbWFpbnMgYHRydWVgLCB0aGUgZm9jdXMgY2FuCiAgICAgKiBtb3ZlIGJldHdlZW4gZGlmZmVyZW50IFVJIGVsZW1lbnRzLiBUaGlzIHByb3BlcnR5IHRyYWNrcyB0aG9zZQogICAgICogZWxlbWVudHMgYW5kIHRlbGxzIHdoaWNoIG9uZSBpcyBjdXJyZW50bHkgZm9jdXNlZC4KICAgICAqCiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEBvYnNlcnZhYmxlCiAgICAgKiBAbWVtYmVyIHtIVE1MRWxlbWVudHxudWxsfSAjZm9jdXNlZEVsZW1lbnQKICAgICAqLwoKICAgIHRoaXMuc2V0KCdmb2N1c2VkRWxlbWVudCcsIG51bGwpOwogICAgLyoqCiAgICAgKiBMaXN0IG9mIHJlZ2lzdGVyZWQgZWxlbWVudHMuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBtZW1iZXIge1NldC48SFRNTEVsZW1lbnQ+fQogICAgICovCgogICAgdGhpcy5fZWxlbWVudHMgPSBuZXcgU2V0KCk7CiAgICAvKioKICAgICAqIEV2ZW50IGxvb3AgdGltZW91dC4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQG1lbWJlciB7TnVtYmVyfQogICAgICovCgogICAgdGhpcy5fbmV4dEV2ZW50TG9vcFRpbWVvdXQgPSBudWxsOwogIH0KICAvKioKICAgKiBTdGFydHMgdHJhY2tpbmcgdGhlIHNwZWNpZmllZCBlbGVtZW50LgogICAqCiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudAogICAqLwoKCiAgX2NyZWF0ZUNsYXNzKEZvY3VzVHJhY2tlciwgW3sKICAgIGtleTogImFkZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkKGVsZW1lbnQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICh0aGlzLl9lbGVtZW50cy5oYXMoZWxlbWVudCkpIHsKICAgICAgICAvKioKICAgICAgICAgKiBUaGlzIGVsZW1lbnQgaXMgYWxyZWFkeSB0cmFja2VkIGJ5IHtAbGluayBtb2R1bGU6dXRpbHMvZm9jdXN0cmFja2VyfkZvY3VzVHJhY2tlcn0uCiAgICAgICAgICoKICAgICAgICAgKiBAZXJyb3IgZm9jdXN0cmFja2VyLWFkZC1lbGVtZW50LWFscmVhZHktZXhpc3QKICAgICAgICAgKi8KICAgICAgICB0aHJvdyBuZXcgQ0tFZGl0b3JFcnJvcignZm9jdXN0cmFja2VyLWFkZC1lbGVtZW50LWFscmVhZHktZXhpc3QnLCB0aGlzKTsKICAgICAgfQoKICAgICAgdGhpcy5saXN0ZW5UbyhlbGVtZW50LCAnZm9jdXMnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLl9mb2N1cyhlbGVtZW50KTsKICAgICAgfSwgewogICAgICAgIHVzZUNhcHR1cmU6IHRydWUKICAgICAgfSk7CiAgICAgIHRoaXMubGlzdGVuVG8oZWxlbWVudCwgJ2JsdXInLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLl9ibHVyKCk7CiAgICAgIH0sIHsKICAgICAgICB1c2VDYXB0dXJlOiB0cnVlCiAgICAgIH0pOwoKICAgICAgdGhpcy5fZWxlbWVudHMuYWRkKGVsZW1lbnQpOwogICAgfQogICAgLyoqCiAgICAgKiBTdG9wcyB0cmFja2luZyB0aGUgc3BlY2lmaWVkIGVsZW1lbnQgYW5kIHN0b3BzIGxpc3RlbmluZyBvbiB0aGlzIGVsZW1lbnQuCiAgICAgKgogICAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudAogICAgICovCgogIH0sIHsKICAgIGtleTogInJlbW92ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlKGVsZW1lbnQpIHsKICAgICAgaWYgKGVsZW1lbnQgPT09IHRoaXMuZm9jdXNlZEVsZW1lbnQpIHsKICAgICAgICB0aGlzLl9ibHVyKGVsZW1lbnQpOwogICAgICB9CgogICAgICBpZiAodGhpcy5fZWxlbWVudHMuaGFzKGVsZW1lbnQpKSB7CiAgICAgICAgdGhpcy5zdG9wTGlzdGVuaW5nKGVsZW1lbnQpOwoKICAgICAgICB0aGlzLl9lbGVtZW50cy5kZWxldGUoZWxlbWVudCk7CiAgICAgIH0KICAgIH0KICAgIC8qKgogICAgICogRGVzdHJveXMgdGhlIGZvY3VzIHRyYWNrZXIgYnk6CiAgICAgKiAtIERpc2FibGluZyBhbGwgZXZlbnQgbGlzdGVuZXJzIGF0dGFjaGVkIHRvIHRyYWNrZWQgZWxlbWVudHMuCiAgICAgKiAtIFJlbW92aW5nIGFsbCB0cmFja2VkIGVsZW1lbnRzIHRoYXQgd2VyZSBwcmV2aW91c2x5IGFkZGVkLgogICAgICovCgogIH0sIHsKICAgIGtleTogImRlc3Ryb3kiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRlc3Ryb3koKSB7CiAgICAgIHRoaXMuc3RvcExpc3RlbmluZygpOwogICAgfQogICAgLyoqCiAgICAgKiBTdG9yZXMgY3VycmVudGx5IGZvY3VzZWQgZWxlbWVudCBhbmQgc2V0IHsjaXNGb2N1c2VkfSBhcyBgdHJ1ZWAuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnQgRWxlbWVudCB3aGljaCBoYXMgYmVlbiBmb2N1c2VkLgogICAgICovCgogIH0sIHsKICAgIGtleTogIl9mb2N1cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2ZvY3VzKGVsZW1lbnQpIHsKICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX25leHRFdmVudExvb3BUaW1lb3V0KTsKICAgICAgdGhpcy5mb2N1c2VkRWxlbWVudCA9IGVsZW1lbnQ7CiAgICAgIHRoaXMuaXNGb2N1c2VkID0gdHJ1ZTsKICAgIH0KICAgIC8qKgogICAgICogQ2xlYXJzIGN1cnJlbnRseSBmb2N1c2VkIGVsZW1lbnQgYW5kIHNldCB7QGxpbmsgI2lzRm9jdXNlZH0gYXMgYGZhbHNlYC4KICAgICAqIFRoaXMgbWV0aG9kIHVzZXMgYHNldFRpbWVvdXRgIHRvIGNoYW5nZSBvcmRlciBvZiBmaXJlcyBgYmx1cmAgYW5kIGBmb2N1c2AgZXZlbnRzLgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKiBAZmlyZXMgYmx1cgogICAgICovCgogIH0sIHsKICAgIGtleTogIl9ibHVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfYmx1cigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBjbGVhclRpbWVvdXQodGhpcy5fbmV4dEV2ZW50TG9vcFRpbWVvdXQpOwogICAgICB0aGlzLl9uZXh0RXZlbnRMb29wVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi5mb2N1c2VkRWxlbWVudCA9IG51bGw7CiAgICAgICAgX3RoaXMyLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICB9LCAwKTsKICAgIH0KICAgIC8qKgogICAgICogQGV2ZW50IGZvY3VzCiAgICAgKi8KCiAgICAvKioKICAgICAqIEBldmVudCBibHVyCiAgICAgKi8KCiAgfV0pOwoKICByZXR1cm4gRm9jdXNUcmFja2VyOwp9KCk7CgpleHBvcnQgeyBGb2N1c1RyYWNrZXIgYXMgZGVmYXVsdCB9OwptaXgoRm9jdXNUcmFja2VyLCBEb21FbWl0dGVyTWl4aW4pOwptaXgoRm9jdXNUcmFja2VyLCBPYnNlcnZhYmxlTWl4aW4pOw=="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/focustracker.js"],"names":["DomEmitterMixin","ObservableMixin","CKEditorError","mix","FocusTracker","set","_elements","Set","_nextEventLoopTimeout","element","has","listenTo","_focus","useCapture","_blur","add","focusedElement","stopListening","delete","clearTimeout","isFocused","setTimeout"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAEA,OAAOA,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,Y;AACpB,0BAAc;AAAA;;AACb;AACF;AACA;AACA;AACA;AACA;AACA;AACE,SAAKC,GAAL,CAAU,WAAV,EAAuB,KAAvB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,SAAKA,GAAL,CAAU,gBAAV,EAA4B,IAA5B;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKC,SAAL,GAAiB,IAAIC,GAAJ,EAAjB;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKC,qBAAL,GAA6B,IAA7B;AACA;AAED;AACD;AACA;AACA;AACA;;;;;WACC,aAAKC,OAAL,EAAe;AAAA;;AACd,UAAK,KAAKH,SAAL,CAAeI,GAAf,CAAoBD,OAApB,CAAL,EAAqC;AACpC;AACH;AACA;AACA;AACA;AACG,cAAM,IAAIP,aAAJ,CAAmB,wCAAnB,EAA6D,IAA7D,CAAN;AACA;;AAED,WAAKS,QAAL,CAAeF,OAAf,EAAwB,OAAxB,EAAiC;AAAA,eAAM,KAAI,CAACG,MAAL,CAAaH,OAAb,CAAN;AAAA,OAAjC,EAA+D;AAAEI,QAAAA,UAAU,EAAE;AAAd,OAA/D;AACA,WAAKF,QAAL,CAAeF,OAAf,EAAwB,MAAxB,EAAgC;AAAA,eAAM,KAAI,CAACK,KAAL,EAAN;AAAA,OAAhC,EAAoD;AAAED,QAAAA,UAAU,EAAE;AAAd,OAApD;;AACA,WAAKP,SAAL,CAAeS,GAAf,CAAoBN,OAApB;AACA;AAED;AACD;AACA;AACA;AACA;;;;WACC,gBAAQA,OAAR,EAAkB;AACjB,UAAKA,OAAO,KAAK,KAAKO,cAAtB,EAAuC;AACtC,aAAKF,KAAL,CAAYL,OAAZ;AACA;;AAED,UAAK,KAAKH,SAAL,CAAeI,GAAf,CAAoBD,OAApB,CAAL,EAAqC;AACpC,aAAKQ,aAAL,CAAoBR,OAApB;;AACA,aAAKH,SAAL,CAAeY,MAAf,CAAuBT,OAAvB;AACA;AACD;AAED;AACD;AACA;AACA;AACA;;;;WACC,mBAAU;AACT,WAAKQ,aAAL;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;;WACC,gBAAQR,OAAR,EAAkB;AACjBU,MAAAA,YAAY,CAAE,KAAKX,qBAAP,CAAZ;AAEA,WAAKQ,cAAL,GAAsBP,OAAtB;AACA,WAAKW,SAAL,GAAiB,IAAjB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;WACC,iBAAQ;AAAA;;AACPD,MAAAA,YAAY,CAAE,KAAKX,qBAAP,CAAZ;AAEA,WAAKA,qBAAL,GAA6Ba,UAAU,CAAE,YAAM;AAC9C,QAAA,MAAI,CAACL,cAAL,GAAsB,IAAtB;AACA,QAAA,MAAI,CAACI,SAAL,GAAiB,KAAjB;AACA,OAHsC,EAGpC,CAHoC,CAAvC;AAIA;AAED;AACD;AACA;;AAEC;AACD;AACA;;;;;;;SAzHqBhB,Y;AA4HrBD,GAAG,CAAEC,YAAF,EAAgBJ,eAAhB,CAAH;AACAG,GAAG,CAAEC,YAAF,EAAgBH,eAAhB,CAAH","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global setTimeout, clearTimeout */\n\n/**\n * @module utils/focustracker\n */\n\nimport DomEmitterMixin from './dom/emittermixin';\nimport ObservableMixin from './observablemixin';\nimport CKEditorError from './ckeditorerror';\nimport mix from './mix';\n\n/**\n * Allows observing a group of `HTMLElement`s whether at least one of them is focused.\n *\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\n * or were used outside of its UI.\n *\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `HTMLElement`\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\n * (have e.g. `tabindex=\"-1\"`).\n *\n * Check out the {@glink framework/guides/deep-dive/ui/focus-tracking \"Deep dive into focus tracking\" guide} to learn more.\n *\n * @mixes module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class FocusTracker {\n\tconstructor() {\n\t\t/**\n\t\t * True when one of the registered elements is focused.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * The currently focused element.\n\t\t *\n\t\t * While {@link #isFocused `isFocused`} remains `true`, the focus can\n\t\t * move between different UI elements. This property tracks those\n\t\t * elements and tells which one is currently focused.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {HTMLElement|null} #focusedElement\n\t\t */\n\t\tthis.set( 'focusedElement', null );\n\n\t\t/**\n\t\t * List of registered elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<HTMLElement>}\n\t\t */\n\t\tthis._elements = new Set();\n\n\t\t/**\n\t\t * Event loop timeout.\n\t\t *\n\t\t * @private\n\t\t * @member {Number}\n\t\t */\n\t\tthis._nextEventLoopTimeout = null;\n\t}\n\n\t/**\n\t * Starts tracking the specified element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tadd( element ) {\n\t\tif ( this._elements.has( element ) ) {\n\t\t\t/**\n\t\t\t * This element is already tracked by {@link module:utils/focustracker~FocusTracker}.\n\t\t\t *\n\t\t\t * @error focustracker-add-element-already-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'focustracker-add-element-already-exist', this );\n\t\t}\n\n\t\tthis.listenTo( element, 'focus', () => this._focus( element ), { useCapture: true } );\n\t\tthis.listenTo( element, 'blur', () => this._blur(), { useCapture: true } );\n\t\tthis._elements.add( element );\n\t}\n\n\t/**\n\t * Stops tracking the specified element and stops listening on this element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tremove( element ) {\n\t\tif ( element === this.focusedElement ) {\n\t\t\tthis._blur( element );\n\t\t}\n\n\t\tif ( this._elements.has( element ) ) {\n\t\t\tthis.stopListening( element );\n\t\t\tthis._elements.delete( element );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the focus tracker by:\n\t * - Disabling all event listeners attached to tracked elements.\n\t * - Removing all tracked elements that were previously added.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Stores currently focused element and set {#isFocused} as `true`.\n\t *\n\t * @private\n\t * @param {HTMLElement} element Element which has been focused.\n\t */\n\t_focus( element ) {\n\t\tclearTimeout( this._nextEventLoopTimeout );\n\n\t\tthis.focusedElement = element;\n\t\tthis.isFocused = true;\n\t}\n\n\t/**\n\t * Clears currently focused element and set {@link #isFocused} as `false`.\n\t * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\n\t *\n\t * @private\n\t * @fires blur\n\t */\n\t_blur() {\n\t\tclearTimeout( this._nextEventLoopTimeout );\n\n\t\tthis._nextEventLoopTimeout = setTimeout( () => {\n\t\t\tthis.focusedElement = null;\n\t\t\tthis.isFocused = false;\n\t\t}, 0 );\n\t}\n\n\t/**\n\t * @event focus\n\t */\n\n\t/**\n\t * @event blur\n\t */\n}\n\nmix( FocusTracker, DomEmitterMixin );\nmix( FocusTracker, ObservableMixin );\n"]}]}