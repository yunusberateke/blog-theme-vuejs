{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDIxLCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGNvcmUvZWRpdG9yL3V0aWxzL2RhdGFhcGltaXhpbgogKi8KCi8qKgogKiBJbXBsZW1lbnRhdGlvbiBvZiB0aGUge0BsaW5rIG1vZHVsZTpjb3JlL2VkaXRvci91dGlscy9kYXRhYXBpbWl4aW5+RGF0YUFwaX0uCiAqCiAqIEBtaXhpbiBEYXRhQXBpTWl4aW4KICogQGltcGxlbWVudHMgbW9kdWxlOmNvcmUvZWRpdG9yL3V0aWxzL2RhdGFhcGltaXhpbn5EYXRhQXBpCiAqLwp2YXIgRGF0YUFwaU1peGluID0gewogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgc2V0RGF0YTogZnVuY3Rpb24gc2V0RGF0YShkYXRhKSB7CiAgICB0aGlzLmRhdGEuc2V0KGRhdGEpOwogIH0sCgogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YShvcHRpb25zKSB7CiAgICByZXR1cm4gdGhpcy5kYXRhLmdldChvcHRpb25zKTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IERhdGFBcGlNaXhpbjsKLyoqCiAqIEludGVyZmFjZSBkZWZpbmluZyBlZGl0b3IgbWV0aG9kcyBmb3Igc2V0dGluZyBhbmQgZ2V0dGluZyBkYXRhIHRvIGFuZCBmcm9tIHRoZSBlZGl0b3IncyBtYWluIHJvb3QgZWxlbWVudAogKiB1c2luZyB0aGUge0BsaW5rIG1vZHVsZTpjb3JlL2VkaXRvci9lZGl0b3J+RWRpdG9yI2RhdGEgZGF0YSBwaXBlbGluZX0uCiAqCiAqIFRoaXMgaW50ZXJmYWNlIGlzIG5vdCBhIHBhcnQgb2YgdGhlIHtAbGluayBtb2R1bGU6Y29yZS9lZGl0b3IvZWRpdG9yfkVkaXRvcn0gY2xhc3MgYmVjYXVzZSBvbmUgbWF5IHdhbnQgdG8gaW1wbGVtZW50CiAqIGFuIGVkaXRvciB3aXRoIG11bHRpcGxlIHJvb3QgZWxlbWVudHMsIGluIHdoaWNoIGNhc2UgdGhlIG1ldGhvZHMgZm9yIHNldHRpbmcgYW5kIGdldHRpbmcgZGF0YSB3aWxsIG5lZWQgdG8gYmUgaW1wbGVtZW50ZWQKICogZGlmZmVyZW50bHkuCiAqCiAqIEBpbnRlcmZhY2UgRGF0YUFwaQogKi8KCi8qKgogKiBTZXRzIHRoZSBkYXRhIGluIHRoZSBlZGl0b3IuCiAqCiAqCQllZGl0b3Iuc2V0RGF0YSggJzxwPlRoaXMgaXMgZWRpdG9yITwvcD4nICk7CiAqCiAqIEJ5IGRlZmF1bHQgdGhlIGVkaXRvciBhY2NlcHRzIEhUTUwuIFRoaXMgY2FuIGJlIGNvbnRyb2xsZWQgYnkgaW5qZWN0aW5nIGEgZGlmZmVyZW50IGRhdGEgcHJvY2Vzc29yLgogKiBTZWUgdGhlIHtAZ2xpbmsgZmVhdHVyZXMvbWFya2Rvd24gTWFya2Rvd24gb3V0cHV0fSBndWlkZSBmb3IgbW9yZSBkZXRhaWxzLgogKgogKiBOb3RlOiBOb3Qgb25seSBpcyB0aGUgZm9ybWF0IG9mIHRoZSBkYXRhIGNvbmZpZ3VyYWJsZSwgYnV0IHRoZSB0eXBlIG9mIHRoZSBgc2V0RGF0YSgpYCdzIHBhcmFtZXRlciBkb2VzIG5vdAogKiBoYXZlIHRvIGJlIGEgc3RyaW5nIGVpdGhlci4gWW91IGNhbiBlLmcuIGFjY2VwdCBhbiBvYmplY3Qgb3IgYSBET00gYERvY3VtZW50RnJhZ21lbnRgIGlmIHlvdSBjb25zaWRlciB0aGlzCiAqIHRoZSByaWdodCBmb3JtYXQgZm9yIHlvdS4KICoKICogQG1ldGhvZCAjc2V0RGF0YQogKiBAcGFyYW0ge1N0cmluZ30gZGF0YSBJbnB1dCBkYXRhLgogKi8KCi8qKgogKiBHZXRzIHRoZSBkYXRhIGZyb20gdGhlIGVkaXRvci4KICoKICoJCWVkaXRvci5nZXREYXRhKCk7IC8vIC0+ICc8cD5UaGlzIGlzIGVkaXRvciE8L3A+JwogKgogKiBCeSBkZWZhdWx0IHRoZSBlZGl0b3Igb3V0cHV0cyBIVE1MLiBUaGlzIGNhbiBiZSBjb250cm9sbGVkIGJ5IGluamVjdGluZyBhIGRpZmZlcmVudCBkYXRhIHByb2Nlc3Nvci4KICogU2VlIHRoZSB7QGdsaW5rIGZlYXR1cmVzL21hcmtkb3duIE1hcmtkb3duIG91dHB1dH0gZ3VpZGUgZm9yIG1vcmUgZGV0YWlscy4KICoKICogTm90ZTogTm90IG9ubHkgaXMgdGhlIGZvcm1hdCBvZiB0aGUgZGF0YSBjb25maWd1cmFibGUsIGJ1dCB0aGUgdHlwZSBvZiB0aGUgYGdldERhdGEoKWAncyByZXR1cm4gdmFsdWUgZG9lcyBub3QKICogaGF2ZSB0byBiZSBhIHN0cmluZyBlaXRoZXIuIFlvdSBjYW4gZS5nLiByZXR1cm4gYW4gb2JqZWN0IG9yIGEgRE9NIGBEb2N1bWVudEZyYWdtZW50YCBpZiB5b3UgY29uc2lkZXIgdGhpcwogKiB0aGUgcmlnaHQgZm9ybWF0IGZvciB5b3UuCiAqCiAqIEBtZXRob2QgI2dldERhdGEKICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSBBZGRpdGlvbmFsIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSByZXRyaWV2ZWQgZGF0YS4KICogRWRpdG9yIGZlYXR1cmVzIG1heSBpbnRyb2R1Y2UgbW9yZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgdGhhdCBjYW4gYmUgc2V0IHRocm91Z2ggdGhpcyBwYXJhbWV0ZXIuCiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5yb290TmFtZT0nbWFpbiddIFJvb3QgbmFtZS4KICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnRyaW09J2VtcHR5J10gV2hldGhlciByZXR1cm5lZCBkYXRhIHNob3VsZCBiZSB0cmltbWVkLiBUaGlzIG9wdGlvbiBpcyBzZXQgdG8gYCdlbXB0eSdgIGJ5IGRlZmF1bHQsCiAqIHdoaWNoIG1lYW5zIHRoYXQgd2hlbmV2ZXIgZWRpdG9yIGNvbnRlbnQgaXMgY29uc2lkZXJlZCBlbXB0eSwgYW4gZW1wdHkgc3RyaW5nIGlzIHJldHVybmVkLiBUbyB0dXJuIG9mZiB0cmltbWluZwogKiB1c2UgYCdub25lJ2AuIEluIHN1Y2ggY2FzZXMgZXhhY3QgY29udGVudCB3aWxsIGJlIHJldHVybmVkIChmb3IgZXhhbXBsZSBgJzxwPiZuYnNwOzwvcD4nYCBmb3IgYW4gZW1wdHkgZWRpdG9yKS4KICogQHJldHVybnMge1N0cmluZ30gT3V0cHV0IGRhdGEuCiAqLw=="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin.js"],"names":["DataApiMixin","setData","data","set","getData","options","get"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,YAAY,GAAG;AACpB;AACD;AACA;AACCC,EAAAA,OAJoB,mBAIXC,IAJW,EAIJ;AACf,SAAKA,IAAL,CAAUC,GAAV,CAAeD,IAAf;AACA,GANmB;;AAQpB;AACD;AACA;AACCE,EAAAA,OAXoB,mBAWXC,OAXW,EAWD;AAClB,WAAO,KAAKH,IAAL,CAAUI,GAAV,CAAeD,OAAf,CAAP;AACA;AAbmB,CAArB;AAgBA,eAAeL,YAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/utils/dataapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/dataapimixin~DataApi}.\n *\n * @mixin DataApiMixin\n * @implements module:core/editor/utils/dataapimixin~DataApi\n */\nconst DataApiMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\tsetData( data ) {\n\t\tthis.data.set( data );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetData( options ) {\n\t\treturn this.data.get( options );\n\t}\n};\n\nexport default DataApiMixin;\n\n/**\n * Interface defining editor methods for setting and getting data to and from the editor's main root element\n * using the {@link module:core/editor/editor~Editor#data data pipeline}.\n *\n * This interface is not a part of the {@link module:core/editor/editor~Editor} class because one may want to implement\n * an editor with multiple root elements, in which case the methods for setting and getting data will need to be implemented\n * differently.\n *\n * @interface DataApi\n */\n\n/**\n * Sets the data in the editor.\n *\n *\t\teditor.setData( '<p>This is editor!</p>' );\n *\n * By default the editor accepts HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `setData()`'s parameter does not\n * have to be a string either. You can e.g. accept an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #setData\n * @param {String} data Input data.\n */\n\n/**\n * Gets the data from the editor.\n *\n *\t\teditor.getData(); // -> '<p>This is editor!</p>'\n *\n * By default the editor outputs HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `getData()`'s return value does not\n * have to be a string either. You can e.g. return an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #getData\n * @param {Object} [options] Additional configuration for the retrieved data.\n * Editor features may introduce more configuration options that can be set through this parameter.\n * @param {String} [options.rootName='main'] Root name.\n * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `'empty'` by default,\n * which means that whenever editor content is considered empty, an empty string is returned. To turn off trimming\n * use `'none'`. In such cases exact content will be returned (for example `'<p>&nbsp;</p>'` for an empty editor).\n * @returns {String} Output data.\n */\n"]}]}