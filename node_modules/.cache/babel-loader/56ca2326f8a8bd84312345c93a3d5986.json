{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/input.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/input.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKCi8qKgogKiBAbGljZW5zZSBDb3B5cmlnaHQgKGMpIDIwMDMtMjAyMSwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICogRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cHM6Ly9ja2VkaXRvci5jb20vbGVnYWwvY2tlZGl0b3Itb3NzLWxpY2Vuc2UKICovCgovKioKICogQG1vZHVsZSB0eXBpbmcvaW5wdXQKICovCmltcG9ydCBQbHVnaW4gZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS1jb3JlL3NyYy9wbHVnaW4nOwppbXBvcnQgSW5wdXRDb21tYW5kIGZyb20gJy4vaW5wdXRjb21tYW5kJzsKaW1wb3J0IGluamVjdFVuc2FmZUtleXN0cm9rZXNIYW5kbGluZyBmcm9tICcuL3V0aWxzL2luamVjdHVuc2FmZWtleXN0cm9rZXNoYW5kbGluZyc7CmltcG9ydCBpbmplY3RUeXBpbmdNdXRhdGlvbnNIYW5kbGluZyBmcm9tICcuL3V0aWxzL2luamVjdHR5cGluZ211dGF0aW9uc2hhbmRsaW5nJzsKLyoqCiAqIEhhbmRsZXMgdGV4dCBpbnB1dCBjb21pbmcgZnJvbSB0aGUga2V5Ym9hcmQgb3Igb3RoZXIgaW5wdXQgbWV0aG9kcy4KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvcGx1Z2luflBsdWdpbgogKi8KCnZhciBJbnB1dCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1BsdWdpbikgewogIF9pbmhlcml0cyhJbnB1dCwgX1BsdWdpbik7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoSW5wdXQpOwoKICBmdW5jdGlvbiBJbnB1dCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBJbnB1dCk7CgogICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKElucHV0LCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZToKICAgIC8qKgogICAgICogQGluaGVyaXREb2MKICAgICAqLwogICAgZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yOyAvLyBUT0RPIFRoZSBhYm92ZSBkZWZhdWx0IGNvbmZpZ3VyYXRpb24gdmFsdWUgc2hvdWxkIGJlIGRlZmluZWQgdXNpbmcgZWRpdG9yLmNvbmZpZy5kZWZpbmUoKSBvbmNlIGl0J3MgZml4ZWQuCgogICAgICB2YXIgaW5wdXRDb21tYW5kID0gbmV3IElucHV0Q29tbWFuZChlZGl0b3IsIGVkaXRvci5jb25maWcuZ2V0KCd0eXBpbmcudW5kb1N0ZXAnKSB8fCAyMCk7CiAgICAgIGVkaXRvci5jb21tYW5kcy5hZGQoJ2lucHV0JywgaW5wdXRDb21tYW5kKTsKICAgICAgaW5qZWN0VW5zYWZlS2V5c3Ryb2tlc0hhbmRsaW5nKGVkaXRvcik7CiAgICAgIGluamVjdFR5cGluZ011dGF0aW9uc0hhbmRsaW5nKGVkaXRvcik7CiAgICB9CiAgICAvKioKICAgICAqIENoZWNrcyBiYXRjaCBpZiBpdCBpcyBhIHJlc3VsdCBvZiB1c2VyIGlucHV0IC0gZS5nLiB0eXBpbmcuCiAgICAgKgogICAgICoJCWNvbnN0IGlucHV0ID0gZWRpdG9yLnBsdWdpbnMuZ2V0KCAnSW5wdXQnICk7CiAgICAgKgogICAgICoJCWVkaXRvci5tb2RlbC5kb2N1bWVudC5vbiggJ2NoYW5nZTpkYXRhJywgKCBldnQsIGJhdGNoICkgPT4gewogICAgICoJCQlpZiAoIGlucHV0LmlzSW5wdXQoIGJhdGNoICkgKSB7CiAgICAgKgkJCQljb25zb2xlLmxvZyggJ1RoZSB1c2VyIHR5cGVkIHNvbWV0aGluZy4uLicgKTsKICAgICAqCQkJfQogICAgICoJCX0gKTsKICAgICAqCiAgICAgKiAqKk5vdGU6KiogVGhpcyBtZXRob2QgY2hlY2tzIGlmIHRoZSBiYXRjaCB3YXMgY3JlYXRlZCB1c2luZyB7QGxpbmsgbW9kdWxlOnR5cGluZy9pbnB1dGNvbW1hbmR+SW5wdXRDb21tYW5kICdpbnB1dCd9CiAgICAgKiBjb21tYW5kIGFzIHR5cGluZyBjaGFuZ2VzIGNvbWluZyBmcm9tIHVzZXIgaW5wdXQgYXJlIGluc2VydGVkIHRvIHRoZSBkb2N1bWVudCB1c2luZyB0aGF0IGNvbW1hbmQuCiAgICAgKgogICAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL2JhdGNofkJhdGNofSBiYXRjaCBBIGJhdGNoIHRvIGNoZWNrLgogICAgICogQHJldHVybnMge0Jvb2xlYW59CiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiaXNJbnB1dCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNJbnB1dChiYXRjaCkgewogICAgICB2YXIgaW5wdXRDb21tYW5kID0gdGhpcy5lZGl0b3IuY29tbWFuZHMuZ2V0KCdpbnB1dCcpOwogICAgICByZXR1cm4gaW5wdXRDb21tYW5kLl9iYXRjaGVzLmhhcyhiYXRjaCk7CiAgICB9CiAgfV0sIFt7CiAgICBrZXk6ICJwbHVnaW5OYW1lIiwKICAgIGdldDoKICAgIC8qKgogICAgICogQGluaGVyaXREb2MKICAgICAqLwogICAgZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gJ0lucHV0JzsKICAgIH0KICB9XSk7CgogIHJldHVybiBJbnB1dDsKfShQbHVnaW4pOwoKZXhwb3J0IHsgSW5wdXQgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-typing/src/input.js"],"names":["Plugin","InputCommand","injectUnsafeKeystrokesHandling","injectTypingMutationsHandling","Input","editor","inputCommand","config","get","commands","add","batch","_batches","has"],"mappings":";;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,8BAAP,MAA2C,wCAA3C;AACA,OAAOC,6BAAP,MAA0C,uCAA1C;AAEA;AACA;AACA;AACA;AACA;;IACqBC,K;;;;;;;;;;;;;;AAQpB;AACD;AACA;AACC,oBAAO;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB,CADM,CAGN;;AACA,UAAMC,YAAY,GAAG,IAAIL,YAAJ,CAAkBI,MAAlB,EAA0BA,MAAM,CAACE,MAAP,CAAcC,GAAd,CAAmB,iBAAnB,KAA0C,EAApE,CAArB;AAEAH,MAAAA,MAAM,CAACI,QAAP,CAAgBC,GAAhB,CAAqB,OAArB,EAA8BJ,YAA9B;AAEAJ,MAAAA,8BAA8B,CAAEG,MAAF,CAA9B;AACAF,MAAAA,6BAA6B,CAAEE,MAAF,CAA7B;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,iBAASM,KAAT,EAAiB;AAChB,UAAML,YAAY,GAAG,KAAKD,MAAL,CAAYI,QAAZ,CAAqBD,GAArB,CAA0B,OAA1B,CAArB;AAEA,aAAOF,YAAY,CAACM,QAAb,CAAsBC,GAAtB,CAA2BF,KAA3B,CAAP;AACA;;;;AA3CD;AACD;AACA;AACC,mBAAwB;AACvB,aAAO,OAAP;AACA;;;;EANiCX,M;;SAAdI,K","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/input\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport InputCommand from './inputcommand';\n\nimport injectUnsafeKeystrokesHandling from './utils/injectunsafekeystrokeshandling';\nimport injectTypingMutationsHandling from './utils/injecttypingmutationshandling';\n\n/**\n * Handles text input coming from the keyboard or other input methods.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Input extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Input';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\n\t\tconst inputCommand = new InputCommand( editor, editor.config.get( 'typing.undoStep' ) || 20 );\n\n\t\teditor.commands.add( 'input', inputCommand );\n\n\t\tinjectUnsafeKeystrokesHandling( editor );\n\t\tinjectTypingMutationsHandling( editor );\n\t}\n\n\t/**\n\t * Checks batch if it is a result of user input - e.g. typing.\n\t *\n\t *\t\tconst input = editor.plugins.get( 'Input' );\n\t *\n\t *\t\teditor.model.document.on( 'change:data', ( evt, batch ) => {\n\t *\t\t\tif ( input.isInput( batch ) ) {\n\t *\t\t\t\tconsole.log( 'The user typed something...' );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** This method checks if the batch was created using {@link module:typing/inputcommand~InputCommand 'input'}\n\t * command as typing changes coming from user input are inserted to the document using that command.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch A batch to check.\n\t * @returns {Boolean}\n\t */\n\tisInput( batch ) {\n\t\tconst inputCommand = this.editor.commands.get( 'input' );\n\n\t\treturn inputCommand._batches.has( batch );\n\t}\n}\n"]}]}