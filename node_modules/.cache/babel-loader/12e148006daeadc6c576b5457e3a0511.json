{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/dom/rect.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/dom/rect.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-utils/src/dom/rect.js"],"names":["isRange","isWindow","getBorderWidths","isText","isElement","rectProperties","Rect","source","isSourceRange","Object","defineProperty","value","_source","writable","enumerable","rangeRects","getDomRangeRects","copyRectProperties","getBoundingRect","getBoundingClientRect","innerWidth","innerHeight","top","right","bottom","left","width","height","x","y","anotherRect","rect","Math","max","min","getIntersection","getArea","visibleRect","clone","isBody","parent","parentNode","commonAncestorContainer","parentRect","intersectionRect","prop","intersectRect","isEqual","scrollBarWidth","scrollBarHeight","direction","document","documentElement","clientWidth","clientHeight","getComputedStyle","borderWidths","offsetWidth","offsetHeight","ownerDocument","defaultView","range","rects","clientRects","Array","from","getClientRects","length","push","startContainer","boundingRectData","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","rectangleCount","p","elementOrRange","body"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/rect\n */\n\nimport isRange from './isrange';\nimport isWindow from './iswindow';\nimport getBorderWidths from './getborderwidths';\nimport isText from './istext';\nimport { isElement } from 'lodash-es';\n\nconst rectProperties = [ 'top', 'right', 'bottom', 'left', 'width', 'height' ];\n\n/**\n * A helper class representing a `ClientRect` object, e.g. value returned by\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\n * to manipulate the rect and compare it against other rect instances.\n */\nexport default class Rect {\n\t/**\n\t * Creates an instance of rect.\n\t *\n\t *\t\t// Rect of an HTMLElement.\n\t *\t\tconst rectA = new Rect( document.body );\n\t *\n\t *\t\t// Rect of a DOM Range.\n\t *\t\tconst rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\n\t *\n\t *\t\t// Rect of a window (web browser viewport).\n\t *\t\tconst rectC = new Rect( window );\n\t *\n\t *\t\t// Rect out of an object.\n\t *\t\tconst rectD = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\n\t *\n\t *\t\t// Rect out of another Rect instance.\n\t *\t\tconst rectE = new Rect( rectD );\n\t *\n\t *\t\t// Rect out of a ClientRect.\n\t *\t\tconst rectF = new Rect( document.body.getClientRects().item( 0 ) );\n\t *\n\t * **Note**: By default a rect of an HTML element includes its CSS borders and scrollbars (if any)\n\t * ant the rect of a `window` includes scrollbars too. Use {@link #excludeScrollbarsAndBorders}\n\t * to get the inner part of the rect.\n\t *\n\t * @param {HTMLElement|Range|Window|ClientRect|module:utils/dom/rect~Rect|Object} source A source object to create the rect.\n\t */\n\tconstructor( source ) {\n\t\tconst isSourceRange = isRange( source );\n\n\t\t/**\n\t\t * The object this rect is for.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} #_source\n\t\t */\n\t\tObject.defineProperty( this, '_source', {\n\t\t\t// If the source is a Rect instance, copy it's #_source.\n\t\t\tvalue: source._source || source,\n\t\t\twritable: true,\n\t\t\tenumerable: false\n\t\t} );\n\n\t\tif ( isElement( source ) || isSourceRange ) {\n\t\t\t// The `Rect` class depends on `getBoundingClientRect` and `getClientRects` DOM methods. If the source\n\t\t\t// of a rect in an HTML element or a DOM range but it does not belong to any rendered DOM tree, these methods\n\t\t\t// will fail to obtain the geometry and the rect instance makes little sense to the features using it.\n\t\t\t// To get rid of this warning make sure the source passed to the constructor is a descendant of `window.document.body`.\n\t\t\t// @if CK_DEBUG // const sourceNode = isSourceRange ? source.startContainer : source;\n\t\t\t// @if CK_DEBUG // if ( !sourceNode.ownerDocument || !sourceNode.ownerDocument.body.contains( sourceNode ) ) {\n\t\t\t// @if CK_DEBUG // \tconsole.warn(\n\t\t\t// @if CK_DEBUG // \t\t'rect-source-not-in-dom: The source of this rect does not belong to any rendered DOM tree.',\n\t\t\t// @if CK_DEBUG // \t\t{ source } );\n\t\t\t// @if CK_DEBUG // }\n\n\t\t\tif ( isSourceRange ) {\n\t\t\t\tconst rangeRects = Rect.getDomRangeRects( source );\n\t\t\t\tcopyRectProperties( this, Rect.getBoundingRect( rangeRects ) );\n\t\t\t} else {\n\t\t\t\tcopyRectProperties( this, source.getBoundingClientRect() );\n\t\t\t}\n\t\t} else if ( isWindow( source ) ) {\n\t\t\tconst { innerWidth, innerHeight } = source;\n\n\t\t\tcopyRectProperties( this, {\n\t\t\t\ttop: 0,\n\t\t\t\tright: innerWidth,\n\t\t\t\tbottom: innerHeight,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: innerWidth,\n\t\t\t\theight: innerHeight\n\t\t\t} );\n\t\t} else {\n\t\t\tcopyRectProperties( this, source );\n\t\t}\n\n\t\t/**\n\t\t * The \"top\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #top\n\t\t */\n\n\t\t/**\n\t\t * The \"right\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #right\n\t\t */\n\n\t\t/**\n\t\t * The \"bottom\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #bottom\n\t\t */\n\n\t\t/**\n\t\t * The \"left\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #left\n\t\t */\n\n\t\t/**\n\t\t * The \"width\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #width\n\t\t */\n\n\t\t/**\n\t\t * The \"height\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #height\n\t\t */\n\t}\n\n\t/**\n\t * Returns a clone of the rect.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A cloned rect.\n\t */\n\tclone() {\n\t\treturn new Rect( this );\n\t}\n\n\t/**\n\t * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\n\t *\n\t * @param {Number} x Desired horizontal location.\n\t * @param {Number} y Desired vertical location.\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tmoveTo( x, y ) {\n\t\tthis.top = y;\n\t\tthis.right = x + this.width;\n\t\tthis.bottom = y + this.height;\n\t\tthis.left = x;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves the rect in–place by a dedicated offset.\n\t *\n\t * @param {Number} x A horizontal offset.\n\t * @param {Number} y A vertical offset\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tmoveBy( x, y ) {\n\t\tthis.top += y;\n\t\tthis.right += x;\n\t\tthis.left += x;\n\t\tthis.bottom += y;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a new rect a a result of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {module:utils/dom/rect~Rect}\n\t */\n\tgetIntersection( anotherRect ) {\n\t\tconst rect = {\n\t\t\ttop: Math.max( this.top, anotherRect.top ),\n\t\t\tright: Math.min( this.right, anotherRect.right ),\n\t\t\tbottom: Math.min( this.bottom, anotherRect.bottom ),\n\t\t\tleft: Math.max( this.left, anotherRect.left )\n\t\t};\n\n\t\trect.width = rect.right - rect.left;\n\t\trect.height = rect.bottom - rect.top;\n\n\t\tif ( rect.width < 0 || rect.height < 0 ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn new Rect( rect );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect [description]\n\t * @returns {Number} Area of intersection.\n\t */\n\tgetIntersectionArea( anotherRect ) {\n\t\tconst rect = this.getIntersection( anotherRect );\n\n\t\tif ( rect ) {\n\t\t\treturn rect.getArea();\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of the rect.\n\t *\n\t * @returns {Number}\n\t */\n\tgetArea() {\n\t\treturn this.width * this.height;\n\t}\n\n\t/**\n\t * Returns a new rect, a part of the original rect, which is actually visible to the user,\n\t * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\n\t * other than `\"visible\"`.\n\t *\n\t * If there's no such visible rect, which is when the rect is limited by one or many of\n\t * the ancestors, `null` is returned.\n\t *\n\t * @returns {module:utils/dom/rect~Rect|null} A visible rect instance or `null`, if there's none.\n\t */\n\tgetVisible() {\n\t\tconst source = this._source;\n\t\tlet visibleRect = this.clone();\n\n\t\t// There's no ancestor to crop <body> with the overflow.\n\t\tif ( !isBody( source ) ) {\n\t\t\tlet parent = source.parentNode || source.commonAncestorContainer;\n\n\t\t\t// Check the ancestors all the way up to the <body>.\n\t\t\twhile ( parent && !isBody( parent ) ) {\n\t\t\t\tconst parentRect = new Rect( parent );\n\t\t\t\tconst intersectionRect = visibleRect.getIntersection( parentRect );\n\n\t\t\t\tif ( intersectionRect ) {\n\t\t\t\t\tif ( intersectionRect.getArea() < visibleRect.getArea() ) {\n\t\t\t\t\t\t// Reduce the visible rect to the intersection.\n\t\t\t\t\t\tvisibleRect = intersectionRect;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// There's no intersection, the rect is completely invisible.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn visibleRect;\n\t}\n\n\t/**\n\t * Checks if all property values ({@link #top}, {@link #left}, {@link #right},\n\t * {@link #bottom}, {@link #width} and {@link #height}) are the equal in both rect\n\t * instances.\n\t *\n\t * @param {module:utils/dom/rect~Rect} rect A rect instance to compare with.\n\t * @returns {Boolean} `true` when Rects are equal. `false` otherwise.\n\t */\n\tisEqual( anotherRect ) {\n\t\tfor ( const prop of rectProperties ) {\n\t\t\tif ( this[ prop ] !== anotherRect[ prop ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether a rect fully contains another rect instance.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {Boolean} `true` if contains, `false` otherwise.\n\t */\n\tcontains( anotherRect ) {\n\t\tconst intersectRect = this.getIntersection( anotherRect );\n\n\t\treturn !!( intersectRect && intersectRect.isEqual( anotherRect ) );\n\t}\n\n\t/**\n\t * Excludes scrollbars and CSS borders from the rect.\n\t *\n\t * * Borders are removed when {@link #_source} is an HTML element.\n\t * * Scrollbars are excluded from HTML elements and the `window`.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been updated.\n\t */\n\texcludeScrollbarsAndBorders() {\n\t\tconst source = this._source;\n\t\tlet scrollBarWidth, scrollBarHeight, direction;\n\n\t\tif ( isWindow( source ) ) {\n\t\t\tscrollBarWidth = source.innerWidth - source.document.documentElement.clientWidth;\n\t\t\tscrollBarHeight = source.innerHeight - source.document.documentElement.clientHeight;\n\t\t\tdirection = source.getComputedStyle( source.document.documentElement ).direction;\n\t\t} else {\n\t\t\tconst borderWidths = getBorderWidths( this._source );\n\n\t\t\tscrollBarWidth = source.offsetWidth - source.clientWidth - borderWidths.left - borderWidths.right;\n\t\t\tscrollBarHeight = source.offsetHeight - source.clientHeight - borderWidths.top - borderWidths.bottom;\n\t\t\tdirection = source.ownerDocument.defaultView.getComputedStyle( source ).direction;\n\n\t\t\tthis.left += borderWidths.left;\n\t\t\tthis.top += borderWidths.top;\n\t\t\tthis.right -= borderWidths.right;\n\t\t\tthis.bottom -= borderWidths.bottom;\n\t\t\tthis.width = this.right - this.left;\n\t\t\tthis.height = this.bottom - this.top;\n\t\t}\n\n\t\tthis.width -= scrollBarWidth;\n\n\t\tif ( direction === 'ltr' ) {\n\t\t\tthis.right -= scrollBarWidth;\n\t\t} else {\n\t\t\tthis.left += scrollBarWidth;\n\t\t}\n\n\t\tthis.height -= scrollBarHeight;\n\t\tthis.bottom -= scrollBarHeight;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns an array of rects of the given native DOM Range.\n\t *\n\t * @param {Range} range A native DOM range.\n\t * @returns {Array.<module:utils/dom/rect~Rect>} DOM Range rects.\n\t */\n\tstatic getDomRangeRects( range ) {\n\t\tconst rects = [];\n\t\t// Safari does not iterate over ClientRectList using for...of loop.\n\t\tconst clientRects = Array.from( range.getClientRects() );\n\n\t\tif ( clientRects.length ) {\n\t\t\tfor ( const rect of clientRects ) {\n\t\t\t\trects.push( new Rect( rect ) );\n\t\t\t}\n\t\t}\n\t\t// If there's no client rects for the Range, use parent container's bounding rect\n\t\t// instead and adjust rect's width to simulate the actual geometry of such range.\n\t\t// https://github.com/ckeditor/ckeditor5-utils/issues/153\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/317\n\t\telse {\n\t\t\tlet startContainer = range.startContainer;\n\n\t\t\tif ( isText( startContainer ) ) {\n\t\t\t\tstartContainer = startContainer.parentNode;\n\t\t\t}\n\n\t\t\tconst rect = new Rect( startContainer.getBoundingClientRect() );\n\t\t\trect.right = rect.left;\n\t\t\trect.width = 0;\n\n\t\t\trects.push( rect );\n\t\t}\n\n\t\treturn rects;\n\t}\n\n\t/**\n\t * Returns a bounding rectangle that contains all the given `rects`.\n\t *\n\t * @param {Iterable.<module:utils/dom/rect~Rect>} rects A list of rectangles that should be contained in the result rectangle.\n\t * @returns {module:utils/dom/rect~Rect|null} Bounding rectangle or `null` if no `rects` were given.\n\t */\n\tstatic getBoundingRect( rects ) {\n\t\tconst boundingRectData = {\n\t\t\tleft: Number.POSITIVE_INFINITY,\n\t\t\ttop: Number.POSITIVE_INFINITY,\n\t\t\tright: Number.NEGATIVE_INFINITY,\n\t\t\tbottom: Number.NEGATIVE_INFINITY\n\t\t};\n\t\tlet rectangleCount = 0;\n\n\t\tfor ( const rect of rects ) {\n\t\t\trectangleCount++;\n\n\t\t\tboundingRectData.left = Math.min( boundingRectData.left, rect.left );\n\t\t\tboundingRectData.top = Math.min( boundingRectData.top, rect.top );\n\t\t\tboundingRectData.right = Math.max( boundingRectData.right, rect.right );\n\t\t\tboundingRectData.bottom = Math.max( boundingRectData.bottom, rect.bottom );\n\t\t}\n\n\t\tif ( rectangleCount == 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tboundingRectData.width = boundingRectData.right - boundingRectData.left;\n\t\tboundingRectData.height = boundingRectData.bottom - boundingRectData.top;\n\n\t\treturn new Rect( boundingRectData );\n\t}\n}\n\n// Acquires all the rect properties from the passed source.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} rect\n// @param {ClientRect|module:utils/dom/rect~Rect|Object} source\nfunction copyRectProperties( rect, source ) {\n\tfor ( const p of rectProperties ) {\n\t\trect[ p ] = source[ p ];\n\t}\n}\n\n// Checks if provided object is a <body> HTML element.\n//\n// @private\n// @param {HTMLElement|Range} elementOrRange\n// @returns {Boolean}\nfunction isBody( elementOrRange ) {\n\tif ( !isElement( elementOrRange ) ) {\n\t\treturn false;\n\t}\n\n\treturn elementOrRange === elementOrRange.ownerDocument.body;\n}\n"]}]}