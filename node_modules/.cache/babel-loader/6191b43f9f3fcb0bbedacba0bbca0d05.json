{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/history.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/history.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwoKLyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDIxLCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGVuZ2luZS9tb2RlbC9oaXN0b3J5CiAqLwoKLyoqCiAqIGBIaXN0b3J5YCBrZWVwcyB0aGUgdHJhY2sgb2YgYWxsIHRoZSBvcGVyYXRpb25zIGFwcGxpZWQgdG8gdGhlIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL2RvY3VtZW50fkRvY3VtZW50IGRvY3VtZW50fS4KICovCnZhciBIaXN0b3J5ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAvKioKICAgKiBDcmVhdGVzIGFuIGVtcHR5IEhpc3RvcnkgaW5zdGFuY2UuCiAgICovCiAgZnVuY3Rpb24gSGlzdG9yeSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBIaXN0b3J5KTsKCiAgICAvKioKICAgICAqIE9wZXJhdGlvbnMgYWRkZWQgdG8gdGhlIGhpc3RvcnkuCiAgICAgKgogICAgICogQHByb3RlY3RlZAogICAgICogQG1lbWJlciB7QXJyYXkuPG1vZHVsZTplbmdpbmUvbW9kZWwvb3BlcmF0aW9uL29wZXJhdGlvbn5PcGVyYXRpb24+fSBtb2R1bGU6ZW5naW5lL21vZGVsL2hpc3Rvcnl+SGlzdG9yeSNfb3BlcmF0aW9ucwogICAgICovCiAgICB0aGlzLl9vcGVyYXRpb25zID0gW107CiAgICAvKioKICAgICAqIEhvbGRzIGFuIGluZm9ybWF0aW9uIHdoaWNoIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9uIG9wZXJhdGlvbn0gdW5kb2VzIHdoaWNoCiAgICAgKiB7QGxpbmsgbW9kdWxlOmVuZ2luZS9tb2RlbC9vcGVyYXRpb24vb3BlcmF0aW9ufk9wZXJhdGlvbiBvcGVyYXRpb259LgogICAgICoKICAgICAqIEtleXMgb2YgdGhlIG1hcCBhcmUgInVuZG9pbmcgb3BlcmF0aW9ucyIsIHRoYXQgaXMgb3BlcmF0aW9ucyB0aGF0IHVuZG9uZSBzb21lIG90aGVyIG9wZXJhdGlvbnMuIEZvciBlYWNoIGtleSwgdGhlCiAgICAgKiB2YWx1ZSBpcyBhbiBvcGVyYXRpb24gdGhhdCBoYXMgYmVlbiB1bmRvbmUgYnkgdGhlICJ1bmRvaW5nIG9wZXJhdGlvbiIuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBtZW1iZXIge01hcH0gbW9kdWxlOmVuZ2luZS9tb2RlbC9oaXN0b3J5fkhpc3RvcnkjX3VuZG9QYWlycwogICAgICovCgogICAgdGhpcy5fdW5kb1BhaXJzID0gbmV3IE1hcCgpOwogICAgLyoqCiAgICAgKiBIb2xkcyBhbGwgdW5kb25lIG9wZXJhdGlvbnMuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBtZW1iZXIge1NldC48bW9kdWxlOmVuZ2luZS9tb2RlbC9vcGVyYXRpb24vb3BlcmF0aW9ufk9wZXJhdGlvbj59IG1vZHVsZTplbmdpbmUvbW9kZWwvaGlzdG9yeX5IaXN0b3J5I191bmRvbmVPcGVyYXRpb25zCiAgICAgKi8KCiAgICB0aGlzLl91bmRvbmVPcGVyYXRpb25zID0gbmV3IFNldCgpOwogIH0KICAvKioKICAgKiBBZGRzIGFuIG9wZXJhdGlvbiB0byB0aGUgaGlzdG9yeS4KICAgKgogICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9vcGVyYXRpb24vb3BlcmF0aW9ufk9wZXJhdGlvbn0gb3BlcmF0aW9uIE9wZXJhdGlvbiB0byBhZGQuCiAgICovCgoKICBfY3JlYXRlQ2xhc3MoSGlzdG9yeSwgW3sKICAgIGtleTogImFkZE9wZXJhdGlvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkT3BlcmF0aW9uKG9wZXJhdGlvbikgewogICAgICBpZiAodGhpcy5fb3BlcmF0aW9ucy5pbmNsdWRlcyhvcGVyYXRpb24pKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLl9vcGVyYXRpb25zLnB1c2gob3BlcmF0aW9uKTsKICAgIH0KICAgIC8qKgogICAgICogUmV0dXJucyBvcGVyYXRpb25zIGFkZGVkIHRvIHRoZSBoaXN0b3J5LgogICAgICoKICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbZnJvbT1OdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFldIEJhc2UgdmVyc2lvbiBmcm9tIHdoaWNoIG9wZXJhdGlvbnMgc2hvdWxkIGJlIHJldHVybmVkIChpbmNsdXNpdmUpLgogICAgICogRGVmYXVsdHMgdG8gYE51bWJlci5ORUdBVElWRV9JTkZJTklUWWAsIHdoaWNoIG1lYW5zIHRoYXQgb3BlcmF0aW9ucyBmcm9tIHRoZSBmaXJzdCBvbmUgd2lsbCBiZSByZXR1cm5lZC4KICAgICAqIEBwYXJhbSB7TnVtYmVyfSBbdG89TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZXSBCYXNlIHZlcnNpb24gdXAgdG8gd2hpY2ggb3BlcmF0aW9ucyBzaG91bGQgYmUgcmV0dXJuZWQgKGV4Y2x1c2l2ZSkuCiAgICAgKiBEZWZhdWx0cyB0byBgTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZYCB3aGljaCBtZWFucyB0aGF0IG9wZXJhdGlvbnMgdXAgdG8gdGhlIGxhc3Qgb25lIHdpbGwgYmUgcmV0dXJuZWQuCiAgICAgKiBAcmV0dXJucyB7QXJyYXkuPG1vZHVsZTplbmdpbmUvbW9kZWwvb3BlcmF0aW9uL29wZXJhdGlvbn5PcGVyYXRpb24+fSBPcGVyYXRpb25zIGFkZGVkIHRvIHRoZSBoaXN0b3J5LgogICAgICovCgogIH0sIHsKICAgIGtleTogImdldE9wZXJhdGlvbnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldE9wZXJhdGlvbnMoKSB7CiAgICAgIHZhciBmcm9tID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFk7CiAgICAgIHZhciB0byA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZOwogICAgICB2YXIgb3BlcmF0aW9ucyA9IFtdOwoKICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMuX29wZXJhdGlvbnMpLAogICAgICAgICAgX3N0ZXA7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgb3BlcmF0aW9uID0gX3N0ZXAudmFsdWU7CgogICAgICAgICAgaWYgKG9wZXJhdGlvbi5iYXNlVmVyc2lvbiA+PSBmcm9tICYmIG9wZXJhdGlvbi5iYXNlVmVyc2lvbiA8IHRvKSB7CiAgICAgICAgICAgIG9wZXJhdGlvbnMucHVzaChvcGVyYXRpb24pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CgogICAgICByZXR1cm4gb3BlcmF0aW9uczsKICAgIH0KICAgIC8qKgogICAgICogUmV0dXJucyBvcGVyYXRpb24gZnJvbSB0aGUgaGlzdG9yeSB0aGF0IGJhc2VzIG9uIGdpdmVuIGBiYXNlVmVyc2lvbmAuCiAgICAgKgogICAgICogQHBhcmFtIHtOdW1iZXJ9IGJhc2VWZXJzaW9uIEJhc2UgdmVyc2lvbiBvZiB0aGUgb3BlcmF0aW9uIHRvIGdldC4KICAgICAqIEByZXR1cm5zIHttb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9ufHVuZGVmaW5lZH0gT3BlcmF0aW9uIHdpdGggZ2l2ZW4gYmFzZSB2ZXJzaW9uIG9yIGB1bmRlZmluZWRgIGlmCiAgICAgKiB0aGVyZSBpcyBubyBzdWNoIG9wZXJhdGlvbiBpbiBoaXN0b3J5LgogICAgICovCgogIH0sIHsKICAgIGtleTogImdldE9wZXJhdGlvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0T3BlcmF0aW9uKGJhc2VWZXJzaW9uKSB7CiAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5fb3BlcmF0aW9ucyksCiAgICAgICAgICBfc3RlcDI7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgb3BlcmF0aW9uID0gX3N0ZXAyLnZhbHVlOwoKICAgICAgICAgIGlmIChvcGVyYXRpb24uYmFzZVZlcnNpb24gPT0gYmFzZVZlcnNpb24pIHsKICAgICAgICAgICAgcmV0dXJuIG9wZXJhdGlvbjsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICB9CiAgICB9CiAgICAvKioKICAgICAqIE1hcmtzIGluIGhpc3RvcnkgdGhhdCBvbmUgb3BlcmF0aW9uIGlzIGFuIG9wZXJhdGlvbiB0aGF0IGlzIHVuZG9pbmcgdGhlIG90aGVyIG9wZXJhdGlvbi4gQnkgbWFya2luZyBvcGVyYXRpb24gdGhpcyB3YXksCiAgICAgKiBoaXN0b3J5IGlzIGtlZXBpbmcgbW9yZSBjb250ZXh0IGluZm9ybWF0aW9uIGFib3V0IG9wZXJhdGlvbnMsIHdoaWNoIGhlbHBzIGluIG9wZXJhdGlvbmFsIHRyYW5zZm9ybWF0aW9uLgogICAgICoKICAgICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9vcGVyYXRpb24vb3BlcmF0aW9ufk9wZXJhdGlvbn0gdW5kb25lT3BlcmF0aW9uIE9wZXJhdGlvbiB3aGljaCBpcyB1bmRvbmUgYnkgYHVuZG9pbmdPcGVyYXRpb25gLgogICAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9ufSB1bmRvaW5nT3BlcmF0aW9uIE9wZXJhdGlvbiB3aGljaCB1bmRvZXMgYHVuZG9uZU9wZXJhdGlvbmAuCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAic2V0T3BlcmF0aW9uQXNVbmRvbmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldE9wZXJhdGlvbkFzVW5kb25lKHVuZG9uZU9wZXJhdGlvbiwgdW5kb2luZ09wZXJhdGlvbikgewogICAgICB0aGlzLl91bmRvUGFpcnMuc2V0KHVuZG9pbmdPcGVyYXRpb24sIHVuZG9uZU9wZXJhdGlvbik7CgogICAgICB0aGlzLl91bmRvbmVPcGVyYXRpb25zLmFkZCh1bmRvbmVPcGVyYXRpb24pOwogICAgfQogICAgLyoqCiAgICAgKiBDaGVja3Mgd2hldGhlciBnaXZlbiBgb3BlcmF0aW9uYCBpcyB1bmRvaW5nIGFueSBvdGhlciBvcGVyYXRpb24uCiAgICAgKgogICAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9ufSBvcGVyYXRpb24gT3BlcmF0aW9uIHRvIGNoZWNrLgogICAgICogQHJldHVybnMge0Jvb2xlYW59IGB0cnVlYCBpZiBnaXZlbiBgb3BlcmF0aW9uYCBpcyB1bmRvaW5nIGFueSBvdGhlciBvcGVyYXRpb24sIGBmYWxzZWAgb3RoZXJ3aXNlLgogICAgICovCgogIH0sIHsKICAgIGtleTogImlzVW5kb2luZ09wZXJhdGlvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNVbmRvaW5nT3BlcmF0aW9uKG9wZXJhdGlvbikgewogICAgICByZXR1cm4gdGhpcy5fdW5kb1BhaXJzLmhhcyhvcGVyYXRpb24pOwogICAgfQogICAgLyoqCiAgICAgKiBDaGVja3Mgd2hldGhlciBnaXZlbiBgb3BlcmF0aW9uYCBoYXMgYmVlbiB1bmRvbmUgYnkgYW55IG90aGVyIG9wZXJhdGlvbi4KICAgICAqCiAgICAgKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvb3BlcmF0aW9uL29wZXJhdGlvbn5PcGVyYXRpb259IG9wZXJhdGlvbiBPcGVyYXRpb24gdG8gY2hlY2suCiAgICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gYHRydWVgIGlmIGdpdmVuIGBvcGVyYXRpb25gIGhhcyBiZWVuIHVuZG9uZSBhbnkgb3RoZXIgb3BlcmF0aW9uLCBgZmFsc2VgIG90aGVyd2lzZS4KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJpc1VuZG9uZU9wZXJhdGlvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNVbmRvbmVPcGVyYXRpb24ob3BlcmF0aW9uKSB7CiAgICAgIHJldHVybiB0aGlzLl91bmRvbmVPcGVyYXRpb25zLmhhcyhvcGVyYXRpb24pOwogICAgfQogICAgLyoqCiAgICAgKiBGb3IgZ2l2ZW4gYHVuZG9pbmdPcGVyYXRpb25gLCByZXR1cm5zIHRoZSBvcGVyYXRpb24gd2hpY2ggaGFzIGJlZW4gdW5kb25lIGJ5IGl0LgogICAgICoKICAgICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9vcGVyYXRpb24vb3BlcmF0aW9ufk9wZXJhdGlvbn0gdW5kb2luZ09wZXJhdGlvbgogICAgICogQHJldHVybnMge21vZHVsZTplbmdpbmUvbW9kZWwvb3BlcmF0aW9uL29wZXJhdGlvbn5PcGVyYXRpb258dW5kZWZpbmVkfSBPcGVyYXRpb24gdGhhdCBoYXMgYmVlbiB1bmRvbmUgYnkgZ2l2ZW4KICAgICAqIGB1bmRvaW5nT3BlcmF0aW9uYCBvciBgdW5kZWZpbmVkYCBpZiBnaXZlbiBgdW5kb2luZ09wZXJhdGlvbmAgaXMgbm90IHVuZG9pbmcgYW55IG90aGVyIG9wZXJhdGlvbi4KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJnZXRVbmRvbmVPcGVyYXRpb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFVuZG9uZU9wZXJhdGlvbih1bmRvaW5nT3BlcmF0aW9uKSB7CiAgICAgIHJldHVybiB0aGlzLl91bmRvUGFpcnMuZ2V0KHVuZG9pbmdPcGVyYXRpb24pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEhpc3Rvcnk7Cn0oKTsKCmV4cG9ydCB7IEhpc3RvcnkgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-engine/src/model/history.js"],"names":["History","_operations","_undoPairs","Map","_undoneOperations","Set","operation","includes","push","from","Number","NEGATIVE_INFINITY","to","POSITIVE_INFINITY","operations","baseVersion","undoneOperation","undoingOperation","set","add","has","get"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;IACqBA,O;AACpB;AACD;AACA;AACC,qBAAc;AAAA;;AACb;AACF;AACA;AACA;AACA;AACA;AACE,SAAKC,WAAL,GAAmB,EAAnB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,SAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKC,iBAAL,GAAyB,IAAIC,GAAJ,EAAzB;AACA;AAED;AACD;AACA;AACA;AACA;;;;;WACC,sBAAcC,SAAd,EAA0B;AACzB,UAAK,KAAKL,WAAL,CAAiBM,QAAjB,CAA2BD,SAA3B,CAAL,EAA8C;AAC7C;AACA;;AAED,WAAKL,WAAL,CAAiBO,IAAjB,CAAuBF,SAAvB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACC,yBAAgF;AAAA,UAAjEG,IAAiE,uEAA1DC,MAAM,CAACC,iBAAmD;AAAA,UAAhCC,EAAgC,uEAA3BF,MAAM,CAACG,iBAAoB;AAC/E,UAAMC,UAAU,GAAG,EAAnB;;AAD+E,iDAGtD,KAAKb,WAHiD;AAAA;;AAAA;AAG/E,4DAA4C;AAAA,cAAhCK,SAAgC;;AAC3C,cAAKA,SAAS,CAACS,WAAV,IAAyBN,IAAzB,IAAiCH,SAAS,CAACS,WAAV,GAAwBH,EAA9D,EAAmE;AAClEE,YAAAA,UAAU,CAACN,IAAX,CAAiBF,SAAjB;AACA;AACD;AAP8E;AAAA;AAAA;AAAA;AAAA;;AAS/E,aAAOQ,UAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;WACC,sBAAcC,WAAd,EAA4B;AAAA,kDACF,KAAKd,WADH;AAAA;;AAAA;AAC3B,+DAA4C;AAAA,cAAhCK,SAAgC;;AAC3C,cAAKA,SAAS,CAACS,WAAV,IAAyBA,WAA9B,EAA4C;AAC3C,mBAAOT,SAAP;AACA;AACD;AAL0B;AAAA;AAAA;AAAA;AAAA;AAM3B;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;WACC,8BAAsBU,eAAtB,EAAuCC,gBAAvC,EAA0D;AACzD,WAAKf,UAAL,CAAgBgB,GAAhB,CAAqBD,gBAArB,EAAuCD,eAAvC;;AACA,WAAKZ,iBAAL,CAAuBe,GAAvB,CAA4BH,eAA5B;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;;WACC,4BAAoBV,SAApB,EAAgC;AAC/B,aAAO,KAAKJ,UAAL,CAAgBkB,GAAhB,CAAqBd,SAArB,CAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;;WACC,2BAAmBA,SAAnB,EAA+B;AAC9B,aAAO,KAAKF,iBAAL,CAAuBgB,GAAvB,CAA4Bd,SAA5B,CAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;WACC,4BAAoBW,gBAApB,EAAuC;AACtC,aAAO,KAAKf,UAAL,CAAgBmB,GAAhB,CAAqBJ,gBAArB,CAAP;AACA;;;;;;SA5HmBjB,O","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/history\n */\n\n/**\n * `History` keeps the track of all the operations applied to the {@link module:engine/model/document~Document document}.\n */\nexport default class History {\n\t/**\n\t * Creates an empty History instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Operations added to the history.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_operations\n\t\t */\n\t\tthis._operations = [];\n\n\t\t/**\n\t\t * Holds an information which {@link module:engine/model/operation/operation~Operation operation} undoes which\n\t\t * {@link module:engine/model/operation/operation~Operation operation}.\n\t\t *\n\t\t * Keys of the map are \"undoing operations\", that is operations that undone some other operations. For each key, the\n\t\t * value is an operation that has been undone by the \"undoing operation\".\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/history~History#_undoPairs\n\t\t */\n\t\tthis._undoPairs = new Map();\n\n\t\t/**\n\t\t * Holds all undone operations.\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_undoneOperations\n\t\t */\n\t\tthis._undoneOperations = new Set();\n\t}\n\n\t/**\n\t * Adds an operation to the history.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to add.\n\t */\n\taddOperation( operation ) {\n\t\tif ( this._operations.includes( operation ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._operations.push( operation );\n\t}\n\n\t/**\n\t * Returns operations added to the history.\n\t *\n\t * @param {Number} [from=Number.NEGATIVE_INFINITY] Base version from which operations should be returned (inclusive).\n\t * Defaults to `Number.NEGATIVE_INFINITY`, which means that operations from the first one will be returned.\n\t * @param {Number} [to=Number.POSITIVE_INFINITY] Base version up to which operations should be returned (exclusive).\n\t * Defaults to `Number.POSITIVE_INFINITY` which means that operations up to the last one will be returned.\n\t * @returns {Array.<module:engine/model/operation/operation~Operation>} Operations added to the history.\n\t */\n\tgetOperations( from = Number.NEGATIVE_INFINITY, to = Number.POSITIVE_INFINITY ) {\n\t\tconst operations = [];\n\n\t\tfor ( const operation of this._operations ) {\n\t\t\tif ( operation.baseVersion >= from && operation.baseVersion < to ) {\n\t\t\t\toperations.push( operation );\n\t\t\t}\n\t\t}\n\n\t\treturn operations;\n\t}\n\n\t/**\n\t * Returns operation from the history that bases on given `baseVersion`.\n\t *\n\t * @param {Number} baseVersion Base version of the operation to get.\n\t * @returns {module:engine/model/operation/operation~Operation|undefined} Operation with given base version or `undefined` if\n\t * there is no such operation in history.\n\t */\n\tgetOperation( baseVersion ) {\n\t\tfor ( const operation of this._operations ) {\n\t\t\tif ( operation.baseVersion == baseVersion ) {\n\t\t\t\treturn operation;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Marks in history that one operation is an operation that is undoing the other operation. By marking operation this way,\n\t * history is keeping more context information about operations, which helps in operational transformation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} undoneOperation Operation which is undone by `undoingOperation`.\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation Operation which undoes `undoneOperation`.\n\t */\n\tsetOperationAsUndone( undoneOperation, undoingOperation ) {\n\t\tthis._undoPairs.set( undoingOperation, undoneOperation );\n\t\tthis._undoneOperations.add( undoneOperation );\n\t}\n\n\t/**\n\t * Checks whether given `operation` is undoing any other operation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n\t * @returns {Boolean} `true` if given `operation` is undoing any other operation, `false` otherwise.\n\t */\n\tisUndoingOperation( operation ) {\n\t\treturn this._undoPairs.has( operation );\n\t}\n\n\t/**\n\t * Checks whether given `operation` has been undone by any other operation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n\t * @returns {Boolean} `true` if given `operation` has been undone any other operation, `false` otherwise.\n\t */\n\tisUndoneOperation( operation ) {\n\t\treturn this._undoneOperations.has( operation );\n\t}\n\n\t/**\n\t * For given `undoingOperation`, returns the operation which has been undone by it.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation\n\t * @returns {module:engine/model/operation/operation~Operation|undefined} Operation that has been undone by given\n\t * `undoingOperation` or `undefined` if given `undoingOperation` is not undoing any other operation.\n\t */\n\tgetUndoneOperation( undoingOperation ) {\n\t\treturn this._undoPairs.get( undoingOperation );\n\t}\n}\n"]}]}