{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-widget/src/verticalnavigation.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-widget/src/verticalnavigation.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-widget/src/verticalnavigation.js"],"names":["keyCodes","Rect","verticalNavigationHandler","editing","model","evt","data","arrowUpPressed","keyCode","arrowup","arrowDownPressed","arrowdown","expandSelection","shiftKey","selection","document","isForward","selectionWillShrink","range","findTextRangeFromSelection","isCollapsed","isSingleLineRange","change","writer","newPosition","end","start","newSelection","createSelection","anchor","setFocus","setSelection","stop","preventDefault","stopPropagation","startPosition","focus","getLastPosition","endPosition","getNearestNonInlineLimit","createRange","lastRangePosition","getNearestTextPosition","schema","isBefore","getFirstPosition","firstRangePosition","isAfter","direction","createRangeIn","root","walkerValueType","getWalker","previousPosition","item","type","isLimit","isInline","isBlock","position","checkChild","nextPosition","modelRange","domConverter","view","probe","modifySelection","isAtEnd","isEqual","viewRange","mapper","toViewRange","domRange","viewRangeToDom","rects","getDomRangeRects","boundaryVerticalPosition","rect","undefined","Math","round","bottom","top","max","isBackward"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\n\n/**\n * @module widget/verticalnavigationhandler\n */\n\n/**\n * Returns 'keydown' handler for up/down arrow keys that modifies the caret movement if it's in a text line next to an object.\n *\n * @param {module:engine/controller/editingcontroller~EditingController} editing The editing controller.\n * @returns {Function}\n */\nexport default function verticalNavigationHandler( editing ) {\n\tconst model = editing.model;\n\n\treturn ( evt, data ) => {\n\t\tconst arrowUpPressed = data.keyCode == keyCodes.arrowup;\n\t\tconst arrowDownPressed = data.keyCode == keyCodes.arrowdown;\n\t\tconst expandSelection = data.shiftKey;\n\t\tconst selection = model.document.selection;\n\n\t\tif ( !arrowUpPressed && !arrowDownPressed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isForward = arrowDownPressed;\n\n\t\t// Navigation is in the opposite direction than the selection direction so this is shrinking of the selection.\n\t\t// Selection for sure will not approach any object.\n\t\tif ( expandSelection && selectionWillShrink( selection, isForward ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find a range between selection and closest limit element.\n\t\tconst range = findTextRangeFromSelection( editing, selection, isForward );\n\n\t\tif ( !range || range.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the range is a single line (there is no word wrapping) then move the selection to the position closest to the limit element.\n\t\t//\n\t\t// We can't move the selection directly to the isObject element (eg. table cell) because of dual position at the end/beginning\n\t\t// of wrapped line (it's at the same time at the end of one line and at the start of the next line).\n\t\tif ( isSingleLineRange( editing, range, isForward ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\tconst newPosition = isForward ? range.end : range.start;\n\n\t\t\t\tif ( expandSelection ) {\n\t\t\t\t\tconst newSelection = model.createSelection( selection.anchor );\n\t\t\t\t\tnewSelection.setFocus( newPosition );\n\n\t\t\t\t\twriter.setSelection( newSelection );\n\t\t\t\t} else {\n\t\t\t\t\twriter.setSelection( newPosition );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tevt.stop();\n\t\t\tdata.preventDefault();\n\t\t\tdata.stopPropagation();\n\t\t}\n\t};\n}\n\n// Finds the range between selection and closest limit element (in the direction of navigation).\n// The position next to limit element is adjusted to the closest allowed `$text` position.\n//\n// Returns `null` if, according to the schema, the resulting range cannot contain a `$text` element.\n//\n// @param {module:engine/controller/editingcontroller~EditingController} editing The editing controller.\n// @param {module:engine/model/selection~Selection} selection The current selection.\n// @param {Boolean} isForward The expected navigation direction.\n// @returns {module:engine/model/range~Range|null}\n//\nfunction findTextRangeFromSelection( editing, selection, isForward ) {\n\tconst model = editing.model;\n\n\tif ( isForward ) {\n\t\tconst startPosition = selection.isCollapsed ? selection.focus : selection.getLastPosition();\n\t\tconst endPosition = getNearestNonInlineLimit( model, startPosition, 'forward' );\n\n\t\t// There is no limit element, browser should handle this.\n\t\tif ( !endPosition ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst range = model.createRange( startPosition, endPosition );\n\t\tconst lastRangePosition = getNearestTextPosition( model.schema, range, 'backward' );\n\n\t\tif ( lastRangePosition && startPosition.isBefore( lastRangePosition ) ) {\n\t\t\treturn model.createRange( startPosition, lastRangePosition );\n\t\t}\n\n\t\treturn null;\n\t} else {\n\t\tconst endPosition = selection.isCollapsed ? selection.focus : selection.getFirstPosition();\n\t\tconst startPosition = getNearestNonInlineLimit( model, endPosition, 'backward' );\n\n\t\t// There is no limit element, browser should handle this.\n\t\tif ( !startPosition ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst range = model.createRange( startPosition, endPosition );\n\t\tconst firstRangePosition = getNearestTextPosition( model.schema, range, 'forward' );\n\n\t\tif ( firstRangePosition && endPosition.isAfter( firstRangePosition ) ) {\n\t\t\treturn model.createRange( firstRangePosition, endPosition );\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n// Finds the limit element position that is closest to startPosition.\n//\n// @param {module:engine/model/model~Model} model\n// @param {<module:engine/model/position~Position>} startPosition\n// @param {'forward'|'backward'} direction Search direction.\n// @returns {<module:engine/model/position~Position>|null}\n//\nfunction getNearestNonInlineLimit( model, startPosition, direction ) {\n\tconst schema = model.schema;\n\tconst range = model.createRangeIn( startPosition.root );\n\n\tconst walkerValueType = direction == 'forward' ? 'elementStart' : 'elementEnd';\n\n\tfor ( const { previousPosition, item, type } of range.getWalker( { startPosition, direction } ) ) {\n\t\tif ( schema.isLimit( item ) && !schema.isInline( item ) ) {\n\t\t\treturn previousPosition;\n\t\t}\n\n\t\t// Stop looking for isLimit element if the next element is a block element (it is for sure not single line).\n\t\tif ( type == walkerValueType && schema.isBlock( item ) ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn null;\n}\n\n// Basing on the provided range, finds the first or last (depending on `direction`) position inside the range\n// that can contain `$text` (according to schema).\n//\n// @param {module:engine/model/schema~Schema} schema The schema.\n// @param {module:engine/model/range~Range} range The range to find the position in.\n// @param {'forward'|'backward'} direction Search direction.\n// @returns {module:engine/model/position~Position} The nearest selection range.\n//\nfunction getNearestTextPosition( schema, range, direction ) {\n\tconst position = direction == 'backward' ? range.end : range.start;\n\n\tif ( schema.checkChild( position, '$text' ) ) {\n\t\treturn position;\n\t}\n\n\tfor ( const { nextPosition } of range.getWalker( { direction } ) ) {\n\t\tif ( schema.checkChild( nextPosition, '$text' ) ) {\n\t\t\treturn nextPosition;\n\t\t}\n\t}\n}\n\n// Checks if the DOM range corresponding to the provided model range renders as a single line by analyzing DOMRects\n// (verifying if they visually wrap content to the next line).\n//\n// @param {module:engine/controller/editingcontroller~EditingController} editing The editing controller.\n// @param {module:engine/model/range~Range} modelRange The current table cell content range.\n// @param {Boolean} isForward The expected navigation direction.\n// @returns {Boolean}\n//\nfunction isSingleLineRange( editing, modelRange, isForward ) {\n\tconst model = editing.model;\n\tconst domConverter = editing.view.domConverter;\n\n\t// Wrapped lines contain exactly the same position at the end of current line\n\t// and at the beginning of next line. That position's client rect is at the end\n\t// of current line. In case of caret at first position of the last line that 'dual'\n\t// position would be detected as it's not the last line.\n\tif ( isForward ) {\n\t\tconst probe = model.createSelection( modelRange.start );\n\n\t\tmodel.modifySelection( probe );\n\n\t\t// If the new position is at the end of the container then we can't use this position\n\t\t// because it would provide incorrect result for eg caption of image and selection\n\t\t// just before end of it. Also in this case there is no \"dual\" position.\n\t\tif ( !probe.focus.isAtEnd && !modelRange.start.isEqual( probe.focus ) ) {\n\t\t\tmodelRange = model.createRange( probe.focus, modelRange.end );\n\t\t}\n\t}\n\n\tconst viewRange = editing.mapper.toViewRange( modelRange );\n\tconst domRange = domConverter.viewRangeToDom( viewRange );\n\tconst rects = Rect.getDomRangeRects( domRange );\n\n\tlet boundaryVerticalPosition;\n\n\tfor ( const rect of rects ) {\n\t\tif ( boundaryVerticalPosition === undefined ) {\n\t\t\tboundaryVerticalPosition = Math.round( rect.bottom );\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Let's check if this rect is in new line.\n\t\tif ( Math.round( rect.top ) >= boundaryVerticalPosition ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tboundaryVerticalPosition = Math.max( boundaryVerticalPosition, Math.round( rect.bottom ) );\n\t}\n\n\treturn true;\n}\n\nfunction selectionWillShrink( selection, isForward ) {\n\treturn !selection.isCollapsed && selection.isBackward == isForward;\n}\n"]}]}