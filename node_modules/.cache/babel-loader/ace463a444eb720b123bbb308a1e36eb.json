{"remainingRequest":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js?{}!/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview.js","dependencies":[{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvZWtlYmVyYXQvWWFuZGV4LkRpc2svUHJvamVsZXJpbS9CZW5pbVByb2plbGVyaW0vd2Vic2l0ZW0vd2Vic2l0ZW0td2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfZ2V0IGZyb20gIi9ob21lL2VrZWJlcmF0L1lhbmRleC5EaXNrL1Byb2plbGVyaW0vQmVuaW1Qcm9qZWxlcmltL3dlYnNpdGVtL3dlYnNpdGVtLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0IjsKaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvaG9tZS9la2ViZXJhdC9ZYW5kZXguRGlzay9Qcm9qZWxlcmltL0JlbmltUHJvamVsZXJpbS93ZWJzaXRlbS93ZWJzaXRlbS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CgovKioKICogQGxpY2Vuc2UgQ29weXJpZ2h0IChjKSAyMDAzLTIwMjEsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIEZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHBzOi8vY2tlZGl0b3IuY29tL2xlZ2FsL2NrZWRpdG9yLW9zcy1saWNlbnNlCiAqLwoKLyoqCiAqIEBtb2R1bGUgdWkvY29sb3JncmlkL2NvbG9yZ3JpZAogKi8KaW1wb3J0IFZpZXcgZnJvbSAnLi4vdmlldyc7CmltcG9ydCBDb2xvclRpbGVWaWV3IGZyb20gJy4vY29sb3J0aWxldmlldyc7CmltcG9ydCBGb2N1c1RyYWNrZXIgZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS11dGlscy9zcmMvZm9jdXN0cmFja2VyJzsKaW1wb3J0IEZvY3VzQ3ljbGVyIGZyb20gJy4uL2ZvY3VzY3ljbGVyJzsKaW1wb3J0IEtleXN0cm9rZUhhbmRsZXIgZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS11dGlscy9zcmMva2V5c3Ryb2tlaGFuZGxlcic7CmltcG9ydCAnLi4vLi4vdGhlbWUvY29tcG9uZW50cy9jb2xvcmdyaWQvY29sb3JncmlkLmNzcyc7Ci8qKgogKiBBIGdyaWQgb2Yge0BsaW5rIG1vZHVsZTp1aS9jb2xvcmdyaWQvY29sb3J0aWxlfkNvbG9yVGlsZVZpZXcgY29sb3IgdGlsZXN9LgogKgogKiBAZXh0ZW5kcyBtb2R1bGU6dWkvdmlld35WaWV3CiAqLwoKdmFyIENvbG9yR3JpZFZpZXcgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WaWV3KSB7CiAgX2luaGVyaXRzKENvbG9yR3JpZFZpZXcsIF9WaWV3KTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihDb2xvckdyaWRWaWV3KTsKCiAgLyoqCiAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiBhIGNvbG9yIGdyaWQgY29udGFpbmluZyB7QGxpbmsgbW9kdWxlOnVpL2NvbG9yZ3JpZC9jb2xvcnRpbGV+Q29sb3JUaWxlVmlldyB0aWxlc30uCiAgICoKICAgKiBAcGFyYW0ge21vZHVsZTp1dGlscy9sb2NhbGV+TG9jYWxlfSBbbG9jYWxlXSBUaGUgbG9jYWxpemF0aW9uIHNlcnZpY2VzIGluc3RhbmNlLgogICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIENvbXBvbmVudCBjb25maWd1cmF0aW9uCiAgICogQHBhcmFtIHtBcnJheS48bW9kdWxlOnVpL2NvbG9yZ3JpZC9jb2xvcmdyaWR+Q29sb3JEZWZpbml0aW9uPn0gW29wdGlvbnMuY29sb3JEZWZpbml0aW9uc10gQXJyYXkgd2l0aCBkZWZpbml0aW9ucwogICAqIHJlcXVpcmVkIHRvIGNyZWF0ZSB0aGUge0BsaW5rIG1vZHVsZTp1aS9jb2xvcmdyaWQvY29sb3J0aWxlfkNvbG9yVGlsZVZpZXcgdGlsZXN9LgogICAqIEBwYXJhbSB7TnVtYmVyfSBvcHRpb25zLmNvbHVtbnMgQSBudW1iZXIgb2YgY29sdW1ucyB0byBkaXNwbGF5IHRoZSB0aWxlcy4KICAgKi8KICBmdW5jdGlvbiBDb2xvckdyaWRWaWV3KGxvY2FsZSwgb3B0aW9ucykgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb2xvckdyaWRWaWV3KTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGxvY2FsZSk7CiAgICB2YXIgY29sb3JEZWZpbml0aW9ucyA9IG9wdGlvbnMgJiYgb3B0aW9ucy5jb2xvckRlZmluaXRpb25zIHx8IFtdOwogICAgdmFyIHZpZXdTdHlsZUF0dHJpYnV0ZSA9IHt9OwoKICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMuY29sdW1ucykgewogICAgICB2aWV3U3R5bGVBdHRyaWJ1dGUuZ3JpZFRlbXBsYXRlQ29sdW1ucyA9ICJyZXBlYXQoICIuY29uY2F0KG9wdGlvbnMuY29sdW1ucywgIiwgMWZyKSIpOwogICAgfQogICAgLyoqCiAgICAgKiBUaGUgY29sb3Igb2YgdGhlIGN1cnJlbnRseSBzZWxlY3RlZCBjb2xvciB0aWxlIGluIHtAbGluayAjaXRlbXN9LgogICAgICoKICAgICAqIEBvYnNlcnZhYmxlCiAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICovCgoKICAgIF90aGlzLnNldCgnc2VsZWN0ZWRDb2xvcicpOwogICAgLyoqCiAgICAgKiBDb2xsZWN0aW9uIG9mIHRoZSBjaGlsZCB0aWxlIHZpZXdzLgogICAgICoKICAgICAqIEByZWFkb25seQogICAgICogQG1lbWJlciB7bW9kdWxlOnVpL3ZpZXdjb2xsZWN0aW9uflZpZXdDb2xsZWN0aW9ufQogICAgICovCgoKICAgIF90aGlzLml0ZW1zID0gX3RoaXMuY3JlYXRlQ29sbGVjdGlvbigpOwogICAgLyoqCiAgICAgKiBUcmFja3MgaW5mb3JtYXRpb24gYWJvdXQgRE9NIGZvY3VzIGluIHRoZSBncmlkLgogICAgICoKICAgICAqIEByZWFkb25seQogICAgICogQG1lbWJlciB7bW9kdWxlOnV0aWxzL2ZvY3VzdHJhY2tlcn5Gb2N1c1RyYWNrZXJ9CiAgICAgKi8KCiAgICBfdGhpcy5mb2N1c1RyYWNrZXIgPSBuZXcgRm9jdXNUcmFja2VyKCk7CiAgICAvKioKICAgICAqIEluc3RhbmNlIG9mIHRoZSB7QGxpbmsgbW9kdWxlOnV0aWxzL2tleXN0cm9rZWhhbmRsZXJ+S2V5c3Ryb2tlSGFuZGxlcn0uCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAbWVtYmVyIHttb2R1bGU6dXRpbHMva2V5c3Ryb2tlaGFuZGxlcn5LZXlzdHJva2VIYW5kbGVyfQogICAgICovCgogICAgX3RoaXMua2V5c3Ryb2tlcyA9IG5ldyBLZXlzdHJva2VIYW5kbGVyKCk7CiAgICAvKioKICAgICAqIEhlbHBzIGN5Y2xpbmcgb3ZlciBmb2N1c2FibGUge0BsaW5rICNpdGVtc30gaW4gdGhlIGdyaWQuCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAcHJvdGVjdGVkCiAgICAgKiBAbWVtYmVyIHttb2R1bGU6dWkvZm9jdXNjeWNsZXJ+Rm9jdXNDeWNsZXJ9CiAgICAgKi8KCiAgICBfdGhpcy5fZm9jdXNDeWNsZXIgPSBuZXcgRm9jdXNDeWNsZXIoewogICAgICBmb2N1c2FibGVzOiBfdGhpcy5pdGVtcywKICAgICAgZm9jdXNUcmFja2VyOiBfdGhpcy5mb2N1c1RyYWNrZXIsCiAgICAgIGtleXN0cm9rZUhhbmRsZXI6IF90aGlzLmtleXN0cm9rZXMsCiAgICAgIGFjdGlvbnM6IHsKICAgICAgICAvLyBOYXZpZ2F0ZSBncmlkIGl0ZW1zIGJhY2t3YXJkcyB1c2luZyB0aGUgYXJyb3d1cCBrZXkuCiAgICAgICAgZm9jdXNQcmV2aW91czogJ2Fycm93bGVmdCcsCiAgICAgICAgLy8gTmF2aWdhdGUgZ3JpZCBpdGVtcyBmb3J3YXJkcyB1c2luZyB0aGUgYXJyb3dkb3duIGtleS4KICAgICAgICBmb2N1c05leHQ6ICdhcnJvd3JpZ2h0JwogICAgICB9CiAgICB9KTsKCiAgICBfdGhpcy5pdGVtcy5vbignYWRkJywgZnVuY3Rpb24gKGV2dCwgY29sb3JUaWxlKSB7CiAgICAgIGNvbG9yVGlsZS5pc09uID0gY29sb3JUaWxlLmNvbG9yID09PSBfdGhpcy5zZWxlY3RlZENvbG9yOwogICAgfSk7CgogICAgY29sb3JEZWZpbml0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChjb2xvcikgewogICAgICB2YXIgY29sb3JUaWxlID0gbmV3IENvbG9yVGlsZVZpZXcoKTsKICAgICAgY29sb3JUaWxlLnNldCh7CiAgICAgICAgY29sb3I6IGNvbG9yLmNvbG9yLAogICAgICAgIGxhYmVsOiBjb2xvci5sYWJlbCwKICAgICAgICB0b29sdGlwOiB0cnVlLAogICAgICAgIGhhc0JvcmRlcjogY29sb3Iub3B0aW9ucy5oYXNCb3JkZXIKICAgICAgfSk7CiAgICAgIGNvbG9yVGlsZS5vbignZXhlY3V0ZScsIGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5maXJlKCdleGVjdXRlJywgewogICAgICAgICAgdmFsdWU6IGNvbG9yLmNvbG9yLAogICAgICAgICAgaGFzQm9yZGVyOiBjb2xvci5vcHRpb25zLmhhc0JvcmRlciwKICAgICAgICAgIGxhYmVsOiBjb2xvci5sYWJlbAogICAgICAgIH0pOwogICAgICB9KTsKCiAgICAgIF90aGlzLml0ZW1zLmFkZChjb2xvclRpbGUpOwogICAgfSk7CgogICAgX3RoaXMuc2V0VGVtcGxhdGUoewogICAgICB0YWc6ICdkaXYnLAogICAgICBjaGlsZHJlbjogX3RoaXMuaXRlbXMsCiAgICAgIGF0dHJpYnV0ZXM6IHsKICAgICAgICBjbGFzczogWydjaycsICdjay1jb2xvci1ncmlkJ10sCiAgICAgICAgc3R5bGU6IHZpZXdTdHlsZUF0dHJpYnV0ZQogICAgICB9CiAgICB9KTsKCiAgICBfdGhpcy5vbignY2hhbmdlOnNlbGVjdGVkQ29sb3InLCBmdW5jdGlvbiAoZXZ0LCBuYW1lLCBzZWxlY3RlZENvbG9yKSB7CiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihfdGhpcy5pdGVtcyksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBpdGVtID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICBpdGVtLmlzT24gPSBpdGVtLmNvbG9yID09PSBzZWxlY3RlZENvbG9yOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CiAgICB9KTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQogIC8qKgogICAqIEZvY3VzZXMgdGhlIGZpcnN0IGZvY3VzYWJsZSBpbiB7QGxpbmsgI2l0ZW1zfS4KICAgKi8KCgogIF9jcmVhdGVDbGFzcyhDb2xvckdyaWRWaWV3LCBbewogICAga2V5OiAiZm9jdXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZvY3VzKCkgewogICAgICBpZiAodGhpcy5pdGVtcy5sZW5ndGgpIHsKICAgICAgICB0aGlzLml0ZW1zLmZpcnN0LmZvY3VzKCk7CiAgICAgIH0KICAgIH0KICAgIC8qKgogICAgICogRm9jdXNlcyB0aGUgbGFzdCBmb2N1c2FibGUgaW4ge0BsaW5rICNpdGVtc30uCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZm9jdXNMYXN0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmb2N1c0xhc3QoKSB7CiAgICAgIGlmICh0aGlzLml0ZW1zLmxlbmd0aCkgewogICAgICAgIHRoaXMuaXRlbXMubGFzdC5mb2N1cygpOwogICAgICB9CiAgICB9CiAgICAvKioKICAgICAqIEBpbmhlcml0RG9jCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAicmVuZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgX2dldChfZ2V0UHJvdG90eXBlT2YoQ29sb3JHcmlkVmlldy5wcm90b3R5cGUpLCAicmVuZGVyIiwgdGhpcykuY2FsbCh0aGlzKTsgLy8gSXRlbXMgYWRkZWQgYmVmb3JlIHJlbmRlcmluZyBzaG91bGQgYmUga25vd24gdG8gdGhlICNmb2N1c1RyYWNrZXIuCgoKICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLml0ZW1zKSwKICAgICAgICAgIF9zdGVwMjsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IyLnMoKTsgIShfc3RlcDIgPSBfaXRlcmF0b3IyLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBpdGVtID0gX3N0ZXAyLnZhbHVlOwogICAgICAgICAgdGhpcy5mb2N1c1RyYWNrZXIuYWRkKGl0ZW0uZWxlbWVudCk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IyLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IyLmYoKTsKICAgICAgfQoKICAgICAgdGhpcy5pdGVtcy5vbignYWRkJywgZnVuY3Rpb24gKGV2dCwgaXRlbSkgewogICAgICAgIF90aGlzMi5mb2N1c1RyYWNrZXIuYWRkKGl0ZW0uZWxlbWVudCk7CiAgICAgIH0pOwogICAgICB0aGlzLml0ZW1zLm9uKCdyZW1vdmUnLCBmdW5jdGlvbiAoZXZ0LCBpdGVtKSB7CiAgICAgICAgX3RoaXMyLmZvY3VzVHJhY2tlci5yZW1vdmUoaXRlbS5lbGVtZW50KTsKICAgICAgfSk7IC8vIFN0YXJ0IGxpc3RlbmluZyBmb3IgdGhlIGtleXN0cm9rZXMgY29taW5nIGZyb20gI2VsZW1lbnQuCgogICAgICB0aGlzLmtleXN0cm9rZXMubGlzdGVuVG8odGhpcy5lbGVtZW50KTsKICAgIH0KICAgIC8qKgogICAgICogRmlyZWQgd2hlbiB0aGUgYENvbG9yVGlsZVZpZXdgIGZvciB0aGUgcGlja2VkIGl0ZW0gaXMgZXhlY3V0ZWQuCiAgICAgKgogICAgICogQGV2ZW50IGV4ZWN1dGUKICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIEFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGV2ZW50LgogICAgICogQHBhcmFtIHtTdHJpbmd9IGRhdGEudmFsdWUgVGhlIHZhbHVlIG9mIHRoZSBzZWxlY3RlZCBjb2xvcgogICAgICogKHtAbGluayBtb2R1bGU6dWkvY29sb3JncmlkL2NvbG9yZ3JpZH5Db2xvckRlZmluaXRpb24jY29sb3IgYGNvbG9yLmNvbG9yYH0pLgogICAgICogQHBhcmFtIHtCb29sZWFufSBkYXRhLmhhc0JvcmRlciBUaGUgYGhhc0JvcmRlcmAgcHJvcGVydHkgb2YgdGhlIHNlbGVjdGVkIGNvbG9yCiAgICAgKiAoe0BsaW5rIG1vZHVsZTp1aS9jb2xvcmdyaWQvY29sb3JncmlkfkNvbG9yRGVmaW5pdGlvbiNvcHRpb25zIGBjb2xvci5vcHRpb25zLmhhc0JvcmRlcmB9KS4KICAgICAqIEBwYXJhbSB7U3RyaW5nfSBkYXRhLkxhYmVsIFRoZSBsYWJlbCBvZiB0aGUgc2VsZWN0ZWQgY29sb3IKICAgICAqICh7QGxpbmsgbW9kdWxlOnVpL2NvbG9yZ3JpZC9jb2xvcmdyaWR+Q29sb3JEZWZpbml0aW9uI2xhYmVsIGBjb2xvci5sYWJlbGB9KQogICAgICovCgogIH1dKTsKCiAgcmV0dXJuIENvbG9yR3JpZFZpZXc7Cn0oVmlldyk7Ci8qKgogKiBBIGNvbG9yIGRlZmluaXRpb24gdXNlZCB0byBjcmVhdGUgYSB7QGxpbmsgbW9kdWxlOnVpL2NvbG9yZ3JpZC9jb2xvcnRpbGV+Q29sb3JUaWxlVmlld30uCiAqCiAqCQl7CiAqCQkJY29sb3I6ICdoc2woMCwgMCUsIDc1JSknLAogKgkJCWxhYmVsOiAnTGlnaHQgR3JleScsCiAqCQkJb3B0aW9uczogewogKgkJCQloYXNCb3JkZXI6IHRydWUKICoJCQl9CiAqCQl9CiAqCiAqIEB0eXBlZGVmIHtPYmplY3R9IG1vZHVsZTp1aS9jb2xvcmdyaWQvY29sb3JncmlkfkNvbG9yRGVmaW5pdGlvbgogKiBAdHlwZSBPYmplY3QKICoKICogQHByb3BlcnR5IHtTdHJpbmd9IGNvbG9yIFN0cmluZyByZXByZXNlbnRpbmcgYSBjb2xvci4KICogSXQgaXMgdXNlZCBhcyB2YWx1ZSBvZiBiYWNrZ3JvdW5kLWNvbG9yIHN0eWxlIGluIHtAbGluayBtb2R1bGU6dWkvY29sb3JncmlkL2NvbG9ydGlsZX5Db2xvclRpbGVWaWV3fS4KICogQHByb3BlcnR5IHtTdHJpbmd9IGxhYmVsIFN0cmluZyB1c2VkIGFzIGxhYmVsIGZvciB7QGxpbmsgbW9kdWxlOnVpL2NvbG9yZ3JpZC9jb2xvcnRpbGV+Q29sb3JUaWxlVmlld30uCiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBvcHRpb25zIEFkZGl0aW9uYWwgb3B0aW9ucyBwYXNzZWQgdG8gY3JlYXRlIGEge0BsaW5rIG1vZHVsZTp1aS9jb2xvcmdyaWQvY29sb3J0aWxlfkNvbG9yVGlsZVZpZXd9LgogKiBAcHJvcGVydHkge0Jvb2xlYW59IG9wdGlvbnMuaGFzQm9yZGVyIEEgZmxhZyB0aGF0IGluZGljYXRlcyBpZiBzcGVjaWFsIGEgQ1NTIGNsYXNzIHNob3VsZCBiZSBhZGRlZAogKiB0byB7QGxpbmsgbW9kdWxlOnVpL2NvbG9yZ3JpZC9jb2xvcnRpbGV+Q29sb3JUaWxlVmlld30sIHdoaWNoIHJlbmRlcnMgYSBib3JkZXIgYXJvdW5kIGl0LgogKi8KCgpleHBvcnQgeyBDb2xvckdyaWRWaWV3IGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/home/ekeberat/Yandex.Disk/Projelerim/BenimProjelerim/websitem/websitem-web/node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview.js"],"names":["View","ColorTileView","FocusTracker","FocusCycler","KeystrokeHandler","ColorGridView","locale","options","colorDefinitions","viewStyleAttribute","columns","gridTemplateColumns","set","items","createCollection","focusTracker","keystrokes","_focusCycler","focusables","keystrokeHandler","actions","focusPrevious","focusNext","on","evt","colorTile","isOn","color","selectedColor","forEach","label","tooltip","hasBorder","fire","value","add","setTemplate","tag","children","attributes","class","style","name","item","length","first","focus","last","element","remove","listenTo"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/colorgrid\n */\n\nimport View from '../view';\nimport ColorTileView from './colortileview';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport '../../theme/components/colorgrid/colorgrid.css';\n\n/**\n * A grid of {@link module:ui/colorgrid/colortile~ColorTileView color tiles}.\n *\n * @extends module:ui/view~View\n */\nexport default class ColorGridView extends View {\n\t/**\n\t * Creates an instance of a color grid containing {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {Object} options Component configuration\n\t * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} [options.colorDefinitions] Array with definitions\n\t * required to create the {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\n\t * @param {Number} options.columns A number of columns to display the tiles.\n\t */\n\tconstructor( locale, options ) {\n\t\tsuper( locale );\n\n\t\tconst colorDefinitions = options && options.colorDefinitions || [];\n\t\tconst viewStyleAttribute = {};\n\n\t\tif ( options && options.columns ) {\n\t\t\tviewStyleAttribute.gridTemplateColumns = `repeat( ${ options.columns }, 1fr)`;\n\t\t}\n\n\t\t/**\n\t\t * The color of the currently selected color tile in {@link #items}.\n\t\t *\n\t\t * @observable\n\t\t * @type {String}\n\t\t */\n\t\tthis.set( 'selectedColor' );\n\n\t\t/**\n\t\t * Collection of the child tile views.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the grid.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the grid.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate grid items backwards using the arrowup key.\n\t\t\t\tfocusPrevious: 'arrowleft',\n\n\t\t\t\t// Navigate grid items forwards using the arrowdown key.\n\t\t\t\tfocusNext: 'arrowright'\n\t\t\t}\n\t\t} );\n\n\t\tthis.items.on( 'add', ( evt, colorTile ) => {\n\t\t\tcolorTile.isOn = colorTile.color === this.selectedColor;\n\t\t} );\n\n\t\tcolorDefinitions.forEach( color => {\n\t\t\tconst colorTile = new ColorTileView();\n\n\t\t\tcolorTile.set( {\n\t\t\t\tcolor: color.color,\n\t\t\t\tlabel: color.label,\n\t\t\t\ttooltip: true,\n\t\t\t\thasBorder: color.options.hasBorder\n\t\t\t} );\n\n\t\t\tcolorTile.on( 'execute', () => {\n\t\t\t\tthis.fire( 'execute', {\n\t\t\t\t\tvalue: color.color,\n\t\t\t\t\thasBorder: color.options.hasBorder,\n\t\t\t\t\tlabel: color.label\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tthis.items.add( colorTile );\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tchildren: this.items,\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-grid'\n\t\t\t\t],\n\t\t\t\tstyle: viewStyleAttribute\n\t\t\t}\n\t\t} );\n\n\t\tthis.on( 'change:selectedColor', ( evt, name, selectedColor ) => {\n\t\t\tfor ( const item of this.items ) {\n\t\t\t\titem.isOn = item.color === selectedColor;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tfocus() {\n\t\tif ( this.items.length ) {\n\t\t\tthis.items.first.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tif ( this.items.length ) {\n\t\t\tthis.items.last.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * Fired when the `ColorTileView` for the picked item is executed.\n\t *\n\t * @event execute\n\t * @param {Object} data Additional information about the event.\n\t * @param {String} data.value The value of the selected color\n\t * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#color `color.color`}).\n\t * @param {Boolean} data.hasBorder The `hasBorder` property of the selected color\n\t * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#options `color.options.hasBorder`}).\n\t * @param {String} data.Label The label of the selected color\n\t * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#label `color.label`})\n\t */\n}\n\n/**\n * A color definition used to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\n *\n *\t\t{\n *\t\t\tcolor: 'hsl(0, 0%, 75%)',\n *\t\t\tlabel: 'Light Grey',\n *\t\t\toptions: {\n *\t\t\t\thasBorder: true\n *\t\t\t}\n *\t\t}\n *\n * @typedef {Object} module:ui/colorgrid/colorgrid~ColorDefinition\n * @type Object\n *\n * @property {String} color String representing a color.\n * It is used as value of background-color style in {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {String} label String used as label for {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {Object} options Additional options passed to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {Boolean} options.hasBorder A flag that indicates if special a CSS class should be added\n * to {@link module:ui/colorgrid/colortile~ColorTileView}, which renders a border around it.\n */\n"]}]}